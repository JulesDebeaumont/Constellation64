{"version":3,"sources":["CV/components/Footer.js","CV/components/Contact.js","CV/components/Top.js","CV/components/Menu.js","CV/components/QuiSuisJe.js","CV/components/Competences.js","CV/components/Realisation.js","CV/components/Navbar.js","CV/components/NavbarPhone.js","CV/components/MainCV.js","DOC/components/Sections.js","DOC/components/SubMenu.js","DOC/components/Hooks/useMenu.js","DOC/components/Menu.js","DOC/components/Liens.js","DOC/components/Symfony/Installation.js","DOC/components/Prism/Highlight.js","DOC/components/Container.js","DOC/components/Symfony/files/AllQuotes.js","DOC/components/Symfony/Controller.js","DOC/components/Symfony/Doctrine.js","DOC/components/Welcome.js","DOC/components/Symfony/Twig.js","DOC/components/Symfony/User.js","DOC/components/Symfony/Migration.js","DOC/components/Symfony/Fixtures.js","DOC/components/Symfony/Formulaire.js","DOC/components/Symfony/Api.js","DOC/components/Symfony/Tests.js","DOC/components/Symfony/Conseils.js","DOC/components/React/InstallationR.js","DOC/components/React/files/AllQuotes.js","DOC/components/React/Props.js","DOC/components/React/Hooks.js","DOC/components/React/EffetBord.js","DOC/components/React/RouterR.js","DOC/components/React/Fetch.js","DOC/components/Separator.js","DOC/components/React/ReduxR.js","DOC/components/Autres/FuncJS.js","DOC/components/Autres/FuncPHP.js","DOC/components/React/Divers.js","DOC/components/React/Thunk.js","DOC/components/Autres/Bonus.js","DOC/components/SubMenuBundle.js","DOC/components/SectionBundle.js","DOC/components/Hooks/useSectionBundle.js","DOC/components/Symfony/Bundles/Easyadmin.js","DOC/components/Symfony/Bundles/Vich.js","DOC/components/Symfony/Bundles/Factory.js","DOC/components/Symfony/Bundles/Paginator.js","DOC/components/Symfony/Bundles/CSFixer.js","DOC/components/Symfony/Bundles/Grum.js","DOC/components/Symfony/Bundles/Stof.js","DOC/components/Symfony/Bundles/Liip.js","DOC/components/Symfony/Bundles/Rollerworks.js","DOC/components/Symfony/Bundles/Gregwar.js","DOC/components/Symfony/Bundles/Encore.js","DOC/components/Symfony/Bundles/MailHog.js","DOC/components/Symfony/BundleSymf.js","DOC/components/React/Bundle/FontAwesomeR.js","DOC/components/React/Bundle/ClassNamesR.js","DOC/components/React/Bundle/MD.js","DOC/components/React/Bundle/Axios.js","DOC/components/React/BundleReact.js","DOC/components/Symfony/Voters.js","DOC/components/Symfony/Event.js","DOC/components/Symfony/Console.js","DOC/components/Sequelize/files/AllQuotes.js","DOC/components/Sequelize/Bundle/Crons.js","DOC/components/Sequelize/ExtensionSequelize.js","DOC/components/Sequelize/Modeles.js","DOC/components/Sequelize/Routes.js","DOC/components/Sequelize/Mocks.js","DOC/MainDoc.js","FOLIO/components/DarkGrotto.js","FOLIO/components/Gallery.js","HUB/components/MainHub.js","App.js","index.js"],"names":["Footer","Date","getFullYear","Contact","id","className","onClick","e","href","src","alt","height","width","Top","window","open","Menu","setMenu","menu","QuiSuisJe","Competences","Realisation","useState","isSelected","setIsSelected","allItems","title","content","target","allItemsTitle","map","item","index","classNames","itemReal","toggleIsSelected","itemContent","realItemContent","blankSpace","Navbar","isTop","setIsTop","isBottom","setIsBottom","useEffect","addEventListener","handleScroll","offset","pageYOffset","innerHeight","document","body","clientHeight","navbar","NavbarPhone","isClicked","setIsClicked","menusDisplay","link","label","navbarPhone","listMenuPhone","listMenuPhoneBis","MainCV","Sections","props","name","toggle","subMenus","down","icon","faAngleDown","up","faAngleUp","Section","AllSubMenus","SubMenu","route","activated","history","useHistory","push","subMenu","liDoc","useMenu","setSubMenu","cancelAllMenus","allSection","v","i","copyMenu","toggleMenu","u","j","copySubMenu","toggleSubMenu","TitleMenu","length","Liens","url","nom","rel","Installation","Code","code","language","Prism","highlightAll","Container","text","display","setDisplay","toggleDisplay","slug","slugify","location","exempleTwig","trim","exempleController","exempleController2","appelForge","fixtureJson","fixtureDependance","factoryEncoder","factoryExemple","fixturesEncoder","fixturesImage","buildForm","apiAnnot","assertSame","mock","easyAdminDashboard","easyAdminCrud","vichConfig","vichAttributs","vichMethodes","vichInEasyAdmin","denormalizer","functionnalTestContent","functionnalTestContentContainer","functionnalTestDebug","composerReset","composerTest","csFixerScript","fixtureDependanceAlt","grumConfig","paginatorConfig","paginatorController","paginatorTwig","stofConfig","sluggable","blameable","liipConfig","liipUse","rollerworks","gregwar","voter1","voter2","voter3","eventController","eventEvent","eventSubscriber","encore","command","onDelete","mailHog","mailHogConfig","mailHogController","Controller","Doctrine","Welcome","Twig","User","Migration","Fixtures","Formulaire","Api","Tests","Conseils","InstallationR","preventDefault","fetchExemple","fetchUseEffect","exempleRouter","routerUseParam","exempleLink","exempleHistoryPush","store","sliceExemple","sliceActionExemple","OjbectToArray","exempleClassNames1","exempleClassNames2","mardkDownItExemple","arborescence","cookies","arrayJS","formJs","storeRacine","thunkSlice","thunkDelete","fetchParam","propsTypesEx","propsEx1","propsEx2","hooks1","hooks2","useEffect1","fetchParam2","ternaire1","axios1","axios2","Props","Hooks","EffetBord","RouterR","Fetch","Separator","ReduxR","FuncJS","FuncPHP","Divers","Thunk","Bonus","SubMenuBundle","SectionBundle","subMenuBundle","useSectionBundle","setSubMenuBundle","allBundleSection","copySubMenuBundle","toggleSubMenuBundle","Easyadmin","Vich","Factory","Paginator","CSFixer","Grum","Stof","Liip","Rollerworks","Gregwar","Encore","MailHog","BundleSymf","path","FontAwesomeR","ClassNamesR","MD","Axios","BundleReact","Voters","Event","Console","cron1","cron2","modele1","route1","route2","route3","route4","Crons","ExtensionSequelize","Modeles","Routes","Mocks","MainDoc","DarkGrotto","Gallery","allItemLinks","image","imageAlt","color","component","style","backgroundImage","allRoutes","MainHub","exact","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1218ad85.chunk.js","sourcesContent":["export function Footer()\r\n{\r\n    return(\r\n\t\t<>\r\n\t\t\t<footer>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tSite par Jules Debeaumont | OST {new Date().getFullYear()} &copy; Tous droits réservés\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\t\t</>\r\n\t\t\r\n    );\r\n}\r\n\r\nexport default Footer;","import { useState } from 'react';\r\nimport { Footer } from './Footer';\r\n\r\nexport function Contact() {\r\n\r\n\r\n\tfunction copyToClipboard(e) {\r\n\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section id=\"contactSection\">\r\n\t\t\t\t<div className=\"titleSection\">Contact</div>\r\n\r\n\t\t\t\t<div className=\"mainContact\">\r\n\r\n\t\t\t\t\t<div className=\"startContact\">\r\n\t\t\t\t\t\t<p>Tél : 06.76.54.94.29</p>\r\n\t\t\t\t\t\t<p onClick={copyToClipboard}>Email : <span className=\"regularFont\">deb.jules@outlook.fr</span></p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"moreContact\">\r\n\t\t\t\t\t\t<div className=\"caseContact\">\r\n\t\t\t\t\t\t\t<div className=\"caseTitleContact\">\r\n\t\t\t\t\t\t\t\t<a href=\"https://www.linkedin.com/in/jules-debeaumont-a30284220/\">\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tsrc=\"images/linkedin.png\"\r\n\t\t\t\t\t\t\t\t\t\talt=\"LinkedIn icône\"\r\n\t\t\t\t\t\t\t\t\t\theight=\"100px\"\r\n\t\t\t\t\t\t\t\t\t\twidth=\"100px\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"caseContact\">\r\n\t\t\t\t\t\t\t<div className=\"caseTitleContact\">\r\n\t\t\t\t\t\t\t\t<a href=\"https://github.com/JulesDebeaumont\">\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tsrc=\"images/github.png\"\r\n\t\t\t\t\t\t\t\t\t\talt=\"GitHub icône\"\r\n\t\t\t\t\t\t\t\t\t\theight=\"100px\"\r\n\t\t\t\t\t\t\t\t\t\twidth=\"100px\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"blankSpace\" />\r\n\r\n\t\t\t\t<Footer />\r\n\t\t\t</section>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Contact;","export function Top() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"first\">\r\n\t\t\t\t<div className=\"links\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><a href='#quiSuisJe'>Qui suis-je ?</a></li>\r\n\t\t\t\t\t\t<li><a href='#competences'>Compétences</a></li>\r\n\t\t\t\t\t\t<li><a href='#realisation'>Réalisations</a></li>\r\n\t\t\t\t\t\t<li><a href='#contact'>Contact</a></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"main-title\">\r\n\t\t\t\t\t<h1>Jules Debeaumont</h1>\r\n\t\t\t\t\t<h2>Développeur Web</h2>\r\n\t\t\t\t\t<h3>Full-Stack</h3>\r\n\r\n\t\t\t\t\t<div className=\"download\">\r\n\t\t\t\t\t\t<a onClick={() => window.open(\"./CVDebeaumontJules.pdf\", '_blank')}>Télécharger le CV</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\r\n\t);\r\n}\r\n\r\nexport default Top;","import classNames from 'classnames';\r\n\r\nexport function Menu({ setMenu, menu }) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"SeparatorCV\">\r\n\t\t\t</div>\r\n\t\t</>\r\n\r\n\t);\r\n}\r\n\r\nexport default Menu;","export function QuiSuisJe() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section id=\"quiSuisJeSection\">\r\n\t\t\t\t<div className=\"titleSection\">Qui suis-je ?</div>\r\n\t\t\t\t<div className=\"noBg\">\r\n\t\t\t\t\t<p className=\"introFirst\">Bonjour !</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tJe m'appelle Jules Debeaumont, j'ai 27 ans, je viens de Reims (51).<br />\r\n\t\t\t\t\t\tJe suis titulaire d'un DUT Informatique (BAC +2), spécialisé dans le web.<br />\r\n\t\t\t\t\t\tInitialement issu du monde industriel, je suis aujourd'hui reconverti dans le développement de site et d'application.<br />\r\n\t\t\t\t\t\tPassionné par la modélisation 3D, je crée des environnements pour des illustrations et des\r\n\t\t\t\t\t\tjeux rétros sur mon temps libre.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p className=\"question\">Qu'est ce que je recherche ?</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tJe suis actuellement à la recherche d'un poste en tant que\r\n\t\t\t\t\t\t<strong className=\"important\"> Développeur Web Full-Stack</strong>.<br />\r\n\t\t\t\t\t\tCréer des interfaces intéractives et intuitives, mettre en place des APIs et des\r\n\t\t\t\t\t\tbases de données réfléchies sont mes principaux objectifs.<br />\r\n\t\t\t\t\t\tJ'accorde également\tbeaucoup d'attention aux détails.<br />\r\n\r\n\t\t\t\t\t\t<br /><br />\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default QuiSuisJe;","export function Competences() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section id=\"competencesSection\">\r\n\t\t\t\t<div className=\"titleSection\">Compétences</div>\r\n\r\n\t\t\t\t{/* \r\n\t\t\t\t<div className=\"noBg\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tQue ce soit au niveau du développement coté client ou coté serveur,\r\n\t\t\t\t\t\tj'ai tendance à beaucoup utilisé le&nbsp;<strong className=\"important\">JavaScript</strong>.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tJe suis également à l'aise avec les méthodes agiles.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t */}\r\n\r\n\t\t\t\t<span className=\"allCases\">\r\n\t\t\t\t\t<div className=\"row1\">\r\n\t\t\t\t\t\t<div className=\"case\">\r\n\t\t\t\t\t\t\t<div className=\"caseTitle\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\tFront-End\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>React / React Native</li>\r\n\t\t\t\t\t\t\t\t\t<li>Angular</li>\r\n\t\t\t\t\t\t\t\t\t<li>Site responsives (Bootstrap / Flexbox)</li>\r\n\t\t\t\t\t\t\t\t\t<li>Redux</li>\r\n\t\t\t\t\t\t\t\t\t<li>Material-UI</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"case\">\r\n\t\t\t\t\t\t\t<div className=\"caseTitle\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\tBack-End\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>Symfony</li>\r\n\t\t\t\t\t\t\t\t\t<li>PHP Unit</li>\r\n\t\t\t\t\t\t\t\t\t<li>API Platform</li>\r\n\t\t\t\t\t\t\t\t\t<li>NodeJs</li>\r\n\t\t\t\t\t\t\t\t\t<li>Sequelize</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row2\">\r\n\t\t\t\t\t\t<div className=\"case2\">\r\n\t\t\t\t\t\t\t<div className=\"caseTitle\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\tLanguages & Codes\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>JavaScript</li>\r\n\t\t\t\t\t\t\t\t\t<li>PHP</li>\r\n\t\t\t\t\t\t\t\t\t<li>SQL</li>\r\n\t\t\t\t\t\t\t\t\t<li>HTML & CSS</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"case2\">\r\n\t\t\t\t\t\t\t<div className=\"caseTitle\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\tLogiciels & Applications\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>Git</li>\r\n\t\t\t\t\t\t\t\t\t<li>WordPress</li>\r\n\t\t\t\t\t\t\t\t\t<li>Figma</li>\r\n\t\t\t\t\t\t\t\t\t<li>Access</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</span>\r\n\t\t\t</section>\r\n\t\t</>\r\n\r\n\t);\r\n}\r\n\r\nexport default Competences;","import { useState } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport function Realisation() {\r\n\tconst [isSelected, setIsSelected] = useState(null);\r\n\r\n\tconst allItems = [\r\n\t\t{\r\n\t\t\ttitle: \"GestTested\",\r\n\t\t\tcontent:\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"realDescr\">\r\n\t\t\t\t\t\tApplication développée pour l'\r\n\t\t\t\t\t\t<a href=\"http://af-laon.fr/site_new/tcf_info.php\" target=\"_blank\">\r\n\t\t\t\t\t\t\t<strong className=\"important\">Alliance Française de Laon</strong>\r\n\t\t\t\t\t\t</a>.<br />\r\n\t\t\t\t\t\tIl s'agit d'un site de gestion d'inscription à des concours de langues.\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"separator\" />\r\n\r\n\t\t\t\t\t<div className=\"row3\">\r\n\t\t\t\t\t\t<div className=\"realTechno\">\r\n\t\t\t\t\t\t\t<span>Outils utilisés :</span>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li>React</li>\r\n\t\t\t\t\t\t\t\t<li>Material-UI</li>\r\n\t\t\t\t\t\t\t\t<li>Node.js</li>\r\n\t\t\t\t\t\t\t\t<li>Sequelize</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"realLinks\">\r\n\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{/* <a href=\"www.getTested.online\">Accéder au site</a> */}\r\n\t\t\t\t\t\t\t\t<a>Site en construction</a>\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t}, {\r\n\t\t\ttitle: \"Ultimate PDF\",\r\n\t\t\tcontent:\r\n\t\t\t\t<>\r\n\r\n\t\t\t\t\t<div className=\"realDescr\">\r\n\t\t\t\t\t\tDocumentation personnelle créée durant ma reconversion professionnelle.\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"separator\" />\r\n\r\n\t\t\t\t\t<div className=\"row3\">\r\n\t\t\t\t\t\t<div className=\"realTechno\">\r\n\t\t\t\t\t\t\t<span>Outils utilisés :</span>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li>React</li>\r\n\t\t\t\t\t\t\t\t<li>Prism</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"realLinks\">\r\n\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<a href=\"/doc\">Accéder au site</a>\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</>\r\n\t\t}, {\r\n\t\t\ttitle: \"Be Your Chef\",\r\n\t\t\tcontent:\r\n\t\t\t\t<>\r\n\r\n\t\t\t\t\t<div className=\"realDescr\">\r\n\t\t\t\t\t\tApplication développée avec React et Symfony dans le cadre du DUT.\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"separator\" />\r\n\r\n\t\t\t\t\t<div className=\"row3\">\r\n\t\t\t\t\t\t<div className=\"realTechno\">\r\n\t\t\t\t\t\t\t<span>Outils utilisés :</span>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li>React</li>\r\n\t\t\t\t\t\t\t\t<li>Symfony</li>\r\n\t\t\t\t\t\t\t\t<li>Doctrine</li>\r\n\t\t\t\t\t\t\t\t<li>API Platform</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"realLinks\">\r\n\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<a href=\"https://github.com/JulesDebeaumont/Be-Your-Chief-React#readme\">Accéder au GitHub Front</a>\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<a href=\"https://github.com/JulesDebeaumont/Be-Your-Chief-Symfony#readme\">Accéder au GitHub Back</a>\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</>\r\n\t\t}\r\n\t];\r\n\r\n\tconst allItemsTitle = allItems.map((item, index) =>\r\n\t\t<div\r\n\t\t\tclassName={classNames({ itemReal: true }, { \"realSelectedItem\": isSelected === index })}\r\n\t\t\tonClick={() => toggleIsSelected(index)}\r\n\t\t\tkey={item.title}\r\n\t\t>\r\n\t\t\t{item.title}\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst itemContent =\r\n\t\t<>\r\n\t\t\t<>\r\n\t\t\t\t<div className={classNames({ realItemContent: true })}>\r\n\t\t\t\t\t{allItems[isSelected]?.content || <div className=\"blankSpace\" />}\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t</>;\r\n\r\n\tfunction toggleIsSelected(index) {\r\n\t\tif (isSelected === index) {\r\n\t\t\tsetIsSelected(null);\r\n\t\t} else {\r\n\t\t\tsetIsSelected(index);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<section id=\"realisationSection\">\r\n\t\t\t\t<div className=\"titleSection\">Réalisations</div>\r\n\t\t\t\t<div className=\"blankSpace2\" />\r\n\r\n\t\t\t\t<div className=\"row1\">\r\n\t\t\t\t\t{allItemsTitle}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"row1\">\r\n\t\t\t\t\t{itemContent}\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div className={classNames({ blankSpace: true }, { \"hidden\": isSelected === null })} />\r\n\r\n\t\t\t\t<div className=\"blankSpace\" />\r\n\t\t\t</section>\r\n\t\t</>\r\n\r\n\t);\r\n}\r\n\r\nexport default Realisation;","import { useState, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport function Navbar() {\r\n    const [isTop, setIsTop] = useState(true);\r\n    const [isBottom, setIsBottom] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n      });\r\n\r\n    const handleScroll = () => {\r\n        const offset = window.pageYOffset;\r\n        if (offset > window.innerHeight) setIsTop(false);\r\n        if (offset <= window.innerHeight) setIsTop(true);\r\n        // -20 pour une petite marge\r\n        if (offset >= (document.body.clientHeight - window.innerHeight -30)) setIsBottom(true);\r\n        if (offset < (document.body.clientHeight - window.innerHeight -30)) setIsBottom(false);\r\n    }\r\n\r\n    return (\r\n        <div className={classNames({ navbar: true }, { \"hidden\" : isTop === true })}>\r\n            <div className={classNames({ \"linksNavbar\": isBottom === false }, { \"linksNavbar2\" : isBottom === true })}>\r\n                    <div className=\"titleNavbar\">\r\n                    Jules Debeaumont | OST\r\n                    </div>\r\n\t\t\t\t\t<ul>\r\n                        <li><a href='#acceuil'>Accueil</a></li>\r\n\t\t\t\t\t\t<li><a href='#quiSuisJe'>Qui suis-je ?</a></li>\r\n\t\t\t\t\t\t<li><a href='#competences'>Compétences</a></li>\r\n\t\t\t\t\t\t<li><a href='#realisation'>Réalisations</a></li>\r\n\t\t\t\t\t\t<li><a href='#contact'>Contact</a></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import classNames from 'classnames';\r\nimport { useState } from 'react';\r\n\r\nexport function NavbarPhone() {\r\n    const [isClicked, setIsClicked] = useState(false);\r\n\r\n    const menus = [\r\n        {\r\n            link: \"#acceuil\",\r\n            label: \"Accueil\"\r\n        },\r\n        {\r\n            link: \"#quiSuisJe\",\r\n            label: \"Qui suis-je ?\"\r\n        },\r\n        {\r\n            link: \"#competences\",\r\n            label: \"Compétences\"\r\n        },\r\n        {\r\n            link: \"#realisation\",\r\n            label: \"Réalisations\"\r\n        },\r\n        {\r\n            link: \"#contact\",\r\n            label: \"Contact\"\r\n        }\r\n    ];\r\n\r\n    function toggleIsClicked() {\r\n        if (isClicked === true) {\r\n            setIsClicked(false);\r\n        } else {\r\n            setIsClicked(true);\r\n        }\r\n    }\r\n\r\n    const menusDisplay = menus.map((menu) =>\r\n        <li key={menu.label}><a href={menu.link}>{menu.label}</a></li>\r\n    );\r\n\r\n    return (\r\n        <div\r\n            className={classNames({ navbarPhone: true }, { \"navbarPhoneOpen\": isClicked === true })}\r\n            onClick={() => toggleIsClicked()}\r\n        >\r\n            <img\r\n                src=\"images/menu.png\"\r\n                alt=\"Menu icône\"\r\n                height=\"40px\"\r\n                width=\"40px\"\r\n            />\r\n\r\n            <ul className={classNames({ listMenuPhone: true }, { listMenuPhoneBis: isClicked === true }, { \"hidden\": isClicked === false })}>\r\n                {menusDisplay}\r\n            </ul>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavbarPhone;","import { Contact } from './Contact';\r\nimport { Top } from './Top';\r\nimport { Menu } from './Menu';\r\nimport { QuiSuisJe } from './QuiSuisJe';\r\nimport { Competences } from './Competences';\r\nimport { Realisation } from './Realisation';\r\nimport { Navbar } from './Navbar';\r\nimport { NavbarPhone } from './NavbarPhone';\r\nimport '../CV.css'\r\n\r\nexport function MainCV() {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <NavbarPhone />\r\n            <div className=\"first\" id=\"acceuil\">\r\n                <Top />\r\n            </div>\r\n            <div className=\"parts\">\r\n                <div className=\"firstFont\">\r\n                    <div className=\"SeparatorCV2\" />\r\n                    <div id=\"quiSuisJe\"><QuiSuisJe /></div>\r\n                    <div className=\"SeparatorCV2\" />\r\n                    <div id=\"competences\"><Competences /></div>\r\n                    <div className=\"SeparatorCV2\" />\r\n                    <div id=\"realisation\"><Realisation /></div>\r\n                </div>\r\n                <Menu />\r\n                <div id=\"contact\"><Contact /></div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainCV;","import classNames from 'classnames';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport function Sections(props)\r\n{\r\n    const { name, toggle, menu, subMenus } = props;\r\n    const down = <FontAwesomeIcon icon={faAngleDown} />\r\n    const up = <FontAwesomeIcon icon={faAngleUp} />\r\n\r\n    return( \r\n            <>\r\n                <div \r\n                onClick={() => toggle()}\r\n                className={classNames({Section: !menu}, {'selectedSection': menu})}>\r\n                    <span >{name}</span>\r\n                    {menu === true ? up : down }\r\n                </div>\r\n                <ul className={classNames({AllSubMenus: menu}, { 'hidden': !menu })}>\r\n                            {subMenus}\r\n                </ul>\r\n            </>\r\n    );\r\n}\r\n\r\nSections.propTypes =\r\n{\r\n    name: PropTypes.string,\r\n    toggle: PropTypes.func,\r\n    menu: PropTypes.bool,\r\n    subMenus: PropTypes.array,\r\n}\r\n\r\nexport default Sections;","import { useHistory } from \"react-router-dom\";\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport function SubMenu(props) {\r\n    const { name, route, onClick, activated } = props;\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <li\r\n            onClick={() => {\r\n                onClick();\r\n                history.push(`${route}`)\r\n            }}\r\n            className={classNames({ subMenu: true }, { liDoc: true }, { \"selectedSub\": activated })}>{name}</li>\r\n    );\r\n}\r\n\r\nSubMenu.propTypes =\r\n{\r\n    name: PropTypes.string,\r\n    route: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    activated: PropTypes.bool,\r\n}\r\nexport default SubMenu;","import { useState } from 'react';\r\nimport Sections from '../Sections.js';\r\nimport SubMenu from '../SubMenu.js';\r\n\r\nexport function useMenu() {\r\n    const [menu, setMenu] = useState([]);\r\n    const [subMenu, setSubMenu] = useState([]);\r\n\r\n    function toggleMenu(i) {\r\n        if (menu[i]) {\r\n            cancelAllMenus();\r\n        }\r\n        else {\r\n            let copyMenu = menu.map(v => v = false);\r\n            copyMenu[i] = true;\r\n            setSubMenu([]);\r\n            setMenu(copyMenu);\r\n        }\r\n    }\r\n\r\n    function cancelAllMenus() {\r\n        setMenu([]);\r\n        setSubMenu([]);\r\n    }\r\n\r\n    function toggleSubMenu(i) {\r\n        let copySubMenu = subMenu.map(v => v = false);\r\n        copySubMenu[i] = true;\r\n\r\n        setSubMenu(copySubMenu);\r\n    }\r\n\r\n\r\n    const allMenus = [\r\n        {\r\n            name: \"Symfony\",\r\n            subMenus: [\r\n                {\r\n                    name: \"Installation\",\r\n                    route: \"/doc/symfony/installation\"\r\n                },\r\n                {\r\n                    name: \"Controller\",\r\n                    route: \"/doc/symfony/Controller\"\r\n                },\r\n                {\r\n                    name: \"Twig\",\r\n                    route: \"/doc/symfony/Twig\"\r\n                },\r\n                {\r\n                    name: \"Doctrine\",\r\n                    route: \"/doc/symfony/Doctrine\"\r\n                },\r\n                {\r\n                    name: \"User\",\r\n                    route: \"/doc/symfony/User\"\r\n                },\r\n                {\r\n                    name: \"Migration\",\r\n                    route: \"/doc/symfony/Migration\"\r\n                },\r\n                {\r\n                    name: \"Fixtures\",\r\n                    route: \"/doc/symfony/Fixtures\"\r\n                },\r\n                {\r\n                    name: \"Formulaire\",\r\n                    route: \"/doc/symfony/Formulaire\"\r\n                },\r\n                {\r\n                    name: \"API\",\r\n                    route: \"/doc/symfony/Api\"\r\n                },\r\n                {\r\n                    name: \"PHP Unit\",\r\n                    route: \"/doc/symfony/Tests\"\r\n                },\r\n                {\r\n                    name: \"Voters\",\r\n                    route: \"/doc/symfony/Voters\"\r\n                },\r\n                {\r\n                    name: \"Event\",\r\n                    route: \"/doc/symfony/Event\"\r\n                },\r\n                {\r\n                    name: \"Console\",\r\n                    route: \"/doc/symfony/Console\"\r\n                },\r\n                {\r\n                    name: \"Conseils\",\r\n                    route: \"/doc/symfony/Conseils\"\r\n                },\r\n                {\r\n                    name: \"Bundles\",\r\n                    route: \"/doc/symfony/Bundle\"\r\n                }\r\n            ]\r\n        },\r\n\r\n        {\r\n            name: \"React\",\r\n            subMenus: [\r\n                {\r\n                    name: \"Installation\",\r\n                    route: \"/doc/React/InstallationR\"\r\n                },\r\n                {\r\n                    name: \"Props\",\r\n                    route: \"/doc/React/Props\"\r\n                },\r\n                {\r\n                    name: \"Hooks\",\r\n                    route: \"/doc/React/Hooks\"\r\n                },\r\n                {\r\n                    name: \"Effet de bord\",\r\n                    route: \"/doc/React/EffetBord\"\r\n                },\r\n                {\r\n                    name: \"Router\",\r\n                    route: \"/doc/React/RouterR\"\r\n                },\r\n                {\r\n                    name: \"Fetch\",\r\n                    route: \"/doc/React/Fetch\"\r\n                },\r\n                {\r\n                    name: \"Redux\",\r\n                    route: \"/doc/React/ReduxR\"\r\n                },\r\n                {\r\n                    name: \"Thunk\",\r\n                    route: \"/doc/React/Thunk\"\r\n                },\r\n                {\r\n                    name: \"Divers\",\r\n                    route: \"/doc/React/Divers\"\r\n                },\r\n                {\r\n                    name: \"Bundle\",\r\n                    route: \"/doc/React/Bundle\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: \"Sequelize\",\r\n            subMenus: [\r\n                {\r\n                    name: \"Modèle BD\",\r\n                    route: \"/doc/Sequelize/Modeles\"\r\n                },\r\n                {\r\n                    name: \"Routes\",\r\n                    route: \"/doc/Sequelize/Routes\"\r\n                },\r\n                {\r\n                    name: \"Mocks\",\r\n                    route: \"/doc/Sequelize/Mocks\"\r\n                },\r\n                {\r\n                    name: \"Extensions Node.js\",\r\n                    route: \"/doc/Sequelize/Extensions\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: \"Autres\",\r\n            subMenus: [\r\n                {\r\n                    name: \"Fonctions JavaScript\",\r\n                    route: \"/doc/Autres/FuncJS\"\r\n                },\r\n                {\r\n                    name: \"Fonctions PHP\",\r\n                    route: \"/doc/Autres/FuncPHP\"\r\n                },\r\n                {\r\n                    name: \"Bonus\",\r\n                    route: \"/doc/Autres/Bonus\"\r\n                }\r\n            ]\r\n        },\r\n    ];\r\n\r\n\r\n    let allSection = allMenus.map((v, i) =>\r\n        <li key={i} className=\"liDoc\">\r\n            <Sections\r\n                name={v.name}\r\n                toggle={() => toggleMenu(i)}\r\n                menu={menu[i]}\r\n                subMenus={\r\n                    v.subMenus.map((u, j) =>\r\n                            <SubMenu\r\n                                name={u.name}\r\n                                route={u.route}\r\n                                onClick={() => toggleSubMenu(j)}\r\n                                activated={subMenu[j]}\r\n                                key={u.name}/>)} />\r\n        </li>);\r\n\r\n    return { menu, cancelAllMenus, allSection };\r\n\r\n}\r\n\r\nexport default useMenu;\r\n","import classNames from 'classnames';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useMenu from './Hooks/useMenu.js';\r\n\r\nexport function Menu() {\r\n    \r\n    const { menu, cancelAllMenus, allSection } = useMenu();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div className=\"Menu\">\r\n            <div className=\"scroll hide-scrollbar\">\r\n                <div className={classNames({ TitleMenu: true }, { \"selectedSection\": (menu.length === 0) })}>\r\n                    <span className=\"TitreMenu\" onClick={() => { cancelAllMenus(); history.push('/doc') }}>Ultimate PDF</span>\r\n                </div>\r\n                <ul>\r\n                    {allSection}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;","export function Liens(props)\r\n{\r\n\r\n    const { url, nom } = props;\r\n\r\n    return(\r\n           <a className=\"Docu\" href={url} target=\"_blank\" rel=\"noreferrer\">{nom}</a>\r\n        );\r\n}\r\n\r\nexport default Liens;","import Liens from '../Liens'\r\n\r\nexport function Installation() {\r\n\r\n    return (\r\n        <div className=\"Page\">\r\n            <h1 className=\"TitlePage\"> Installation Symfony</h1>\r\n\r\n            <div className=\"DocuSection\">\r\n                 <Liens url=\"https://symfony.com/doc/current/setup.html\" nom=\"Documentation Installation\"/>\r\n            </div>\r\n\r\n            <div>• Créer projet symfony : <div className=\"Quote\"> composer create-project symfony/skeleton leNom </div></div>\r\n            <div>• Installer composer pour le projet symfony : <div className=\"Quote\">composer install</div></div>\r\n            <div>• Mettre à jour composer : <div className=\"Quote\">composer update</div></div>\r\n            <div>• Lancer serveur symfony :  <div className=\"Quote\">symfony serve</div></div>\r\n            <div>• Lancer serveur symfony BIS : <div className=\"Quote\">php -S 127.0.0.1:8000 -t public</div> </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Installation;","import React, { useEffect } from \"react\";\r\nimport Prism from \"prismjs\";\r\n\r\nexport default function Code({ code, language }) {\r\n  useEffect(() => {\r\n    Prism.highlightAll();\r\n  }, []);\r\n  return (\r\n    <div className=\"Code\">\r\n      <pre>\r\n        <code className={`language-${language}`}>{code}</code>\r\n      </pre>\r\n    </div>\r\n  );\r\n}","import { useState } from 'react';\r\nimport Highlight from './Prism/Highlight'\r\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport slugify from 'react-slugify';\r\n\r\nexport function Container(props)\r\n{\r\n\r\n    const down = <FontAwesomeIcon icon={faAngleDown} />\r\n    const up = <FontAwesomeIcon icon={faAngleUp} />\r\n\r\n    const { text, code, language} = props;\r\n\r\n    const [display, setDisplay] = useState(true);\r\n\r\n    function toggleDisplay()\r\n    {\r\n        display === true ? setDisplay(false) : setDisplay(true);\r\n    }\r\n\r\n    // redirection vers eux-même avec le id et window.location quand insert dans le DOM\r\n    const slug = slugify(text);\r\n\r\n    return(\r\n        <div id={slug} className=\"container\">\r\n            {display === true?\r\n            <div onClick={() => {toggleDisplay(); window.location=`#${slug}`;}}>• {text} :\r\n            <span className=\"arrow\">{down}</span></div> \r\n            : \r\n            <>\r\n            <div onClick={() => toggleDisplay() }>• {text} \r\n            <span className=\"arrow\">{up}</span></div> \r\n            <Highlight code={code} language={language}/>\r\n            </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Container;","export const exempleTwig =`\r\n{%  extends \"base.html.twig\" %}\r\n{% block body %}\r\n\r\n<h1>Liste des citations\r\n    <span> ({{ pagination.getTotalItemCount }})</span>\r\n</h1>\r\n\r\n<ul>\r\n\r\n{% for quote in pagination.items %}\r\n<li>\r\n    <span class=\"content\">{{ quote.content }}</span>\r\n\r\n    <span class=\"meta\">\r\n        --{{ quote.meta }}\r\n\r\n        {% if is_granted('IS_AUTHENTICATED_FULLY') %}\r\n        <a href=\"{{ path('quote_modifier', {'id' : quote.id}) }}\">Modifier</a>\r\n        |\r\n        <a href=\"{{ path('quote_supprimer', {'id' : quote.id}) }}\">Supprimer</a>\r\n\r\n        {% endif %}\r\n        |\r\n        <a class=\"badge badge-primary\" \r\n        href=\"{{ path('category_show', {'id' : quote.category.id}) }}\">\r\n        {{quote.category.name}}</a>\r\n\r\n    </span>\r\n\r\n</li>\r\n{%  endfor  %}\r\n\r\n</ul>\r\n\r\n<div class=\"navigation\">\r\n    {{ knp_pagination_render(pagination) }}\r\n</div>\r\n\r\n\r\n{% endblock %}\r\n\r\n\r\n`.trim()\r\n\r\n\r\n\r\nexport const exempleController = `\r\n/**\r\n * @Route(\"/quotes\", name=\"quote_index\")\r\n */\r\npublic function index(PaginatorInterface $paginator, Request $request): Response\r\n{\r\n    // getRepository ici sert à accéder à l'ensemble des instances\r\n    // de la classe qu'elle reçoit en paramètre.\r\n    $repositoryQuote = $this->getDoctrine()->getRepository(Quote::class);\r\n\r\n    // Ici on stock la requête d'un utilisateur sur ce controller\r\n    // s'il en existe une avec le paramètre Request $request.\r\n    $research = $request->query->get('research');\r\n    $research = \"%{$research}%\";\r\n\r\n    // Les queryBuilders permettent directement d'intérroger une BD\r\n    // sans passer par un language spécifique (SQL / Oracle ...).\r\n    $query = $repositoryQuote->createQueryBuilder('q')\r\n          ->where('q.content LIKE :research')\r\n          ->setParameter('research', $research)\r\n          ->orderBy('q.meta', 'ASC')\r\n          ->getQuery();\r\n\r\n    // On utilise getResult pour stocker les résultats de la requête\r\n    // dans une variable.\r\n    $quotes = $query->getResult();\r\n    \r\n    // On donnera la variable $quotes à la vue indiquer\r\n    // que l'on pourra appeler quotes dans le template twig.\r\n    return $this->render('quote/index.html.twig', ['quotes' => $quotes]);\r\n}\r\n\r\n\r\n`.trim()\r\n\r\n\r\nexport const exempleController2 =`\r\n/**\r\n * @Route(\"/quotes/{id}/modifier\", name=\"quote_modifier\")\r\n */\r\npublic function modifier(Quote $quote, Request $request) : Response\r\n{\r\n    // Action autorisé seulement si l'utilisateur est connecter.\r\n    $this->denyAccessUnlessGranted('IS_AUTHENTICATED_FULLY'); \r\n\r\n    // La même chose peut-être utiliser pour les admins\r\n    // $this->denyAccessUnlessGranted('ROLE_ADMIN');\r\n\r\n    // Le getManager permet d'interagir avec les entitées\r\n    // Ici on veut modifier une Quote de la BD.\r\n    $quoteManager = $this->getDoctrine()->getManager();\r\n    $form = $this->createForm(QuoteModifyFormType::class, $quote);\r\n\r\n    $form->handleRequest($request);\r\n\r\n    if ($form->isSubmitted() && $form->isValid()) {\r\n        $quote = $form->getData();\r\n        $quoteManager->flush();\r\n\r\n        // Redirection vers la route quote_index, avec réponse 301\r\n        return $this->redirectToRoute('quote_index', [], 301);\r\n    }\r\n\r\n    return $this->render('quote/modifier.html.twig', ['quote' => $quote, 'form' => $form->createView()]);\r\n}\r\n\r\n`.trim()\r\n\r\n\r\n\r\nexport const appelForge =`\r\nclass QuoteFixtures extends Fixture\r\n{\r\n    public function load(ObjectManager $manager)\r\n    {\r\n        QuoteFactory::createMany(20);\r\n    }\r\n}\r\n`.trim()\r\n\r\n\r\nexport const faker =`\r\nfinal class UserFactory extends ModelFactory\r\n{\r\n    protected function getDefaults(): array\r\n    {\r\n        return [\r\n            \"name\" => self::faker()->name,\r\n            \"password\" => self::faker()->password,\r\n            \"email\" => self::faker()->email,\r\n            \"roles\" => [\"ROLE_USER\"], //par défault ??\r\n        ];\r\n    }\r\n}\r\n\r\n`.trim()\r\n\r\nexport const fixtureJson =`\r\nclass IngredientFixtures extends Fixture\r\n{\r\n    public function load(ObjectManager $manager)\r\n    {\r\n\r\n        $ingredients = json_decode(file_get_contents(implode(\r\n            DIRECTORY_SEPARATOR,\r\n            [__DIR__, \r\n            'data', \r\n            'Ingredient.json'])), true);\r\n\r\n        foreach ($ingredients as $ingredient)\r\n        {\r\n            $ingredient['allergens'] = AllergenFactory::randomRange(1,3);\r\n            $ingredient['sort'] = IngredientSortFactory::random();\r\n            IngredientFactory::new()->create($ingredient);\r\n        }\r\n    }\r\n`.trim()\r\n\r\n\r\nexport const fixtureDependance =`\r\nuse Doctrine\\Common\\DataFixtures\\DependentFixtureInterface;\r\n\r\nclass IngredientFixtures extends Fixture implements DependentFixtureInterface\r\n{\r\n    public function getDependencies(): array\r\n    {\r\n        return[\r\n            IngredientSortFixtures::class,\r\n        ];\r\n    }\r\n}\r\n\r\n`.trim()\r\n\r\n\r\nexport const factoryEncoder =`\r\nuse Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoderInterface;\r\n\r\nfinal class UserFactory extends ModelFactory\r\n{\r\n    private $passwordEncoder;\r\n\r\n    public function __construct(UserPasswordEncoderInterface $passwordEncoder)\r\n    {\r\n        parent::__construct();\r\n        $this->passwordEncoder = $passwordEncoder;\r\n    }\r\n\r\n    protected function getDefaults(): array\r\n    {\r\n        return [\r\n            \"name\" => self::faker()->name,\r\n            \"password\" => self::faker()->password,\r\n            \"email\" => self::faker()->email,\r\n            \"roles\" => [\"ROLE_USER\"], //par défault ??\r\n        ];\r\n    }\r\n\r\n    protected function initialize(): self\r\n    {\r\n        // see https://github.com/zenstruck/foundry#initialization\r\n        return $this->afterInstantiate(function (User $user) {\r\n            $user->setPassword($this->passwordEncoder->encodePassword($user, $user->getPassword()));\r\n        });\r\n    }\r\n\r\n    protected static function getClass(): string\r\n    {\r\n        return User::class;\r\n    }\r\n}\r\n\r\n`.trim()\r\n\r\nexport const factoryExemple =`\r\nprotected function getDefaults(): array\r\n{\r\n    return\r\n        [\r\n            'content' => self::faker()->text(100),\r\n            'meta' => self::faker()->name(),\r\n            'category' => CategoryFactory::random(),\r\n        ];\r\n}\r\n`.trim()\r\n\r\nexport const fixturesEncoder =`\r\nuse Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoderInterface;\r\n\r\nclass UserFixtures extends Fixture\r\n{\r\n    private $encoder;\r\n\r\n    public function __construct(UserPasswordEncoderInterface $encoder)\r\n    {\r\n        $this->encoder = $encoder;\r\n    }\r\n\r\n    public function load(ObjectManager $manager)\r\n    {\r\n        $user1= new User();\r\n        $password1 = $this->encoder->encodePassword($user1, 'iutinfo');\r\n        $user1->setPassword($password1);\r\n        $user1->setName('Jules');\r\n        $user1->setEmail('admin@outlook.fr');\r\n        $user1->setRoles(['ROLE_ADMIN', 'ROLE_USER']);\r\n\r\n        $manager->persist($user1);\r\n        $manager->flush();\r\n\r\n        UserFactory::createMany(4); //pour random values\r\n    }\r\n}\r\n\r\n`.trim()\r\n\r\n\r\nexport const fixturesImage =`\r\n\r\nuse Symfony\\Component\\HttpFoundation\\File\\UploadedFile;\r\n\r\nclass RecipeFixtures extends Fixture \r\n{\r\n\r\n    public function load(ObjectManager $manager)\r\n    {\r\n        $recipies = json_decode(file_get_contents(\r\n            __DIR__ .\r\n            DIRECTORY_SEPARATOR .\r\n            'data' .\r\n            DIRECTORY_SEPARATOR . \r\n            'Recipe.json'\r\n            ), true);\r\n\r\n        foreach ($recipies as $recipe) {\r\n\r\n            $recipe['steps'] = StepFactory::randomRange(1,14);\r\n            $recipe['account'] = PersonFactory::random();\r\n            $recipe['accountsFavorite'] = PersonFactory::randomRange(0,2);\r\n            $recipe['type'] = RecipeTypeFactory::random();\r\n            $recipe['regimen'] = RecipeRegimenFactory::random();\r\n            $recipe['origin'] = RecipeOriginFactory::random();\r\n            $recipe['menuType'] = MenuTypeFactory::randomRange(0,2);\r\n\r\n            $recipeEntity =  RecipeFactory::new()->create($recipe);\r\n\r\n            if (isset($recipe['imageName']))\r\n                 $this->setImage(\r\n                     $recipeEntity->object(),\r\n                     (\r\n                         __DIR__ .\r\n                        DIRECTORY_SEPARATOR . \r\n                        'data' .\r\n                        DIRECTORY_SEPARATOR .\r\n                        'img' .\r\n                        DIRECTORY_SEPARATOR . \r\n                        $recipe['imageName']\r\n                     ),\r\n                     $recipe['imageName']);\r\n        }\r\n    }\r\n\r\n    public function setImage(Recipe $recipe, string $path, string $filename)\r\n    {\r\n        $tmpPath = tempnam(sys_get_temp_dir(), 'recipe_image');\r\n        copy($path, $tmpPath);\r\n\r\n        $recipe->setImageFile(new UploadedFile(\r\n            $tmpPath,\r\n            $filename,\r\n            'image/jpeg',\r\n            null,\r\n            true\r\n        ));\r\n    }\r\n}\r\n\r\n`.trim()\r\n\r\n\r\nexport const buildForm =`\r\npublic function buildForm(FormBuilderInterface $builder, array $options)\r\n{\r\n    $builder\r\n        ->add('content', TextType::class, [\r\n            'label' => 'La quote :',\r\n            ])\r\n\r\n        ->add('meta', TextType::class, [\r\n            'label' => 'La source :',\r\n            ])\r\n\r\n        ->add('category', EntityType::class, [\r\n            'label' => 'La catégorie :',\r\n            'class' => Category::class,\r\n            'choice_label' => 'name',\r\n        ])\r\n\r\n        ->add('save', SubmitType::class, [\r\n            'label' => 'Enregistrer !'\r\n        ]);\r\n}\r\n`.trim()\r\n\r\n\r\nexport const apiAnnot =`\r\nuse Symfony\\Component\\Serializer\\Annotation\\Groups;\r\nuse ApiPlatform\\Core\\Annotation\\ApiResource;\r\n\r\n/**\r\n * @ApiFilter(SearchFilter::class, properties=\r\n *     {\r\n *     \"name\" : \"partial\"\r\n *     })\r\n * @ApiResource(\r\n *     attributes={\"order\"={\"name\": \"ASC\"}},\r\n *     collectionOperations={\r\n *          \"get\"={\r\n *              \"normalization_context\"={\"groups\"={\"recipe:list\"}}\r\n *          },\r\n *          \"post\"={\r\n *              \"normalization_context\"={\"groups\"={\"recipe:create\"}},\r\n *              \"denormalization_context\"={\"groups\"={\"recipe:create\"}},\r\n *              \"security\"=\"is_granted('ROLE_USER') and object == user\"\r\n *          }\r\n *     },\r\n *     itemOperations={\r\n *          \"get\"={\r\n *              \"normalization_context\"={\"groups\"={\"recipe:read\"}}\r\n *          },\r\n *          \"patch\"={\r\n *              \"normalization_context\"={\"groups\"={\"recipe:edit\"}},\r\n *              \"denormalization_context\"={\"groups\"={\"recipe:edit\"}},\r\n *              \"security\"=\"is_granted('ROLE_USER') and object == user\"\r\n *          },\r\n *          \"delete\"={\r\n *              \"normalization_context\"={\"groups\"={\"recipe:delete\"}},\r\n *              \"denormalization_context\"={\"groups\"={\"recipe:delete\"}},\r\n *              \"security\"=\"is_granted('ROLE_USER') and object == user\"\r\n *          },\r\n *     }\r\n * )\r\n */\r\nclass Recipe\r\n{\r\n    ...\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=50)\r\n     * @Groups({\"recipe:list\", \"recipe:read\", \"recipe:create\", \"recipe:edit\", \"recipe:delete\"})\r\n     *\r\n     */\r\n    private $name;\r\n\r\n    ...\r\n}\r\n`.trim()\r\n\r\n\r\nexport const assertSame =`\r\n    /**\r\n     * @dataProvider additionProvider\r\n     */\r\n    public function testFunctionAdd(float $expected, float $firstOperand, float $secondOperand): void\r\n    {\r\n        $this->assertSame($expected, FloatCalculator::add($firstOperand, $secondOperand));\r\n    }\r\n\r\n    public function additionProvider(): array\r\n    {\r\n        return\r\n        [\r\n            [0., 0., 0.],\r\n            [-5., -5., 0.],\r\n            [-15., -8., -7.],\r\n            [16., 16., 0.],\r\n            [0.1, -0.7, 0.8],\r\n        ];\r\n    }\r\n`.trim()\r\n\r\n\r\nexport const mock =`\r\n    public function testPlayOneMove(): void\r\n    {\r\n        $mockHuman = $this->createPartialMock(Human::class, ['getInput']);\r\n        $mockHuman->method('getInput')->willReturn('B');\r\n\r\n        $mockIRules = $this->createMock(IRules::class);\r\n        $mockIRules->method('getGestures')->willReturn(\r\n            [\r\n                'C',\r\n                'B',\r\n                'A',\r\n        ]);\r\n\r\n        $this->expectOutputString(\"Choose a move :C, B, A\");\r\n\r\n        $mockHuman->playOneMove($mockIRules);\r\n    }\r\n`.trim()\r\n\r\n\r\nexport const easyAdminDashboard =`\r\nclass DashboardController extends AbstractDashboardController\r\n{\r\n    /**\r\n     * @Route(\"/admin\", name=\"admin\")\r\n     */\r\n    public function index(): Response\r\n    {\r\n        return $this->render('admin/fields/dashboard.html.twig');\r\n    }\r\n\r\n    public function configureDashboard(): Dashboard\r\n    {\r\n        return Dashboard::new()\r\n            ->setTitle('Be Your Chief');\r\n    }\r\n\r\n    public function configureMenuItems(): iterable\r\n    {\r\n        //yield MenuItem::section ici permet de créer une nouvelle section dans le dashboard\r\n        //yield MenuItem::linkToCrud permet de créer un lien vers un crud controller d'une entité\r\n        //EasyAdmin 3 utilise ici les icônes de FontAwesome pour customizer les liens\r\n\r\n        yield MenuItem::section('Les recettes');\r\n        yield MenuItem::linkToCrud('Recettes', 'fas fa-cookie', Recipe::class);\r\n        yield MenuItem::linkToCrud('Type de recette', 'fas fa-blender', RecipeType::class);\r\n}\r\n\r\n`.trim()\r\n\r\n\r\nexport const easyAdminCrud =`\r\nclass IngredientCrudController extends AbstractCrudController\r\n{\r\n    public static function getEntityFqcn(): string\r\n    {\r\n        return Ingredient::class;\r\n    }\r\n\r\n    public function configureFields(string $pageName): iterable\r\n    {\r\n        return [\r\n            TextField::new('name'),\r\n\r\n// On peut cacher les champs lors de l'édition avec ->hideOnForm()\r\n            IntegerField::new('nbKal')->hideOnForm();\r\n\r\n// Attention, vous aurez peut-être besoin de déclarer la méthode magique __toString \r\n// dans les entités qui ont besoin d’être affichés dans les formulaires (ici Sort).\r\n            AssociationField::new('sort')\r\n                ->formatValue(function ($value, $entity)\r\n                {\r\n                    return $entity->getSort();\r\n                }),\r\n\r\n// La différence avec le Field précédent est que celui-ci \r\n// affiche directement un template twig.   \r\n            AssociationField::new('allergens')\r\n                ->setTemplatePath('admin/fields/allergen.html.twig'),\r\n        ];\r\n    }\r\n}\r\n`.trim()\r\n\r\nexport const vichConfig =`\r\nvich_uploader:\r\n    db_driver: orm\r\n\r\n    mappings:\r\n        recipes_images:\r\n             uri_prefix: /images/recipes\r\n             upload_destination: '%kernel.project_dir%/public/images/recipes'\r\n             namer: Vich\\UploaderBundle\\Naming\\SmartUniqueNamer\r\n\r\n// Les images uploader iront donc dans le dossier public/images/recipes ici.\r\n`.trim()\r\n\r\n\r\nexport const vichAttributs =`\r\nuse Vich\\UploaderBundle\\Mapping\\Annotation as Vich;\r\n\r\n/**\r\n * @Vich\\Uploadable()\r\n */\r\nclass Category\r\n{\r\n    /**\r\n     * @ORM\\Column(type=\"string\", nullable=true)\r\n     */\r\n    private $imageName;\r\n\r\n    /**\r\n     * @Vich\\UploadableField(mapping=\"recipes_images\", fileNameProperty=\"imageName\")\r\n     */\r\n    private $imageFile;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"datetime\", nullable=true)\r\n     */\r\n    private $updatedAt;\r\n\r\n    ...\r\n}\r\n\r\n`.trim()\r\n\r\n\r\nexport const vichMethodes =`\r\npublic function getImageName(): ?string\r\n    {\r\n        return $this->imageName;\r\n    }\r\n\r\n    public function setImageName(?string $imageName): self\r\n    {\r\n        $this->imageName = $imageName;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function setImageFile(?File $imageFile = null): self\r\n    {\r\n        $this->imageFile = $imageFile;\r\n\r\n        if (null !== $imageFile) {\r\n            // It is required that at least one field changes if you are using doctrine\r\n            // otherwise the event listeners won't be called and the file is lost\r\n            $this->updatedAt = new \\DateTime();\r\n        }\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getImageFile(): ?File\r\n    {\r\n        return $this->imageFile;\r\n    }\r\n\r\n    public function getUpdatedAt(): ?\\DateTimeInterface\r\n    {\r\n        return $this->updatedAt;\r\n    }\r\n\r\n    public function setUpdatedAt(\\DateTimeInterface $updatedAt): self\r\n    {\r\n        $this->updatedAt = $updatedAt;\r\n\r\n        return $this;\r\n    }\r\n`.trim()\r\n\r\n\r\nexport const vichInEasyAdmin =`\r\nuse Vich\\UploaderBundle\\Form\\Type\\VichImageType;\r\n\r\nclass RecipeCrudController extends AbstractCrudController\r\n{\r\n    public static function getEntityFqcn(): string\r\n    {\r\n        return Recipe::class;\r\n    }\r\n\r\n    public function configureFields(string $pageName): iterable\r\n    {\r\n        return [\r\n\r\n            ImageField::new('imageName', 'Image')\r\n                ->setBasePath('/images/recipes')\r\n                ->setUploadDir('public/images/recipes')\r\n                ->hideOnForm(),\r\n\r\n            Field::new('imageFile')\r\n                ->setFormType(VichImageType::class)\r\n                ->setTranslationParameters(['form.label.delete'=>'Supprimer'])\r\n                ->onlyOnForms(),\r\n\r\n            ...\r\n\r\n        ];\r\n    }\r\n}\r\n`.trim()\r\n\r\n\r\nexport const denormalizer =`\r\n\r\nnamespace App\\Serialization\\Denormalizer;\r\n\r\nuse App\\Entity\\User;\r\nuse Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoderInterface;\r\nuse Symfony\\Component\\Security\\Core\\Security;\r\nuse Symfony\\Component\\Serializer\\Normalizer\\ContextAwareDenormalizerInterface;\r\nuse Symfony\\Component\\Serializer\\Normalizer\\DenormalizerAwareInterface;\r\nuse Symfony\\Component\\Serializer\\Normalizer\\DenormalizerAwareTrait;\r\n\r\nclass UserDenormalizer implements ContextAwareDenormalizerInterface, DenormalizerAwareInterface\r\n{\r\n    use DenormalizerAwareTrait;\r\n\r\n    private const ALREADY_CALLED = 'USER_DENORMALIZER_ALREADY_CALLED';\r\n    private $passwordEncoder;\r\n    private $security;\r\n\r\n    public function __construct(Security $security, UserPasswordEncoderInterface $passwordEncoder)\r\n    {\r\n        $this->passwordEncoder = $passwordEncoder;\r\n        $this->security = $security;\r\n    }\r\n\r\n    public function supportsDenormalization($data, $type, $format = null, array $context = []): bool\r\n    {\r\n        if (isset($context[self::ALREADY_CALLED])) {\r\n            return false;\r\n        }\r\n\r\n        return $type === User::class;\r\n    }\r\n\r\n    public function denormalize($data, $type, $format = null, array $context = [])\r\n    {\r\n        $context[self::ALREADY_CALLED] = true;\r\n\r\n        if (isset($data['password'])) {\r\n            $user = $this->security->getUser();\r\n            $data['password'] = $this->passwordEncoder->encodePassword($user, $data['password']);\r\n        }\r\n\r\n        return $this->denormalizer->denormalize($data, $type, $format, $context);\r\n    }\r\n}\r\n\r\n`.trim()\r\n\r\n\r\n\r\nexport const functionnalTestContent =`\r\n\r\npublic function getRepository(): CategoryRepository\r\n{\r\n    return self::$container->get('doctrine')->getRepository(maClasse::class);\r\n}\r\n\r\npublic function getCategory(string $name): Category\r\n{\r\n    return $this->getRepository()->findOneBy(['name' => $name]);\r\n}\r\n\r\npublic function getManager(): EntityManagerInterface\r\n{\r\n    return self::$container->get('doctrine')->getManagerForClass(maClasse::class);\r\n}\r\n\r\n...\r\n\r\npublic function testCategoryCreate()\r\n{\r\n    $client = static::createClient([], [\r\n        'PHP_AUTH_USER' => 'admin@outlook.fr',\r\n        'PHP_AUTH_PW' => '******',\r\n    ]);\r\n\r\n    $client->request('GET', '/category/new');\r\n\r\n    $client->submitForm('Enregistrer', [\r\n        'category[name]' => 'Comics',\r\n    ]);\r\n    $client->followRedirect();\r\n\r\n    $comics = $this->getCategory('Comics');\r\n    $this->assertSame('Comics', $comics->getName());\r\n\r\n    $this->assertSelectorTextContains('.content', 'Comics');\r\n}\r\n`.trim()\r\n\r\n\r\nexport const functionnalTestContentContainer =`\r\npublic function makeComicsCategory()\r\n{\r\n    $manager = self::$container->get('doctrine')->getManagerForClass(Category::class);\r\n\r\n    $category = new Category();\r\n    $category->setName('Comics');\r\n\r\n    $manager->persist($category);\r\n    $manager->flush();\r\n}\r\n\r\n...\r\n\r\npublic function testCategoryModify()\r\n{\r\n    $client = static::createClient([], [\r\n        'PHP_AUTH_USER' => 'admin@outlook.fr',\r\n        'PHP_AUTH_PW' => '******',\r\n    ]);\r\n\r\n    $this->makeComicsCategory();\r\n\r\n    $client->request('GET', '/category/');\r\n    $client->clickLink('Modifier');\r\n\r\n    $comics = $this->getCategory('Comics');\r\n    $idComics = $comics->getId();\r\n\r\n    $client->submitForm('Enregistrer', [\r\n        'category[name]' => 'Rick & Morty',\r\n    ]);\r\n    $client->followRedirect();\r\n\r\n    $rick = $this->getRepository()->findOneBy(['id' => $idComics]);\r\n    $this->assertSame('Rick & Morty', $rick->getName());\r\n\r\n    $client->request('GET', '/category/');\r\n    $this->assertSelectorTextContains('.content', 'Rick & Morty');\r\n}\r\n`.trim()\r\n\r\n\r\n\r\nexport const functionnalTestDebug =`\r\n\r\n// Permet d'afficher le contenu de la page actuelle du $client\r\necho $client->getResponse()->getContent();\r\n\r\n// Permet d'écrire un fichier my_response.html avec le contenu \r\n// de la page actuelle du $client à la racine du projet\r\nfile_put_contents('my_responde.html', $client->getResponse()->getContent());\r\n\r\n`.trim()\r\n\r\nexport const composerReset =`\r\n// Supprime la BD s'il en éxiste une, en créer une nouvelles avec Doctrine,\r\n// applique les migrations et charge toutes les fixtures.\r\n\r\n\"reset\" : [\r\n    // Delete les images dupliquées par Vich si besoin\r\n    // Ne fonctionne pas sur Windows (?)\r\n    // \"php -r \\\"foreach(glob('public/images/*/*') as \\\\$file) unlink(\\\\$file);\\\"\",\r\n\r\n    \"php bin/console doctrine:database:drop --force --if-exists\",\r\n    \"php bin/console doctrine:database:create\",\r\n    \"php bin/console doctrine:migration:migrate --no-interaction\",\r\n    \"php bin/console doctrine:fixtures:load --no-interaction\"\r\n]\r\n`.trim()\r\n\r\n\r\n\r\nexport const composerTest =`\r\n// Script déstiner aux tests\r\n// Supprime la BD, en créer une nouvelles avec Doctrine,\r\n// applique les migrations et charge toutes les fixtures.\r\n// Toute les commandes sont executer en environnement de test\r\n\r\n\"test\" : [\r\n    \"php bin/console doctrine:database:drop --force --if-exssts --env=test\",\r\n    \"php bin/console doctrine:schema:create --env=test\",\r\n    \"php bin/console doctrine:fixtures:load --no-interaction --group=UserFixtures --env=test\",\r\n    \"php bin/phpunit tests\"\r\n]\r\n`.trim()\r\n\r\nexport const csFixerScript =`\r\n// Lance cs-fixer dans tout le projet\r\n\r\n\"cs-fixer\" : [\r\n    \"vendor/bin/php-cs-fixer fix\"\r\n]\r\n`.trim()\r\n\r\n\r\nexport const fixtureDependanceAlt =`\r\n// Cette solution n'utilise pas Foundry\r\n\r\nclass CategoryFixtures extends Fixture\r\n{\r\n    public const FRUIT = 'category-fruit';\r\n\r\n    public function load(ObjectManager $manager)\r\n    {\r\n        $fruit = new Category();\r\n        $fruit->setName('fruit');\r\n        $manager->persist($fruit);\r\n\r\n        //On ajoute la category en tant que référence\r\n        $this->addReference(self::FRUIT, $fruit);\r\n\r\n        $manager->flush();\r\n    }\r\n}\r\n\r\n...\r\n\r\nclass AlimentFixtures extends Fixture implements DependentFixtureInterface\r\n{\r\n    public function load(ObjectManager $manager)\r\n    {\r\n        $banane = new Quote();\r\n        $banane->setName('banane');\r\n\r\n        // On utilise la référence pour affecter une catégorie à l'aliment\r\n        $banane->setCategory($this->getReference(CategoryFixtures::FRUIT));\r\n        $manager->persist($banane);\r\n\r\n        $manager->flush();\r\n    }\r\n\r\n    // Ne pas oublier d'implémenter l'interface DependentFixtureInterface !\r\n    public function getDependencies(): array\r\n    {\r\n        return [\r\n            CategoryFixtures::class,\r\n        ];\r\n    }\r\n}\r\n`.trim()\r\n\r\n\r\nexport const grumConfig =`\r\n// Le fichier de config doit être\r\n// à la racine de votre projet !\r\n\r\ngrumphp:\r\n  tasks:\r\n    composer:\r\n      no_check_all: true\r\n      no_check_publish: true\r\n    git_blacklist:\r\n      keywords:\r\n        - \"die(\"\r\n        - \"var_dump(\"\r\n        - \"exit;\"\r\n        - \"dump(\"\r\n      whitelist_patterns: [ ]\r\n      triggered_by: [ 'php' ]\r\n      regexp_type: G\r\n      match_word: false\r\n    phpcsfixer:\r\n      allow_risky: ~\r\n      cache_file: ~\r\n      config: .php_cs.dist\r\n      rules: [ ]\r\n      using_cache: ~\r\n      config_contains_finder: true\r\n      verbose: true\r\n      diff: false\r\n      triggered_by: [ 'php' ]\r\n    phpunit: ~\r\n\r\n  testsuites: []\r\n  extensions: []\r\n`.trim()\r\n\r\nexport const paginatorConfig =`\r\n// Inclus bootstrap\r\n\r\nknp_paginator:\r\n  template:\r\n    pagination: '@KnpPaginator/Pagination/twitter_bootstrap_v4_pagination.html.twig'\r\n`.trim()\r\n\r\n\r\nexport const paginatorController =`\r\nuse Knp\\Component\\Pager\\PaginatorInterface;\r\n\r\n...\r\n\r\npublic function index(PaginatorInterface $paginator, Request $request): Response\r\n    {\r\n        $repositoryQuote = $this->getDoctrine()->getRepository(Quote::class);\r\n\r\n        $research = $request->query->get('research');\r\n        $research = \"%{$research}%\";\r\n\r\n        $query = $repositoryQuote->createQueryBuilder('q')\r\n              ->where('q.content LIKE :research')\r\n              ->setParameter('research', $research)\r\n              ->orderBy('q.meta', 'ASC')\r\n              ->getQuery();\r\n\r\n// On met la réponse du QueryBuilder dans le pagintor\r\n        $pagination = $paginator->paginate(\r\n            $query,\r\n            $request->query->getInt('page', 1),\r\n            5\r\n        );\r\n\r\n// On transmettra donc uniquement le paginator à la vue twig\r\n        return $this->render('quote/index.html.twig', ['pagination' => $pagination]);\r\n    }\r\n`.trim()\r\n\r\n\r\n\r\nexport const paginatorTwig =`\r\n<span> ({{ pagination.getTotalItemCount }})</span>\r\n\r\n    {% for quote in pagination.items %}   \r\n    ...\r\n    {%  endfor  %}\r\n`.trim()\r\n\r\n\r\n\r\nexport const stofConfig =`\r\n// config/packages/stof_doctrine/extensions.yaml\r\n// enable le bundle sluggable et blameable\r\n\r\nstof_doctrine_extensions:\r\n    default_locale: en_US\r\n    orm:\r\n        default:\r\n            /\r\n            sluggable: true\r\n            blameable: true\r\n`.trim()\r\n\r\nexport const sluggable =`\r\n// Dans l'entity\r\n\r\nuse Gedmo\\Mapping\\Annotation as Gedmo;\r\n\r\nclass Category\r\n{\r\n    ...\r\n\r\n    /**\r\n     * @Gedmo\\Slug(fields={\"name\"})\r\n     * @ORM\\Column(length=128, unique=true)\r\n     */\r\n    private $slug;\r\n\r\n    ...\r\n\r\n    public function getSlug()\r\n    {\r\n        return $this->slug;\r\n    }\r\n}\r\n\r\n\r\n// Dans un controller avec le param converter\r\n\r\n    /**\r\n     * @Route(\"/{slug}/edit\", name=\"category_edit\", methods={\"GET\",\"POST\"})\r\n     */\r\n    public function edit(Request $request, Category $category): Response\r\n    {\r\n        ...\r\n    }\r\n\r\n`.trim()\r\n\r\nexport const blameable =`\r\n\r\nuse Gedmo\\Mapping\\Annotation as Gedmo;\r\n\r\nclass Quote\r\n{\r\n   ...\r\n\r\n    /**\r\n     * @ORM\\ManyToOne(targetEntity=User::class, inversedBy=\"quotes\")\r\n     * @Gedmo\\Blameable(on=\"create\")\r\n     * @ORM\\JoinColumn(nullable=false)\r\n     */\r\n    private $author;\r\n\r\n    ...\r\n\r\n}\r\n`.trim()\r\n\r\nexport const liipConfig =`\r\n// config/packages/liip_imagine.yaml\r\n\r\nliip_imagine:\r\n    driver: \"gd\"\r\n    filter_sets :\r\n        cache : ~\r\n\r\n        # the name of the \"filter set\"\r\n        medium :\r\n            quality : 75\r\n            filters :\r\n                thumbnail  : { size : [350, 350], mode : outbound }\r\n\r\n        small:\r\n            quality: 100\r\n            filters:\r\n                thumbnail: { size: [ 64, 64 ], mode: outbound }\r\n`.trim()\r\n\r\n\r\nexport const liipUse =`\r\n// Appel le filtre \"small\" dans le template lors de l'affichage de l'image\r\n\r\n<img src=\"{{ vich_uploader_asset(category.category, \"imageFile\") | imagine_filter('small')}}\" alt=\"{{ category.category.name }}\"/>\r\n`.trim()\r\n\r\n\r\nexport const rollerworks =`\r\nuse Rollerworks\\Component\\PasswordStrength\\Validator\\Constraints as RollerworksPassword;\r\n\r\nclass RegistrationFormType extends AbstractType\r\n{\r\n    public function buildForm(FormBuilderInterface $builder, array $options)\r\n    {\r\n        $builder\r\n            ->add('email')\r\n            ->add('plainPassword', PasswordType::class, [\r\n                'mapped' => false,\r\n                'constraints' => [\r\n                    new NotBlank([\r\n                        'message' => 'Please enter a password',\r\n                    ]),\r\n                    new RollerworksPassword\\PasswordRequirements([\r\n                        'requireNumbers' => true,\r\n                        'requireCaseDiff' => true,\r\n                    ]),\r\n                ],\r\n            ]);\r\n    }\r\n}\r\n`.trim()\r\n\r\n\r\nexport const gregwar =`\r\n// Dans le formulaire\r\n\r\nuse Gregwar\\CaptchaBundle\\Type\\CaptchaType;\r\n\r\nclass RegistrationFormType extends AbstractType\r\n{\r\n    public function buildForm(FormBuilderInterface $builder, array $options)\r\n    {\r\n        $builder\r\n            ->add('email')\r\n            ->add('captcha', CaptchaType::class);\r\n    }\r\n}\r\n\r\n// Dans le template\r\n\r\n    <h1>S'enregistrer</h1>\r\n\r\n    {{ form_start(registrationForm) }}\r\n        {{ form_row(registrationForm.email) }}\r\n        {{ form_row(registrationForm.captcha) }}\r\n\r\n        <button type=\"submit\">S'enregistrer</button>\r\n        \r\n    {{ form_end(registrationForm) }}\r\n`.trim()\r\n\r\n\r\nexport const voter1 =`\r\nnamespace App\\Security\\Voter;\r\n\r\nuse App\\Entity\\Quote;\r\nuse App\\Entity\\User;\r\nuse Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;\r\nuse Symfony\\Component\\Security\\Core\\Authorization\\Voter\\Voter;\r\nuse Symfony\\Component\\Security\\Core\\Security;\r\nuse Symfony\\Component\\Security\\Core\\User\\UserInterface;\r\n\r\nclass QuoteVoter extends Voter\r\n{\r\n    // Création d'une constante\r\n    public const EDIT = 'QUOTE_EDIT';\r\n\r\n    private $security;\r\n\r\n    public function __construct(Security $security)\r\n    {\r\n        $this->security = $security;\r\n    }\r\n\r\n    protected function supports($attribute, $subject)\r\n    {\r\n        // Retourne false si l'attribut n'est pas trouver dans le tableau\r\n        // et si l'objet n'est pas une Quote\r\n        return in_array($attribute, [self::EDIT])\r\n            && $subject instanceof \\App\\Entity\\Quote;\r\n    }\r\n\r\n    protected function voteOnAttribute($attribute, $subject, TokenInterface $token)\r\n    {\r\n        $user = $token->getUser();\r\n\r\n        // Si l'utilisateur n'est pas connecté, refusé l'accès\r\n        if (!$user instanceof UserInterface) {\r\n            return false;\r\n        }\r\n\r\n        // Ici $this->canEdit fais référence à la méthode canEdit\r\n        switch ($attribute) {\r\n            case self::EDIT:\r\n                return $this->canEdit($subject, $user);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private function canEdit(Quote $quote, User $user)\r\n    {\r\n        // L'utilisateur peut éditer la Quote s'il en est l'auteur\r\n        // ou si l'utilisateur possède le role admin.\r\n        // Nécéssite donc la méthode getAuthor et la relation avec Doctrine\r\n        return $user === $quote->getAuthor()\r\n            || $this->security->isGranted('ROLE_ADMIN');\r\n    }\r\n}\r\n`.trim()\r\n\r\nexport const voter2 =`\r\nclass QuoteController extends AbstractController\r\n{\r\n    /**\r\n     * @IsGranted(\"QUOTE_EDIT\", subject=\"quote\")\r\n     * @Route(\"/quotes/{id}/edit\", name=\"quotes_edit\")\r\n     */\r\n    public function edit(Quote $quote)\r\n    {\r\n        // équivalent sans annotation :\r\n        // $this->denyAccessUnlessGranted('QUOTE_EDIT', $quote);\r\n    }\r\n}\r\n`.trim()\r\n\r\n\r\nexport const voter3 =`\r\n{% if is_granted('QUOTE_EDIT', quote) %}\r\n    <a href=\"{{ path('quotes_edit', {id: quote.id}) }}\">Modifier</a>\r\n{% endif %}\r\n`.trim()\r\n\r\n\r\nexport const eventController =`\r\n/**\r\n * @Route(\"/quotes/ajouter\", name=\"quote_ajouter\")\r\n */\r\npublic function ajouter(Request $request, EventDispatcherInterface $eventDispatcher): Response\r\n{\r\n    ...\r\n\r\n    // Ici on est dans un controller qui permet d'ajouter\r\n    // une Quote avec un formulaire \r\n\r\n    if ($form->isSubmitted() && $form->isValid()) {\r\n        $quote = $form->getData();\r\n\r\n        $quoteManager->persist($quote);\r\n        $quoteManager->flush();\r\n\r\n        // On trigger l'event QuoteCreatedEvent\r\n        // au submit du formaire s'il est valide\r\n        $event = new QuoteCreatedEvent($quote);\r\n        $eventDispatcher->dispatch($event);\r\n\r\n        ...\r\n    }\r\n    ...\r\n}\r\n`.trim()\r\n\r\n\r\nexport const eventEvent =`\r\nnamespace App\\Event;\r\n\r\nuse App\\Entity\\Quote;\r\nuse Symfony\\Contracts\\EventDispatcher\\Event;\r\n\r\nclass QuoteCreatedEvent extends Event\r\n{\r\n    protected $quote;\r\n\r\n    public function __construct(Quote $quote)\r\n    {\r\n        $this->quote = $quote;\r\n    }\r\n\r\n    public function getQuote()\r\n    {\r\n        return $this->quote;\r\n    }\r\n}\r\n`.trim()\r\n\r\n\r\nexport const eventSubscriber =`\r\nnamespace App\\Subscriber;\r\n\r\nuse App\\Event\\QuoteCreatedEvent;\r\nuse Doctrine\\ORM\\EntityManagerInterface;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\n\r\nclass QuoteSubscriber implements EventSubscriberInterface\r\n{\r\n    // Ici on utlise le manager pour utiliser des services\r\n    private $manager;\r\n\r\n    public function __construct(EntityManagerInterface $manager)\r\n    {\r\n        $this->manager = $manager;\r\n    }\r\n\r\n    // S'abonne à un tableau d'événement\r\n    // Ici la clé du tableau correspond à l'event,\r\n    // la valeur correspond à la méthode du subscriber\r\n    public static function getSubscribedEvents(): array\r\n    {\r\n        return [\r\n            QuoteCreatedEvent::class => 'onQuoteCreate',\r\n        ];\r\n    }\r\n\r\n    // La méthode onQuoteCreate s'effectuera lorsque \r\n    // l'event QuoteCreatedEvent sera appelé.\r\n    public function onQuoteCreate(QuoteCreatedEvent $event): void\r\n    {\r\n        // On ajoute par exemple des points à l'utilisateur\r\n        $userPoint = $event->getQuote()->getAuthor()->getPoint();\r\n        $event->getQuote()->getAuthor()->setPoint($userPoint + 100);\r\n    }\r\n}\r\n`.trim()\r\n\r\n\r\n\r\nexport const encore =`\r\n{% block stylesheets %}\r\n    {{ encore_entry_link_tags('app') }}\r\n{% endblock %}\r\n\r\n{% block javascripts %}\r\n    {{ encore_entry_script_tags('app') }}\r\n{%  endblock %}\r\n`.trim()\r\n\r\n\r\nexport const command =`\r\nnamespace App\\Command;\r\n\r\nuse Symfony\\Component\\Console\\Command\\Command;\r\nuse Symfony\\Component\\Console\\Input\\InputInterface;\r\nuse Symfony\\Component\\Console\\Input\\InputOption;\r\nuse Symfony\\Component\\Console\\Output\\OutputInterface;\r\nuse Symfony\\Component\\Console\\Style\\SymfonyStyle;\r\nuse Symfony\\Component\\DependencyInjection\\ContainerInterface;\r\n\r\nclass RandomQuoteCommand extends Command\r\n{\r\n    // Le nom de la commande ici\r\n    protected static $defaultName = 'app:random-quote';\r\n\r\n    // La description de la commande\r\n    protected static $defaultDescription = 'Pick a random quote from the database.';\r\n\r\n    // On utilise le container pour accéder aux services ici\r\n    private $container;\r\n\r\n    public function __construct(ContainerInterface $container)\r\n    {\r\n        parent::__construct();\r\n        $this->container = $container;\r\n    }\r\n\r\n    protected function configure()\r\n    {\r\n        $this\r\n            ->setDescription(self::$defaultDescription)\r\n\r\n            // On ajoute un argument (obligatoire) category à la commande\r\n            ->addArgument(\r\n                'category', \r\n                InputArgument::REQUIRED, \r\n                'The category of the quote.')\r\n\r\n            // On ajoute une option avec valeur obligatoire\r\n            // On pourra l'appeler comme ceci: --iterations ou -i\r\n            ->addOption(\r\n                'iterations',\r\n                'i',\r\n                InputOption::VALUE_REQUIRED,\r\n                'How many times should the message be printed?',\r\n                1\r\n            )\r\n\r\n            // Texte à afficher lors du --help\r\n            ->setHelp(\r\n                'This command allows you to pick a random quote from the database!\r\n                \\n--category to look for a specific category'\r\n            )\r\n        ;\r\n    }\r\n\r\n    protected function execute(InputInterface $input, OutputInterface $output): int\r\n    {\r\n        // SymfonyStyle permet d'ajouter du style\r\n        // lors de l'output de la commande\r\n        $io = new SymfonyStyle($input, $output);\r\n        $io->title('Citation aléatoire !');\r\n\r\n        $inputCategory = $input->getArgument('category');\r\n        $inputIteration = $input->getOption('iterations');\r\n\r\n        if (...)\r\n        {\r\n            // L'output de la commande\r\n            $output->writeln([\r\n                    ...\r\n                ]);\r\n        }\r\n        \r\n        else {\r\n            // Message d'avertissement si besoin\r\n            $io->warning(...);\r\n\r\n            // Message d'erreur si besoin\r\n            $io->error(...);\r\n        }\r\n\r\n        // Return 0 est nécéssaire au fonctionnement \r\n        // de la commande \r\n        return 0;\r\n    }\r\n}\r\n`.trim()\r\n\r\n\r\n\r\nexport const onDelete =`\r\n// Ici l'attribut category correspond à une association ManyToOne.\r\n// Si la catégorie vient à être supprimer on peut utiliser \r\n// onDelete dans les annotations\r\n\r\n// Ici SET NULL nécéssitera que la Quote n'ai pas d'obligation d'avoir\r\n// une category\r\n\r\n// On peut également utiliser CASCADE pour supprimer toute les quotes liées\r\n// à la catégorie\r\n\r\nclass Quote\r\n{\r\n    ...\r\n\r\n    /**\r\n     * @ORM\\ManyToOne(targetEntity=Category::class, inversedBy=\"quotes\")\r\n     * @ORM\\JoinColumn(name=\"category_id\", referencedColumnName=\"id\", onDelete=\"SET NULL\")\r\n     */\r\n    private $category;\r\n\r\n    ...\r\n}\r\n`.trim()\r\n\r\n\r\nexport const mailHog =`\r\n// Dans le .env\r\n\r\nMAILER_DSN=smtp://localhost:1025\r\n`.trim()\r\n\r\nexport const mailHogConfig =`\r\nframework:\r\n    mailer:\r\n        dsn: '%env(MAILER_DSN)%'\r\n        envelope:\r\n            sender: 'noreply@example.org'\r\n            recipients: [ 'foo@example.com', 'bar@example.com' ]\r\n`.trim()\r\n\r\n\r\n\r\nexport const mailHogController =`\r\n\r\nnamespace App\\Controller;\r\n\r\nuse Symfony\\Component\\Mime\\Email;\r\nuse Symfony\\Component\\Mailer\\MailerInterface;\r\n\r\nclass RegistrationController extends AbstractController\r\n{\r\n    /**\r\n     * @Route(\"/register\", name=\"app_register\")\r\n     */\r\n    public function register( ... ,  MailerInterface $mailer): Response\r\n    {\r\n        ...\r\n\r\n        if ($form->isSubmitted() && $form->isValid()) {\r\n\r\n            ...\r\n\r\n            // Envoi d'un mail lors de l'inscription (au submit si valide)\r\n            $email = (new Email())\r\n                ->from('noreply@example.org')\r\n                ->to($user->getEmail())\r\n                ->subject('Quote Machine Inscription')\r\n                ->text(\"Bienvenue {$user->getName()} !\r\n                Merci d'avoir rejoint la quote machine. À bientôt.\");\r\n\r\n            $mailer->send($email);\r\n\r\n           ...\r\n        }\r\n        ...\r\n    }\r\n}\r\n`.trim()\r\n","import Container from '../Container'\r\nimport { exempleController, exempleController2 } from './files/AllQuotes'\r\nimport Liens from '../Liens'\r\n\r\nexport function Controller()\r\n{\r\n\r\n    return(\r\n        <div className=\"Page\">\r\n            <h1 className=\"TitlePage\">Controller (MVC)</h1>\r\n            \r\n            <div className=\"DocuSection\">\r\n                   <Liens \r\n                   url=\"https://symfony.com/doc/current/the-fast-track/en/6-controller.html#being-lazy-with-the-maker-bundle\" \r\n                   nom=\"Documentation Controller\"/>\r\n                   <Liens \r\n                   url=\"https://symfony.com/doc/current/doctrine.html#persisting-objects-to-the-database\" \r\n                   nom=\"Documentation Objet Controller\"/>\r\n\r\n            </div>\r\n\r\n            <div>• Installer Maker Bundle : <div className=\"Quote\">symfony composer req maker --dev</div></div>\r\n            <div>• Créer un controller : <div className=\"Quote\">bin/console make:controller</div></div>\r\n            <div>• Créer un CRUD controller : <div className=\"Quote\">bin/console make:crud</div></div>\r\n\r\n            <div className=\"Exemple\">\r\n            <Container text=\"Exemple d'action d'un controler (index avec research)\" code={exempleController} language=\"javascript\"/>   \r\n            <Container text=\"Exemple d'action d'un controler (modify)\" code={exempleController2} language=\"javascript\"/>         \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Controller;","import Container from '../Container';\r\nimport Liens from '../Liens'\r\nimport { onDelete } from './files/AllQuotes'\r\n\r\nexport function Doctrine()\r\n{\r\n\r\n    return(\r\n        <div className=\"Page\">\r\n            <h1 className=\"TitlePage\"> Doctrine </h1>\r\n\r\n            <div className=\"DocuSection\">\r\n                <Liens url=\"https://symfony.com/doc/current/doctrine.html\" nom=\"Documentation Doctrine\"/>\r\n            </div>\r\n            \r\n            <div>• Créer une entité : \r\n            <div className=\"Info\">Cette même commande est utiliser pour modifier une entité déjà existante !\r\n            Si vous souhaiter supprimer une entité, supprimer simplement le fichier (entité +\r\n            repository) mais faites attention aux messages d'alerte !</div>\r\n            <div className=\"Quote\"> bin/console make:entity </div></div>\r\n\r\n\r\n            <div>• Régénérer des accesseurs pour les entités : \r\n            <div className=\"Info\">Commande utile si vous avez supprimer/modifier manuellement des attributs.</div>\r\n            <div className=\"Quote\"> bin/console make:entity --regenerate App </div></div>\r\n\r\n            <div>• Créer une BD \r\n            <div className=\"Info\">Attention, créer un utilisateur sur phpMyAdmin créer également une BD dumême nom. Commande peu utilisée pour les TPs donc.</div>\r\n            <div className=\"Quote\">  bin/console doctrine:database:create </div></div>\r\n\r\n            <div>• Créer tables BD à partir des entités : <div className=\"Quote\">  bin/console doctrine:schema:create</div></div>\r\n\r\n            <div>• Supprimer les tables BD : \r\n            <div className=\"Info\">Attention, le contenu des tables sera également supprimer !</div>\r\n            <div className=\"Quote\"> bin/console doctrine:schema:drop --force</div></div>\r\n\r\n            <div>• Mise à jour de la BD :<div className=\"Quote\"> bin/console doctrine:schema:update --force </div></div>\r\n\r\n            <div className=\"Exemple\">\r\n            <Container text=\"Exemple de onDelete sur attributs de classe\" code={onDelete} language=\"javascript\"/> \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Doctrine;","export function Welcome()\r\n{\r\n\r\n    return(\r\n        <div className=\"Page\">\r\n            <h1 className=\"TitlePage\">Bienvenue dans l'Ultimate PDF !</h1>\r\n            <i> \r\n                <div>Je ne me porte pas garant des éventuelles bêtises écrites dans cette documentation.</div>\r\n                <div>Référez-vous en priorité à la documentation officielle pour ne pas bousiller vos projets !</div>\r\n            </i>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Welcome;\r\n","import Container from '../Container'\r\nimport { exempleTwig } from './files/AllQuotes'\r\nimport Liens from '../Liens'\r\n\r\nexport function Twig()\r\n{\r\n    return(\r\n        <div className=\"Page\">\r\n            <h1 className=\"TitlePage\"> Twig (MVC)</h1>\r\n\r\n            <div className=\"DocuSection\">\r\n                  <Liens url=\"https://symfony.com/doc/current/templates.html#twig-templating-language\" nom=\"Documentation Twig\"/>\r\n                  <Liens url=\"https://symfony.com/doc/current/templates.html#creating-templates\" nom=\"Documentation Template\"/>\r\n            </div>\r\n\r\n            <div>• Boucle :<div className=\"Quote\">&#x7B;% for ... in ... %&#x7D;<br/> &#x7B;% endfor %&#x7D;</div></div>\r\n            <div>• Condition : <div className=\"Quote\">&#x7B;% if ... %&#x7D;<br/> &#x7B;% endif %&#x7D;</div></div>\r\n            <div>• Déclarer variable :  <div className=\"Quote\">&#x7B;% set ... %&#x7D;</div></div>\r\n            <div>• Check authentifier :  <div className=\"Quote\">&#x7B;% if is_granted('IS_AUTHENTICATED_FULLY') %&#x7D;<br/> &#x7B;% endif %&#x7D;</div></div>\r\n            <div>• Check rôle :  <div className=\"Quote\">&#x7B;% if is_granted('ROLE_ADMIN') %&#x7D;<br/> &#x7B;% endif %&#x7D;</div></div>\r\n            <div>• Commentaire :  <div className=\"Quote\">&#x7B;# commentaire... #&#x7D;</div></div>\r\n            <div>• Dump : <div className=\"Quote\">&#x7B;&#x7B; dump(var) &#x7D;&#x7D;</div></div>\r\n\r\n            <div className=\"Exemple\">\r\n            <Container text=\"Exemple de template\" code={exempleTwig} language=\"html\"/>   \r\n            </div>   \r\n        </div> \r\n    );\r\n}\r\n\r\nexport default Twig;","import Liens from '../Liens'\r\n\r\nexport function User()\r\n{\r\n\r\n    return(\r\n    <div className=\"Page\">\r\n            <h1 className=\"TitlePage\"> User</h1>\r\n\r\n            <div className=\"DocuSection\">\r\n                   <Liens url=\"https://symfony.com/doc/current/security.html\" nom=\"Documentation Security\"/>\r\n            </div>\r\n\r\n            <div>• Créer un utilisateur : \r\n            <div className=\"Info\">Vous ne pouvez pas faire une de vos entité un utilisateur ! Vous devez créer un utilisateur \r\n            dans un premier temps et ensuite lui ajouter des attributs avec bin/console make:entity</div>\r\n            <div className=\"Quote\">bin/console make:user  </div></div>\r\n            <div>• Créer un authentificateur (formulaire de connexion) :\r\n            <div className=\"Quote\"> bin/console make:auth  </div></div>\r\n            <div>• Créer un formulaire d'inscription :\r\n            <div className=\"Quote\"> bin/console make:registration-form  </div></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;","import Liens from '../Liens'\r\n\r\nexport function Migration()\r\n{\r\n\r\n    return(\r\n    <div className=\"Page\">\r\n            <h1 className=\"TitlePage\"> Migration</h1>\r\n\r\n            <div className=\"DocuSection\">\r\n                 <Liens url=\"https://symfony.com/doc/current/doctrine.html#migrations-creating-the-database-tables-schema\" nom=\"Documentation Migration\"/>\r\n            </div>\r\n\r\n            <div>• Créer une migration : <div className=\"Quote\"> bin/console make:migration </div></div>\r\n            <div>• Transfert migration vers la BD :<div className=\"Quote\"> bin/console doctrine:migrations:migrate</div></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Migration;","import Container from '../Container'\r\nimport { fixtureJson , fixtureDependance, fixturesEncoder, fixtureDependanceAlt} from './files/AllQuotes'\r\nimport Liens from '../Liens'\r\n\r\nexport function Fixtures()\r\n{\r\n\r\n    return(\r\n    <div className=\"Page\">\r\n            <h1 className=\"TitlePage\"> Fixtures</h1>\r\n\r\n            <div className=\"DocuSection\">\r\n                  <Liens url=\"https://symfony.com/doc/current/bundles/DoctrineFixturesBundle/index.html\" nom=\"Documentation Fixtures\"/>\r\n                  <Liens url=\"https://symfony.com/doc/current/bundles/DoctrineFixturesBundle/index.html#accessing-services-from-the-fixtures\" nom=\"Documentation encodage password pour Fixtures\"/>\r\n            </div>\r\n\r\n            <div>• Installer dépendance pour fixtures : <div className=\"Quote\">  composer require --dev orm-fixtures </div></div>\r\n            <div>• Créer une fixtures :<div className=\"Quote\"> bin/console make:fixtures</div></div>\r\n            <div>• Charger les fixtures dans la BD :\r\n            <div className=\"Info\">Attention, charger les fixtures de cette manière là, c'est à dire toute en même\r\n            temps, risque de causer des problèmes au niveau de l'IR (intégrité référentielle) de la\r\n            BD si vous avez créer des fixtures dépendante les unes des autres.\r\n            Ajouter --no-interaction pour ignorer les associations.</div>\r\n            <div className=\"Quote\">   bin/console doctrine:fixtures:load </div></div>\r\n\r\n            <div className=\"Exemple\">\r\n                <Container text=\"Exemple fixtures avec fichiers .json\" code={fixtureJson} language=\"javascript\"/>   \r\n                <Container text=\"Exemple charger fixtures avec dépendances\" code={fixtureDependance} language=\"javascript\"/>   \r\n                <Container text=\"Exemple d'encodage de password dans les fixtures\" code={fixturesEncoder} language=\"javascript\"/>   \r\n                <Container text=\"Exemple dépendances fixtures (getReference)\" code={fixtureDependanceAlt} language=\"javascript\"/>   \r\n            </div>\r\n\r\n        </div>\r\n \r\n    );\r\n}\r\n\r\nexport default Fixtures;","import Container from '../Container'\r\nimport { buildForm} from './files/AllQuotes'\r\nimport Liens from '../Liens'\r\n\r\nexport function Formulaire() {\r\n\r\n    return (\r\n        <div className=\"Page\">\r\n            <h1 className=\"TitlePage\"> Formulaire</h1>\r\n\r\n            <div className=\"DocuSection\">\r\n                  <Liens url=\"https://symfony.com/doc/current/components/form.html\" nom=\"Documentation Formulaire\"/>\r\n                  <Liens url=\"https://symfony.com/doc/4.4/form/bootstrap4.html\" nom=\"Documentation Bootstrap pour Formulaire\"/>\r\n                  <Liens url=\"https://symfony.com/doc/current/reference/forms/types/entity.html\" nom=\"Documentation Entity Type Field\"/>\r\n            </div>\r\n\r\n            <div>• Installer dépendance pour formulaire :<div className=\"Quote\"> composer require symfony/form </div></div>\r\n            <div>• Créer nouveau formulaire : <div className=\"Quote\"> bin/console make:form</div></div>\r\n\r\n            <div className=\"Exemple\">\r\n            <Container text=\"Exemple de buildForm\" code={buildForm} language=\"javascript\"/> \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Formulaire;","import Container from '../Container'\r\nimport { apiAnnot, denormalizer }  from './files/AllQuotes'\r\nimport Liens from '../Liens'\r\n\r\nexport function Api() {\r\n\r\n    return (\r\n        <div className=\"Page\">\r\n            <h1 className=\"TitlePage\"> API</h1>\r\n\r\n            <div className=\"DocuSection\">\r\n                 <Liens url=\"https://api-platform.com/docs/v2.5/core/getting-started/\" nom=\"Documentation Api\"/>\r\n                 <Liens url=\"https://api-platform.com/docs/v2.5/core/operations/#enabling-and-disabling-operations\" nom=\"Documentation Groups Api\"/>\r\n                 <Liens url=\"https://api-platform.com/docs/v2.5/core/security/#security\" nom=\"Documentation Security Api\"/>\r\n                 <Liens url=\"https://api-platform.com/docs/v2.5/core/serialization/#changing-the-serialization-context-on-a-per-item-basis\" \r\n                 nom=\"Documentation Denormalizer\"/>\r\n            </div>\r\n\r\n            \r\n            \r\n            <div>• Installer dépendance pour API : <div className=\"Quote\"> composer require api </div></div>\r\n            <div> • Annotation nécessaire pour entité <div className=\"Quote\">@ApiResource </div></div>\r\n\r\n            <div className=\"Exemple\">\r\n                <Container text=\"Exemple d'annotation\" code={apiAnnot} language=\"javascript\"/> \r\n                <Container text=\"Exemple denormalizer pour encodage password\" code={denormalizer} language=\"javascript\"/>   \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Api;\r\n\r\n\r\n","import Container from '../Container'\r\nimport { assertSame, mock, functionnalTestContent, functionnalTestContentContainer, functionnalTestDebug } from './files/AllQuotes'\r\nimport Liens from '../Liens'\r\n\r\nexport function Tests()\r\n{\r\n\r\n    return(\r\n    <div className=\"Page\">\r\n            <h1 className=\"TitlePage\"> Tests avec PHP Unit</h1>\r\n\r\n            <div className=\"DocuSection\">\r\n                 <Liens url=\"https://phpunit.readthedocs.io/en/9.3/assertions.html#assertsame\" nom=\"Documentation assertSame()\"/>\r\n                 <Liens url=\"https://phpunit.readthedocs.io/en/9.3/writing-tests-for-phpunit.html#data-providers\" nom=\"Documentation Data Providers\"/>\r\n                 <Liens url=\"https://phpunit.readthedocs.io/en/9.3/test-doubles.html#stubs\" nom=\"Documentation Stubs\"/>\r\n                 <Liens url=\"https://phpunit.readthedocs.io/en/9.3/test-doubles.html#mock-objects\" nom=\"Documentation Mocks\"/>\r\n                 <Liens url=\"https://github.com/zenstruck/foundry#using-in-your-tests\" nom=\"Documentation Tests Foundry\"/>\r\n                 \r\n            </div>\r\n\r\n            <div>• Lancer tout les tests : \r\n            <div className=\"Quote\"> vendor/bin/phpunit  </div></div>\r\n            <div>• Mettre à jour l'auto-chargement de Composer :\r\n            <div className=\"Quote\"> composer dump-autoload</div></div>\r\n            <div>• Couverture de code (rapport fichier html) dans dossier test:\r\n            <div className=\"Quote\"> vendor/bin/phpunit --coverage-html=coverage --whitelist=src tests</div></div>\r\n            <div>• Annotation pour skip la couverture de code (à mettre sur les\r\n            méthodes d'une classe)\r\n            <div className=\"Quote\"> @codeCoverageIgnore</div></div>\r\n            <div>• Créer un test fonctionnel ( /tests/)\r\n            <div className=\"Quote\"> php bin/console make:functional-test</div></div>\r\n\r\n            <div className=\"Exemple\">\r\n            <Container text=\"Exemple d'utilisation d'assertSame avec Data Provider\" code={assertSame} language=\"javascript\"/>   \r\n            <Container text=\"Exemple d'utilisation d'un mock\" code={mock} language=\"javascript\"/>   \r\n            <Container text=\"Exemple de test fonctionnel\" code={functionnalTestContent} language=\"javascript\"/>     \r\n            <Container text=\"Exemple de test fonctionnel avec container:\" code={functionnalTestContentContainer} language=\"javascript\"/>   \r\n            <Container text=\"Exemple de debug pour test fonctionnel\" code={functionnalTestDebug} language=\"javascript\"/>   \r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tests;","import Container from '../Container'\r\nimport { composerReset, composerTest } from './files/AllQuotes'\r\n\r\nexport function Conseils()\r\n{\r\n    return(\r\n    <div className=\"Page\">\r\n            <h1 className=\"TitlePage\"> Conseils</h1>\r\n            <div className=\"conseils\">\r\n                <div> • Où sont mes fichiers ?<br/> </div>\r\n                    <span><br/>Controller frontâle → public/index.php</span>\r\n                    <span>Controller → src/Controller/</span>\r\n                    <span>Fixtures → src/DataFixtures/</span>\r\n                    <span>Factory → src/Factory/</span>\r\n                    <span>Formulaire → src/Form/</span>\r\n                    <span>Vue Twig → templates/</span>\r\n                    <span>Migrations → migrations/</span>\r\n                    <span>Services → src/services</span>\r\n                    <span>Fixtures (json) → src/DataFixtures/data/</span>\r\n            </div>\r\n\r\n            <div className=\"conseils\">\r\n                <div>• Quelles sont les routes mises en place ?</div>\r\n                <div className=\"QuoteConseil\">bin/console debug:router </div>\r\n            </div>\r\n\r\n            <div className=\"conseils\">\r\n                <div>• Quelles sont les services disponibles ?</div>\r\n                <div className=\"QuoteConseil\">bin/console debug:container</div>\r\n            </div>\r\n\r\n            <div className=\"conseils\">\r\n                <div>• Les plugins recommander :</div>\r\n                    <span> <br/>-PHP Annotations</span>\r\n                    <span> -Symfony Support</span>\r\n                    <span> -PHP CS Fixer</span>\r\n                    <span> -.env files support</span>\r\n            </div>\r\n            \r\n\r\n            <div className=\"conseils\">• N'utiliser jamais de simple quote pour les paramètres de vos\r\n            annotations.</div><br/>\r\n\r\n            <div className=\"conseils\">• N'hésiter pas à utiliser dump($var) dans vos controllers\r\n            (apparaîtra dans la Symfony toolbar en bas de votre rendu,\r\n            petit icône en forme de viseur !) , et aussi &#x7B;&#x7B; dump(var) &#x7D;&#x7D;\r\n            dans vos vues.</div><br/>\r\n\r\n            <div className=\"conseils\">• Un petit coup de bin/console cache:clear de temps en temps,\r\n            on ne sais jamais..</div><br/>\r\n\r\n            <div className=\"conseils\">• Vider également le cache de votre navigateur si des\r\n            interférences entre deux projets Symfony ce produit.</div><br/>  \r\n\r\n            <div className=\"conseils\">• Vous pouvez utiliser l'opérateur binaire | pour combiner des\r\n            paramètres d'une fonction lorsque cela est possible.</div><br/> \r\n\r\n            <div className=\"Exemple\">\r\n            <Container text=\"Script Composer reset\" code={composerReset} language=\"javascript\"/>  \r\n            <Container text=\"Script Composer test\" code={composerTest} language=\"javascript\"/>  \r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Conseils;\r\n","import Liens from '../Liens'\r\n\r\nexport function InstallationR()\r\n{\r\n\r\n    return(\r\n                <div className=\"Page\">\r\n                    <h1 className=\"TitlePage\"> Installation React</h1>\r\n                    \r\n                    <div className=\"DocuSection\">\r\n                      <Liens url=\"https://reactjs.org/docs/create-a-new-react-app.html\" nom=\"Documentation React\"/>\r\n                    </div>\r\n\r\n                    <div>• Créer un projet REACT : <div className=\"Quote\"> npx create-react-app leNom</div></div>\r\n                    <div>• Lancer le serveur de développement : <div className=\"Quote\">npm run start</div></div>\r\n                    <div>• Mettre à jour projet REACT  : <div className=\"Quote\">npm install</div></div>\r\n                    <div>• Déploiement projet en production  : <div className=\"Quote\">npm run build</div></div>\r\n                </div>\r\n            );\r\n}\r\n\r\nexport default InstallationR;","export const preventDefault=`\r\n<form className=\"form\" onSubmit={(event)} => {event.preventDefault();}/>\r\n`.trim()\r\n\r\nexport const fetchExemple=`\r\nconst url=\"http://google.fr\"\r\n\r\nexport function getAlbums(page, signal, nameFilter, albumsParPage)\r\n    {\r\n         return fetch(\r\n             url\r\n             +'/albums?page='\r\n             + page+ '&nom='\r\n             + nameFilter \r\n             + '&albumsParPage=' \r\n             + albumsParPage, \r\n             {signal : signal} )\r\n\r\n                .then(function(response)\r\n                {\r\n                    if (response.ok)\r\n                        return response.json();\r\n                    else \r\n                        throw Error (\r\n                            'Erreur au niveau de getAlbums ' \r\n                            + response.status\r\n                            )\r\n                })\r\n                \r\n                .catch(function(error)\r\n                {\r\n                    console.log(\r\n                        'Il y a eu un problème avec l\\'opération fetch: '+ error.message);\r\n                })\r\n    }\r\n`.trim()\r\n\r\n\r\nexport const fetchUseEffect=`\r\nuseEffect(() => {\r\n\r\n    setAlbums(null);\r\n\r\n    let controller = new AbortController();\r\n\r\n    getAlbums(page, controller.signal, nameFilter, albumsParPage)\r\n        .then(json => {\r\n            setPagination(json.pagination);\r\n            setAlbums(json.albums);\r\n        })\r\n\r\n    // Le return d'un useEffect permet de détruire\r\n    // le composant quand il n'est plus dans le DOM\r\n    // Un useEffect retournera toujours un callback    \r\n    return () => {controller.abort();}\r\n\r\n}, [page, nameFilter, albumsParPage]);\r\n\r\n`.trim()\r\n\r\n\r\nexport const exempleRouter=`\r\nreturn (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n\r\n          //:id correspond à un paramètre d'url\r\n          <Route path=\"/tasks/:id\">\r\n            <Detail />\r\n          </Route>\r\n\r\n          <Route path=\"/create\">\r\n            <Create />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n\r\n        </Switch>\r\n      </Router>\r\n\r\n      <Footer/>\r\n    </>\r\n  );\r\n}\r\n`.trim()\r\n\r\n\r\nexport const routerUseParam=`\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport function Detail()\r\n{\r\n        let { id } = useParams();\r\n\r\n        return (\r\n            <h1>Vous avez cliqué sur l'id {id} !</h1>\r\n        );\r\n}\r\n`.trim()\r\n\r\n\r\n\r\nexport const exempleLink=`\r\n<div>\r\n    <Link to ={\"/tasks/\" + task.id}>\r\n        {task.title}\r\n    </Link>\r\n</div\r\n`.trim()\r\n\r\nexport const exempleHistoryPush=`\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport function Exemple()\r\n{\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div onClick={() => history.push('/')}>Exemple</div>\r\n    )\r\n}\r\n`.trim()\r\n\r\n\r\nexport const store=`\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport filters from './filters'\r\nimport tasks from './tasks'\r\n\r\n\r\nconst store = configureStore({\r\n  reducer : {\r\n    tasks : tasks,\r\n    filters: filters\r\n  }\r\n})\r\n\r\nexport default store\r\n\r\n`.trim()\r\n\r\n\r\n\r\nexport const sliceExemple=`\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst tasksSlice = createSlice(\r\n    {\r\n        name: 'tasks',\r\n\r\n        // Les initialStates sont généralement des objets vides ou des variables à NULL\r\n        initialState: {\r\n            tasks: {\r\n                1:\r\n                {\r\n                    id: 1,\r\n                    title: \"Task 1\",\r\n                    description: \"# The description of the task number 1 The main content\",\r\n                    done: false,\r\n                }\r\n            },\r\n        },\r\n\r\n        reducers:\r\n        {\r\n            setTasks: (state, action) => {\r\n                const newTasks = action.payload;\r\n                newTasks.forEach((task) => {\r\n                    state.tasks[task.id] = task;\r\n                });\r\n            }\r\n        }\r\n    }\r\n)\r\n\r\nexport const { setTasks } = tasksSlice.actions;\r\nexport default tasksSlice.reducer;\r\n`.trim()\r\n\r\n\r\nexport const sliceActionExemple=`\r\n\r\n        reducers:\r\n        {\r\n            toggleTask: (state, action) => {\r\n\r\n                // action.payload = ce que l'on donne à la fonction, ici une task\r\n                const toggledTask = action.payload;    \r\n\r\n                // state.tasks = chercher dans les tasks du store\r\n                const originalTask = state.tasks[toggledTask.id];    \r\n\r\n                // Toggle le done de la task du store (qui à était trouver grace à l'id du action.payload)\r\n                originalTask.done = !originalTask.done;              \r\n            },\r\n\r\n            deleteTask: (state, action) => {\r\n                const deletedTask = action.payload;          \r\n                \r\n                delete state.tasks[deletedTask.id];\r\n            }\r\n        }\r\n\r\n`.trim()\r\n\r\n\r\nexport const OjbectToArray=`\r\nlet allTasks = Object.values(tasks)\r\n.filter((task, i) => (filters.showDone && task.done)||(filters.showTodo && !task.done))\r\n.map((task) => <TaskItem key={task.id} task={task}></TaskItem>);\r\n\r\nreturn (\r\n    <div className=\"taskList\">\r\n    {allTasks}\r\n    </div>\r\n);\r\n\r\n`.trim()\r\n\r\n\r\nexport const exempleClassNames1=`\r\n<div className = { classNames({'maClasseCSS': maCondition })}>\r\n`.trim()\r\n\r\n\r\nexport const exempleClassNames2=`\r\n<div className = { classNames({ maClasse1: true }, { \"maClasse2\" : maCondition })}>\r\n`.trim()\r\n\r\n\r\nexport const mardkDownItExemple=`\r\nimport MarkdownIt from 'markdown-it'\r\n\r\nexport function Exemple()\r\n{\r\n    const md = new MarkdownIt();\r\n    const html = md.render(leText);\r\n\r\n    function createMarkup()\r\n    {\r\n        return {__html : html };\r\n    }\r\n\r\n    return (\r\n        <div dangerouslySetInnerHTML={createMarkup()}/>\r\n    )\r\n}\r\n`.trim()\r\n\r\n\r\nexport const arborescence=`\r\n\r\n- projet-react.\r\n    - public.\r\n    - src.\r\n        - components.        vos composents\r\n        - screens.           vos écrans accessible avec le routeur\r\n        - store.             vos slices et le store\r\n        - hooks.             vos hooks personnalisés\r\n        - services.          vos fetchs et autres actions liées à une API\r\n        - App.js           \r\n        - index.js \r\n    - README.md              le markdown à détailler\r\n\r\n`.trim()\r\n\r\n\r\nexport const cookies=`\r\n// Il sera nécéssaire d'utiliser le credentials pour toutes les méthodes\r\n// qui ont besoin d'authentifier un utilisateur par exemple.\r\n\r\nreturn fetch(url, {\r\n    credentials: \"include\"\r\n})\r\n\r\n.then...\r\n`.trim()\r\n\r\n\r\nexport const arrayJS=`\r\nconst [subMenu, setSubMenu] = useState(Array(10).fill(false));\r\n`.trim()\r\n\r\nexport const formJs=`\r\n\r\nreturn (\r\n    <form className=\"form\" onSubmit={(event) => {event.preventDefault(); onSubmit(copyTask)}}>\r\n        <label>Titre: </label>\r\n        <input \r\n        type=\"text\" \r\n        value={copyTask.title} \r\n        required \r\n        placeholder=\"Le titre\" \r\n        onChange={(event) => {\r\n            const title={...copyTask};\r\n            title.title = event.target.value;\r\n            setCopyTask(title);\r\n             }}/>\r\n\r\n        <label>Description: </label>\r\n        <input \r\n        type=\"text\" \r\n        value={copyTask.description} \r\n        placeholder=\"La description\" \r\n        onChange={(event) => {\r\n            const description={...copyTask};\r\n            description.description = event.target.value;\r\n            setCopyTask(description);\r\n             }}/>\r\n\r\n        <button \r\n        type=\"button\" \r\n        onClick={() => {\r\n            const done = {...copyTask};\r\n            done.done === false? done.done = true : done.done = false;\r\n            setCopyTask(done);\r\n            }}> {copyTask.done ? \"Done!\": \"To Do\"}</button>\r\n\r\n        <div className=\"buttonsEnd\">\r\n            <button type=\"submit\" >{submitLabel}</button>\r\n            <button type=\"button\" onClick={onCancel}>{cancelLabel}</button>\r\n            <button \r\n            type=\"button\" \r\n            onClick={() => onDelete(copyTask)} \r\n            hidden={task.id ? \"\" : \"hidden\"}>{deleteLabel}</button>\r\n        </div>\r\n    </form>\r\n);\r\n\r\n`.trim()\r\n\r\n\r\n\r\nexport const storeRacine=`\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from \"./store\";\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n`.trim()\r\n\r\n\r\nexport const thunkSlice=`\r\n// Les thunks sont situés dans la slice, mais ne font\r\n// pas partie des actions !\r\nconst fetchTaskById = (id) => async (dispatch) => {\r\n    //Action d'une slice du store qui va activer un overlay\r\n    dispatch(setIsBusy());                   \r\n    \r\n    //Met la réponse d'une fonction fetch dans une constante \r\n    const fetchedTask = await getTodoById(id);     \r\n    \r\n    //Action de la slice actuelle pour mettre à jour le store\r\n    dispatch(setTask(fetchedTask));      \r\n    \r\n    //Désactive l'overlay\r\n    dispatch(unsetIsBusy());                             \r\n}\r\n\r\nexport { fetchTaskById };\r\n`.trim()\r\n\r\n\r\nexport const thunkDelete=`\r\n// Les fetchs en DELETE ne donne généralement aucune réponse\r\n// Il n'est donc pas nécéssaire la stocker dans une variable/constante\r\n\r\nconst deleteTaskThunk = (task) => async (dispatch) => {\r\n    dispatch(setIsBusy());\r\n    await deleteTodo(task);\r\n    dispatch(deleteTask(task));\r\n    dispatch(unsetIsBusy());\r\n}\r\n\r\nexport { deleteTaskThunk };\r\n`.trim()\r\n\r\n\r\nexport const fetchParam=`\r\nexport function patchTodo(task)\r\n{\r\n    // Créer une instance de Header est nécéssaire pour le paramètre du fetch\r\n    // Le content type diffère selon les urls et les méthodes\r\n    // Celui-ci est trouver dans la documentation de votre API\r\n\r\n    const header = new Headers({\r\n        \"Content-Type\" : \"application/merge-patch+json\"\r\n    })\r\n\r\n    // La méthode correspond à l'action de l'api\r\n    // Il est parfois nécéssaire de transformer le body avant de le transferer à l'API\r\n    return fetch(url+'/todos/' + task.id ,\r\n    {\r\n        credentials: \"include\",\r\n        method : \"PATCH\", \r\n        body : JSON.stringify(task),\r\n        headers: header\r\n     })\r\n\r\n            .then(function(response)\r\n            {\r\n                if (response.ok)\r\n                    return response.json();\r\n                else \r\n                    throw Error ('Erreur au niveau de patchTodos ' + response.status)\r\n            })\r\n            \r\n            .catch(function(error)\r\n            {\r\n                console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n            })\r\n}\r\n`.trim()\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const propsTypesEx=`\r\nnomDuComposant.propTypes =\r\n{\r\n    nomProps: PropTypes.string,\r\n    nomProps2: PropTypes.func,\r\n    nomProps3: PropTypes.object\r\n}\r\n`.trim()\r\n\r\nexport const propsEx1=`\r\nreturn(\r\n    <TaskForm\r\n    task={unObjectTask}\r\n    submitLabel=\"Enregistrer\"\r\n    deleteLabel=\"Supprimer\"\r\n    cancelLabel=\"Annuler\"\r\n    onSubmit={() => console.log(\"Je submit !\")}\r\n    onCancel={() => console.log(\"Cancel !\")}/>\r\n    )\r\n    \r\n`.trim()\r\n\r\nexport const propsEx2=`\r\nexport function TaskForm(props)\r\n{\r\n    const {task, submitLabel, deleteLabel, cancelLabel, onSubmit, onCancel} = props;\r\n\r\n    return (\r\n        ...\r\n    )\r\n}\r\n\r\n`.trim()\r\n\r\n\r\nexport const hooks1=`\r\n// setMenu sera utilisé pour mettre à jour la variable menu\r\n// Le paramètre du useState défini la valeur par défault de la variable\r\n\r\n// Attention pour les objets et les tableaux!\r\n// Il sera nécéssaire de faire une copy de la variable pour que cela fonctionne !\r\n// Voir exemple suivant..\r\n\r\nconst [menu, setMenu] = useState(false);\r\n\r\nreturn(\r\n    <UnComposant onClick={() => setMenu(true)}/>\r\n)\r\n`.trim()\r\n\r\nexport const hooks2=`\r\n\r\nconst [menu, setMenu] = useState([false, false, false]);\r\n\r\nfunction changeMenu(index)\r\n{\r\n    let copyMenu = [...menu];\r\n    copyMenu[index] = true;\r\n\r\n    setMenu(copyMenu);\r\n}\r\n\r\nreturn(\r\n    <UnComposant onClick={() => changeMenu(0)}/>\r\n)\r\n\r\n`.trim()\r\n\r\n\r\n\r\n\r\nexport const useEffect1 =`\r\n// L'effet de bord ici affichera un message dans la console lors du rendu du composant.\r\n// Il affichera de nouveau un message lorsque uneVariable sera modifié.\r\n\r\nuseEffect(() => {    \r\n\r\n    console.log(\"Je fais une action !\");\r\n    \r\n}, [uneVariable]);\r\n\r\n`.trim()\r\n\r\n\r\nexport const fetchParam2 =`\r\n// Redirigera vers la page actuelle\r\n\r\nexport function loginURL()\r\n    {\r\n         return \"https://monSite/login?redirect\" + encodeURIComponent(window.location.href)\r\n    }\r\n\r\n`.trim()\r\n\r\n\r\nexport const ternaire1 =`\r\n// Si maVariable est true, alors Composant 2 sera rendu\r\n// On aura donc Composant 1, 2 et 3.\r\n\r\nreturn (\r\n    <Composant 1>\r\n        {maVariable && \r\n            <Composant 2/>\r\n        }\r\n    <Composant 3>\r\n);\r\n\r\n// Si maVariable est true, alors Composant 2 sera rendu\r\n// On aura donc Composant 1 et 2.\r\n\r\n// Sinon, Composant 3 sera rendu\r\n// On aura donc Composant 1 et 3.\r\n\r\nreturn (\r\n    <Composant 1>\r\n\r\n        {maVariable ?\r\n        <Composant 2>\r\n        :\r\n        <Composant 3>\r\n        }\r\n);\r\n`.trim()\r\n\r\n\r\nexport const axios1 =`\r\n// Axios ici est utilisé dans un thunk\r\n\r\nexport function getObject(idObject) {\r\n    return async (dispatch) => {\r\n      try {\r\n        const response = await axios.get(\\`/objects/\\${idObject}\\`);\r\n\r\n        // On imagine ici une action de la slice pour stocker la réponse\r\n        dispatch(slice.actions.getObjectSuccess(response.data));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n  }\r\n`.trim()\r\n\r\nexport const axios2 =`\r\n// Axios ici est utilisé dans un thunk\r\n// Les méthodes PUT, PATCH et POST nécéssite un second paramètre\r\n// contentant les valeurs à créer/mettre à jour\r\n\r\nexport function putObject(idObject, object) {\r\n    return async (dispatch) => {\r\n      await axios.put(\\`/objects/\\${idObject}\\`, object);\r\n\r\n      // On imagine ici une action de la slice pour stocker la réponse\r\n      dispatch(slice.actions.updateObjectSuccess(response.data))\r\n    };\r\n  }\r\n`.trim()\r\n","import Liens from '../Liens'\r\nimport { propsTypesEx, propsEx1, propsEx2 } from './files/AllQuotes'\r\nimport Container from '../Container'\r\n\r\nexport function Props()\r\n{\r\n\r\n    return(\r\n                <div className=\"Page\">\r\n                    <h1 className=\"TitlePage\"> Props</h1>\r\n\r\n                    <div className=\"DocuSection\">\r\n                        <Liens url=\"https://fr.reactjs.org/docs/components-and-props.html\" nom=\"Documentation Props\"/>\r\n                        <Liens url=\"https://fr.reactjs.org/docs/typechecking-with-proptypes.html\" nom=\"Documentation PropTypes\"/>\r\n                    </div>\r\n\r\n                    <div>• Importer les PropTypes :<div className=\"Quote\">import PropTypes from 'prop-types';</div></div>\r\n\r\n                    <div className=\"Exemple\">\r\n                        <Container text=\"Exemple de Props donner à un composant\" code={propsEx1} language=\"javascript\"/>   \r\n                        <Container text=\"Exemple de Props reçu d'un composant\" code={propsEx2} language=\"javascript\"/>   \r\n                        <Container text=\"Exemple de PropTypes\" code={propsTypesEx} language=\"javascript\"/>   \r\n                    </div>\r\n                </div>\r\n            );\r\n}\r\n\r\nexport default Props;\r\n","import Liens from '../Liens'\r\nimport Container from '../Container'\r\nimport { hooks1, hooks2 } from './files/AllQuotes'\r\n\r\nexport function Hooks()\r\n{\r\n\r\n    return(\r\n                <div className=\"Page\">\r\n                    <h1 className=\"TitlePage\"> Hooks</h1>\r\n\r\n                    <div className=\"DocuSection\">\r\n                         <Liens url=\"https://fr.reactjs.org/docs/hooks-state.html\" nom=\"Documentation useState\"/>\r\n                    </div>\r\n\r\n                    <div>• Importer les hooks : <div className=\"Quote\"> import React, &#x7B; useState &#x7D; from 'react';</div></div>\r\n\r\n                    <div className=\"Exemple\">\r\n                        <Container text=\"Exemple d'utilisation d'un hook\" code={hooks1} language=\"javascript\"/>   \r\n                        <Container text=\"Exemple d'utilisation d'un hook (tableaux et objets)\" code={hooks2} language=\"javascript\"/> \r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n}\r\n\r\nexport default Hooks;","import Liens from '../Liens'\r\nimport Container from '../Container'\r\nimport { useEffect1 } from './files/AllQuotes'\r\n\r\nexport function EffetBord()\r\n{\r\n\r\n    return(\r\n                <div className=\"Page\">\r\n                    <h1 className=\"TitlePage\"> Effet de bord</h1>\r\n                    <div className=\"DocuSection\">\r\n                       <Liens url=\"https://fr.reactjs.org/docs/hooks-effect.html\" nom=\"Documentation useEffect\"/>\r\n                    </div>\r\n                    \r\n                    <div>• Importer le hook : <div className=\"Quote\"> import React, &#x7B; useEffect &#x7D; from 'react';</div></div>\r\n\r\n                    <div className=\"Exemple\">\r\n                        <Container text=\"Exemple d'utilisation d'un effet de bord\" code={useEffect1} language=\"javascript\"/>   \r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n}\r\n\r\nexport default EffetBord;","import Container from '../Container'\r\nimport { exempleRouter, exempleLink, exempleHistoryPush, routerUseParam } from './files/AllQuotes'\r\nimport Liens from '../Liens'\r\n\r\nexport function RouterR()\r\n{\r\n\r\n    return(\r\n                <div className=\"Page\">\r\n                    <h1 className=\"TitlePage\"> Router</h1>\r\n                    \r\n                    <div className=\"DocuSection\">\r\n                         <Liens url=\"https://reactrouter.com/web/guides/quick-start\" nom=\"Documentation Router\"/>\r\n                    </div>\r\n\r\n                    <div>• Installer les composants Router :<div className=\"Quote\">npm install react-router-dom</div></div>\r\n                    <div>• Importer des composants et hooks pour Routing :<div className=\"Quote\">import &#x7B;<br/>\r\n                    BrowserRouter as Router,<br/>\r\n                    Switch,<br/>\r\n                    Route,<br/>\r\n                    Link,<br/>\r\n                    useRouteMatch,<br/>\r\n                    useParams,<br/>\r\n                    useHistory<br/>\r\n                    &#x7D; from \"react-router-dom\";</div></div>\r\n\r\n\r\n                   <div className=\"Exemple\">\r\n                    <Container text=\"Exemple utilisation d'un Router\" code={exempleRouter} language=\"javascript\"/>   \r\n                    <Container text=\"Exemple utilisation paramètre d'url\" code={routerUseParam} language=\"javascript\"/>   \r\n                    <Container text=\"Exemple utilisation d'un Link\" code={exempleLink} language=\"javascript\"/>   \r\n                    <Container text=\"Redirection en JavaScript avec history.push()\" code={exempleHistoryPush} language=\"javascript\"/>   \r\n                    </div>\r\n                </div>\r\n            );\r\n}\r\n\r\nexport default RouterR;","import Container from '../Container'\r\nimport { fetchExemple, fetchUseEffect, cookies , fetchParam, fetchParam2 } from './files/AllQuotes'\r\nimport Liens from '../Liens'\r\n\r\nexport function Fetch()\r\n{\r\n\r\n    return(\r\n                <div className=\"Page\">\r\n                    <h1 className=\"TitlePage\"> Fetch</h1>\r\n                    <div className=\"DocuSection\">\r\n                        <Liens url=\"https://developer.mozilla.org/fr/docs/Web/API/Fetch_API/Using_Fetch\" nom=\"Documentation Fetch\"/>\r\n                        <Liens url=\"https://developer.mozilla.org/en-US/docs/Web/API/Response\" nom=\"Documentation Response\"/>\r\n                        <Liens url=\"https://developer.mozilla.org/fr/docs/Web/API/WindowOrWorkerGlobalScope/fetch\" nom=\"Documentation fetch()\"/>\r\n                    </div>\r\n\r\n                    <div className=\"Exemple\">\r\n                        <Container text=\"Exemple de fetch\" code={fetchExemple} language=\"javascript\"/>   \r\n                        <Container text=\"Exemple d'appel d'un fetch dans un UseEffect\" code={fetchUseEffect} language=\"javascript\"/> \r\n                        <Container text=\"Exemple de cookies de session\" code={cookies} language=\"javascript\"/>     \r\n                        <Container text=\"Exemple de méthode PATCH\" code={fetchParam} language=\"javascript\"/>    \r\n                        <Container text=\"Exemple de redirection dans URL\" code={fetchParam2} language=\"javascript\"/>      \r\n                    </div>\r\n                </div>\r\n            );\r\n}\r\n\r\nexport default Fetch;","export function Separator()\r\n{\r\n\r\n    return(\r\n        <div className=\"Separator\"></div>\r\n    );\r\n}\r\n\r\nexport default Separator;","import Container from '../Container'\r\nimport { store, sliceExemple, sliceActionExemple, storeRacine } from './files/AllQuotes'\r\nimport Liens from '../Liens'\r\nimport Separator from '../Separator'\r\n\r\nexport function ReduxR()\r\n{\r\n\r\n    return(\r\n                <div className=\"Page\">\r\n                    <h1 className=\"TitlePage\"> Redux </h1>\r\n                    \r\n                    <div className=\"DocuSection\">\r\n                         <Liens url=\"https://redux-toolkit.js.org/usage/usage-guide#creating-slices-of-state\" nom=\"Documentation Redux\"/>\r\n                    </div>\r\n\r\n                    <div>• Installer React-Redux : <div className=\"Quote\"> npm install @reduxjs/toolkit react-redux</div></div>\r\n\r\n                    <Separator/>\r\n                    <div>• Import d’une action d’une slice du store : <div className=\"Quote\">import &#x7B; useDispatch &#x7D; from ‘react-redux’<br/>\r\n                    import &#x7B; monAction &#x7D; from ‘./store/maSlice'</div></div>\r\n\r\n                    <div>• Appeler une action importer d'une slice : <div className=\"Quote\"> const dispatch = useDispatch();<br/>\r\n                    dispatch(monAction());</div></div>\r\n\r\n                    <Separator/>\r\n\r\n                    <div>• Import de useSelector <div className=\"Quote\">import &#x7B; useSelector &#x7D; from ‘react-redux’</div></div>\r\n\r\n                    <div>• Appeler données importer du store : <div className=\"Quote\">const donnee = useSelector((state) =&#x3e; state.donne);</div></div>\r\n\r\n                    <div className=\"Exemple\">\r\n                        <Container text=\"Exemple de store (store/index.js)\" code={store} language=\"javascript\"/>    \r\n                        <Container text=\"Appeler le store (/index.js)\" code={storeRacine} language=\"javascript\"/>    \r\n                        <Container text=\"Exemple de slice\" code={sliceExemple} language=\"javascript\"/>    \r\n                        <Container text=\"Exemple d'actions d'une slice\" code={sliceActionExemple} language=\"javascript\"/>    \r\n                    </div>\r\n                </div>\r\n            );\r\n}\r\n\r\nexport default ReduxR;","import Liens from '../Liens'\r\n\r\nexport function FuncJS()\r\n{\r\n\r\n    return(\r\n                <div className=\"Page\">\r\n                    <h1 className=\"TitlePage\"> Fonction utiles JavaScript</h1>\r\n                    <div className=\"DocuSection\">\r\n                         <Liens url=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/Array/map\" \r\n                         nom=\".map() : Transforme le contenu d'un tableau\"/>\r\n                         <Liens url=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\" \r\n                         nom=\".filter() : Filtre le contenu d'un tableau\"/>\r\n                         <Liens url=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/values\" \r\n                         nom=\"Object.values() : Conversion object to array\"/>\r\n                         <Liens url=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\" \r\n                         nom=\".fil() : Remplit un tableau d'une valeur\"/>\r\n                         <Liens url=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/then\" \r\n                         nom=\".then() : Enchaînement de promesse\"/>\r\n                         <Liens url=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Operators/await\" \r\n                         nom=\"await : Attendre la résolution d'une promesse\"/>\r\n                          <Liens url=\"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\" \r\n                         nom=\"JSON.stringify() : Convertit une valeur JavaScript en une chaîne JSON\"/>\r\n                    </div>\r\n                </div>\r\n            );\r\n}\r\n\r\nexport default FuncJS;","import Liens from '../Liens'\r\n\r\nexport function FuncPHP()\r\n{\r\n\r\n    return(\r\n                <div className=\"Page\">\r\n                    <h1 className=\"TitlePage\"> Fonction utiles PHP</h1>\r\n                    <div className=\"DocuSection\">\r\n                        <Liens url=\"https://www.php.net/manual/fr/function.array-push.php\" nom=\"array_push() : Insérer dans un tableau\"/>\r\n                        <Liens url=\"https://www.php.net/manual/en/function.mb-stripos.php\" nom=\"mb_stripos() : Cherche l’occurrence d'un string dans un string\"/>\r\n                        <Liens url=\"https://www.php.net/manual/fr/function.array-rand.php\" nom=\"array_rand() : Sélectionne une clé au hasard dans un tableau\"/>\r\n                        <Liens url=\"https://www.php.net/manual/fr/function.implode.php\" nom=\"implode() : Transforme un tableau en string\"/>\r\n                        <Liens url=\"https://www.php.net/manual/fr/function.readline.php\" nom=\"readline() : Lit une ligne entrer par un utilisateur\"/>\r\n                        <Liens url=\"https://www.php.net/manual/fr/function.in-array.php\" nom=\"in_array() : Indique si une valeur est dans un tableau\"/>\r\n                        <Liens url=\"https://www.php.net/manual/fr/function.array-search.php\" nom=\"array_search() : Cherche valeur dans un tableau (return la clé)\"/>\r\n                        <Liens url=\"https://www.php.net/manual/fr/function.strtotime.php\" nom=\"strtotime() : Transforme une date en int\"/>\r\n                        <Liens url=\"https://www.php.net/manual/fr/function.json-decode.php\" nom=\"json_decode() : Converti un chaîne .json\"/>\r\n                        <Liens url=\"https://www.php.net/manual/fr/function.file-get-contents.php\" nom=\"file_get_contents() : Lit le contenu d'un fichier sous forme de string\"/>\r\n                        <Liens url=\"https://www.php.net/manual/fr/language.constants.magic.php\" nom=\"__DIR__ : Dossier actuel\"/>\r\n                        <Liens url=\"https://www.php.net/manual/fr/dir.constants.php\" nom=\"DIRECTORY_SEPARATOR : / pour Windows, \\ pour Linux\"/>\r\n                    </div>\r\n                </div>\r\n            );\r\n}\r\n\r\nexport default FuncPHP;","import Container from '../Container'\r\nimport { preventDefault, OjbectToArray, arborescence, arrayJS, formJs, ternaire1} from './files/AllQuotes'\r\n\r\nexport function Divers()\r\n{\r\n\r\n    return(\r\n                <div className=\"Page\">\r\n                    <h1 className=\"TitlePage\"> Divers</h1>\r\n\r\n                    <div className=\"Exemple\">\r\n                        <Container text=\"Annuler le rechargement de la page après envoi d’un formulaire\" code={preventDefault} language=\"javascript\"/> \r\n                        <Container text=\"Exemple formulaire avec event\" code={formJs} language=\"javascript\"/>     \r\n                        <Container text=\"Exemple conversion objet vers tableau\" code={OjbectToArray} language=\"javascript\"/>   \r\n                        <Container text=\"Exemple arborescence projet React\" code={arborescence} language=\"html\"/>   \r\n                        <Container text=\"Alternative déclaration array\" code={arrayJS} language=\"javascript\"/>  \r\n                        <Container text='Opérateur ternaire' code={ternaire1} language=\"javascript\"/>   \r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n}\r\n\r\nexport default Divers;","import Container from '../Container'\r\nimport { thunkSlice, thunkDelete } from './files/AllQuotes'\r\nimport Liens from '../Liens'\r\n\r\n\r\nexport function Thunk()\r\n{\r\n\r\n    return(\r\n                <div className=\"Page\">\r\n                    <h1 className=\"TitlePage\"> Thunk </h1>\r\n\r\n                    <div className=\"DocuSection\">\r\n                        <Liens url=\"https://redux-toolkit.js.org/usage/usage-guide#defining-async-logic-in-slices\" nom=\"Documentation Thunk\"/>\r\n                    </div>\r\n\r\n                    <div className=\"Exemple\">\r\n                    <Container text=\"Exemple de Thunk dans une slice\" code={thunkSlice} language=\"javascript\"/>    \r\n                    <Container text=\"Exemple de Thunk avec fetch (DELETE)\" code={thunkDelete} language=\"javascript\"/>    \r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n}\r\n\r\nexport default Thunk;","import Liens from '../Liens'\r\n\r\nexport function Bonus() {\r\n\r\n    return (\r\n        <div className=\"Page\">\r\n            <h1 className=\"TitlePage\"> Bonus</h1>\r\n\r\n            <div className=\"DocuSection\">\r\n                 <Liens url=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/#background\" nom=\"Documentation Flexbox\"/>\r\n                 <Liens url=\"https://www.markdownguide.org/basic-syntax/\" nom=\"Documentation MarkDown\"/>\r\n                 <Liens url=\"https://sass-lang.com/documentation\" nom=\"Documentation Sass\"/>\r\n                 <Liens url=\"https://git-scm.com/docs\" nom=\"Documentation Git\"/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Bonus;","import PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport function SubMenuBundle(props)\r\n{\r\n    const { name, route, onClick, activated } = props;\r\n    const history = useHistory();\r\n\r\n    return(\r\n        <div onClick={() => { onClick(); history.push(`${route}`) }} className={classNames({ SubMenuBundle: true },{ liDoc: true}, { \"selectedBundleSection\": activated })}>{name}</div>\r\n    );\r\n}\r\n\r\nSubMenuBundle.propTypes =\r\n{\r\n    name: PropTypes.string,\r\n    route: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    activated: PropTypes.bool,\r\n}\r\n\r\nexport default SubMenuBundle;","import PropTypes from 'prop-types';\r\n\r\nexport function SectionBundle(props)\r\n{\r\n\r\n    const { subMenuBundle } = props;\r\n\r\n    return(\r\n            <span className=\"SectionBundle\">\r\n                    {subMenuBundle}   \r\n            </span>\r\n    );\r\n}\r\n\r\nSectionBundle.propTypes =\r\n{\r\n    subMenuBundle: PropTypes.array,\r\n}\r\n\r\nexport default SectionBundle;","import SubMenuBundle from \"../SubMenuBundle\";\r\nimport SectionBundle from \"../SectionBundle\";\r\nimport { useState } from 'react';\r\n\r\nexport function useSectionBundle() \r\n{\r\n    const [subMenuBundle, setSubMenuBundle] = useState([]);\r\n\r\n    function toggleSubMenuBundle(i) {\r\n        if (subMenuBundle[i]) {\r\n            setSubMenuBundle([]);\r\n        }\r\n        else {\r\n            let copySubMenuBundle = subMenuBundle.map(v => v = false);\r\n            copySubMenuBundle[i] = true;\r\n            setSubMenuBundle(copySubMenuBundle);\r\n        }\r\n    }\r\n\r\n    const allBundle = \r\n    [\r\n        {   \r\n            //name: \"Symfony\",\r\n            subMenuBundle:\r\n            [\r\n                {\r\n                    name: \"Foundry\",\r\n                    route: \"/doc/symfony/Bundle/Factory\"\r\n                },\r\n                {\r\n                    name: \"EasyAdmin\",\r\n                    route: \"/doc/symfony/Bundle/EasyAdmin\"\r\n                },\r\n                {\r\n                    name: \"Vich Uploader\",\r\n                    route: \"/doc/symfony/Bundle/Vich\"\r\n                },\r\n                {\r\n                    name: \"CS-Fixer\",\r\n                    route: \"/doc/symfony/Bundle/CSFixer\"\r\n                },\r\n                {\r\n                    name: \"GrumPHP\",\r\n                    route: \"/doc/symfony/Bundle/Grum\"\r\n                },\r\n                {\r\n                    name: \"Paginator\",\r\n                    route: \"/doc/symfony/Bundle/Paginator\"\r\n                },\r\n                {\r\n                    name: \"Stof Doctrine\",\r\n                    route: \"/doc/symfony/Bundle/Stof\"\r\n                },\r\n                {\r\n                    name: \"LiipImagine\",\r\n                    route: \"/doc/symfony/Bundle/Liip\"\r\n                },\r\n                {\r\n                    name: \"Rollerworks\",\r\n                    route: \"/doc/symfony/Bundle/Rollerworks\"\r\n                },\r\n                {\r\n                    name: \"Gregwar's Captcha\",\r\n                    route: \"/doc/symfony/Bundle/Gregwar\"\r\n                },\r\n                {\r\n                    name: \"Webpack Encore\",\r\n                    route: \"/doc/symfony/Bundle/Encore\"\r\n                },\r\n                {\r\n                    name: \"Mailer\",\r\n                    route: \"/doc/symfony/Bundle/MailHog\"\r\n                }\r\n            ]\r\n        },\r\n        {   \r\n            //name: \"React\",\r\n            subMenuBundle:\r\n            [\r\n                {\r\n                    name: \"Font Awesome\",\r\n                    route: \"/doc/React/Bundle/FontAwesome\"\r\n                },\r\n                {\r\n                    name: \"ClassNames\",\r\n                    route: \"/doc/React/Bundle/ClassNames\"\r\n                },\r\n                {\r\n                    name: \"Markdown It\",\r\n                    route: \"/doc/React/Bundle/MD\"\r\n                },\r\n                {\r\n                    name: \"Axios\",\r\n                    route: \"/doc/React/Bundle/Axios\"\r\n                }\r\n            ]\r\n        },\r\n        {   \r\n            //name: \"Sequelizer\",\r\n            subMenuBundle:\r\n            [\r\n                {\r\n                    name: \"Crons\",\r\n                    route: \"/doc/Sequelize/Extensions/Crons\"\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n\r\n\r\n    let allBundleSection = allBundle.map((v) =>\r\n    <SectionBundle\r\n        subMenuBundle={\r\n            v.subMenuBundle.map((u, j) =>\r\n                        <SubMenuBundle\r\n                            name={u.name}\r\n                            route={u.route}\r\n                            onClick={() => toggleSubMenuBundle(j)}\r\n                            activated={subMenuBundle[j]}\r\n                            key={u.name}/>)\r\n                    } />       \r\n   );\r\n\r\n    return { allBundleSection };\r\n}\r\n\r\nexport default useSectionBundle;","import Container from '../../Container'\r\nimport { easyAdminDashboard, easyAdminCrud } from '../files/AllQuotes'\r\nimport Liens from '../../Liens'\r\n\r\nexport function Easyadmin()\r\n{\r\n    return(\r\n        <>\r\n            <div className=\"DocuSection\">\r\n               <Liens url=\"https://symfony.com/doc/current/bundles/EasyAdminBundle/index.html\" nom=\"Documentation EasyAdmin 3\"/>\r\n               <Liens url=\"https://symfony.com/doc/current/bundles/EasyAdminBundle/crud.html\" nom=\"Documentation Admin CRUD Controller\"/>\r\n            </div>\r\n            \r\n            <div> • Installer EasyAdmin :\r\n            <div className=\"Quote\">  composer require easycorp/easyadmin-bundle</div></div>\r\n            <div>• Créer CRUD Controller d’une entité :\r\n            <div className=\"Quote\">  php bin/console make:admin:crud</div></div>\r\n\r\n            <div className=\"Exemple\">\r\n            <Container text=\"Exemple de Dashboard\" code={easyAdminDashboard} language=\"javascript\"/>  \r\n            <Container text=\"Exemple de CRUD\" code={easyAdminCrud} language=\"javascript\"/>   \r\n            </div>\r\n            </>\r\n    );\r\n}\r\n\r\nexport default Easyadmin;","import Container from '../../Container'\r\nimport { vichConfig, vichAttributs, vichMethodes, vichInEasyAdmin, fixturesImage } from '../files/AllQuotes'\r\nimport Liens from '../../Liens'\r\n\r\nexport function Vich()\r\n{\r\n\r\n    return(\r\n        <>            \r\n            <div className=\"DocuSection\">\r\n                  <Liens url=\"https://github.com/dustin10/VichUploaderBundle\" nom=\"Documentation VichUploader\"/>\r\n                  <Liens url=\"https://symfony.com/doc/current/bundles/EasyAdminBundle/crud.html\" nom=\"Documentation Admin CRUD Controller\"/>\r\n            </div>\r\n\r\n            <div> • Installer VichUploader :\r\n            <div className=\"Quote\"> composer require vich/uploader-bundle</div></div>\r\n\r\n            <div className=\"Exemple\">\r\n            <Container text=\"Exemple de config de Vich (config/packages/vich_uploader.yaml)\" code={vichConfig} language=\"javascript\"/>   \r\n            <Container text=\"Exemple d'attributs de classe pour Vich\" code={vichAttributs} language=\"javascript\"/>   \r\n            <Container text=\"Exemple de méthodes de classe pour Vich\" code={vichMethodes} language=\"javascript\"/>   \r\n            <Container text=\"Utiliser Vich dans un CRUD Controller (Admin)\" code={vichInEasyAdmin} language=\"javascript\"/>  \r\n            <Container text=\"Charger images dans fixtures avec Vich\" code={fixturesImage} language=\"javascript\"/>    \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Vich;","import Container from '../../Container'\r\nimport { appelForge , factoryEncoder , factoryExemple} from '../files/AllQuotes'\r\nimport Liens from '../../Liens'\r\n\r\nexport function Factory()\r\n{\r\n\r\n    return(\r\n    <>\r\n            <div className=\"DocuSection\">\r\n                <Liens url=\"https://github.com/zenstruck/foundry/blob/master/README.md#Documentation\" nom=\"Documentation Foundry\"/>\r\n                <Liens url=\"https://github.com/fzaninotto/Faker\" nom=\"Documentation Faker\"/>\r\n                <Liens url=\"https://github.com/zenstruck/foundry#factories-as-services\" nom=\"Documentation encodage password pour Factory\"/>\r\n            </div>\r\n\r\n            <div>• Créer une forge :<div className=\"Quote\"> bin/console make:factory  </div></div>\r\n\r\n            <div className=\"Exemple\">\r\n                <Container text=\"Exemple de forge\" code={factoryExemple} language=\"javascript\"/>   \r\n                <Container text=\"Appeler une forge dans les fixtures\" code={appelForge} language=\"javascript\"/>\r\n                <Container text=\"Exemple encodage de mot de passe dans la forge\" code={factoryEncoder} language=\"javascript\"/>   \r\n            </div>\r\n        </>\r\n \r\n    );\r\n}\r\n\r\nexport default Factory;","import Container from '../../Container'\r\nimport { paginatorConfig, paginatorController, paginatorTwig } from '../files/AllQuotes'\r\nimport Liens from '../../Liens'\r\n\r\nexport function Paginator()\r\n{\r\n\r\n    return(\r\n        <>\r\n            <div className=\"DocuSection\">\r\n                <Liens url=\"https://github.com/KnpLabs/KnpPaginatorBundle\" nom=\"Documentation Paginator\"/>\r\n            </div>\r\n\r\n            <div>• Installer Paginator :<div className=\"Quote\"> composer require knplabs/knp-paginator-bundle </div></div>\r\n\r\n            <div className=\"Exemple\">\r\n                <Container text=\"Exemple de fichier de configuration Paginator\" code={ paginatorConfig } language=\"javascript\"/>\r\n                <Container text=\"Exemple d'utilisation de Paginator dans un controller\" code={ paginatorController } language=\"javascript\"/>\r\n                <Container text=\"Exemple d'utilisation de Paginator dans un template\" code={ paginatorTwig } language=\"javascript\"/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Paginator;","import Container from '../../Container'\r\nimport { csFixerScript } from '../files/AllQuotes'\r\nimport Liens from '../../Liens'\r\n\r\nexport function CSFixer()\r\n{\r\n    return(\r\n        <>\r\n            <div className=\"DocuSection\">\r\n               <Liens url=\"https://packagist.org/packages/friendsofphp/php-cs-fixer\" nom=\"Documentation CS-Fixer\"/>\r\n            </div>\r\n            \r\n            <div> • Installer CS-Fixer :\r\n            <div className=\"Quote\">composer require friendsofphp/php-cs-fixer</div></div>\r\n\r\n            <div> Controler le code avec CS-fixer :\r\n            <div className=\"Quote\">vendor/bin/php-cs-fixer fix --dry-run</div></div>\r\n\r\n            <div> Valider le code avec CS-Fixer :\r\n            <div className=\"Quote\">vendor/bin/php-cs-fixer fix </div></div>\r\n\r\n            <div className=\"Exemple\">\r\n                <Container text=\"CS-Fixer script\" code={csFixerScript} language=\"javascript\"/>  \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CSFixer;","import Container from '../../Container'\r\nimport { grumConfig } from '../files/AllQuotes'\r\nimport Liens from '../../Liens'\r\n\r\nexport function Grum()\r\n{\r\n    return(\r\n        <>\r\n            <div className=\"DocuSection\">\r\n                <Liens url=\"https://github.com/phpro/grumphp#installation\" nom=\"Documentation GrumPHP\"/>\r\n            </div>\r\n\r\n            <div>• Installer GrumPHP :<div className=\"Quote\"> composer require --dev phpro/grumphp </div></div>\r\n            <div>• Générer le fichier de configuration :<div className=\"Quote\"> vendor/bin/grumphp configure </div></div>\r\n\r\n            <div className=\"Exemple\">\r\n                <Container text=\"Exemple de fichier de configuration GrumPHP\" code={ grumConfig } language=\"javascript\"/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Grum;","import Container from '../../Container'\r\nimport { stofConfig, sluggable, blameable } from '../files/AllQuotes'\r\nimport Liens from '../../Liens'\r\n\r\nexport function Stof()\r\n{\r\n    return(\r\n        <>\r\n            <div className=\"DocuSection\">\r\n               <Liens url=\"https://symfony.com/doc/current/bundles/StofDoctrineExtensionsBundle/index.html\" nom=\"Documentation Stof\"/>\r\n            </div>\r\n            \r\n            <div> • Installer Stof :\r\n            <div className=\"Quote\">composer require stof/doctrine-extensions-bundle</div></div>\r\n\r\n            <div className=\"Exemple\">\r\n                <Container text=\"Exemple de configuration de Stof\" code={stofConfig} language=\"javascript\"/>  \r\n                <Container text=\"Exemple utilisation de sluggable\" code={sluggable} language=\"javascript\"/>  \r\n                <Container text=\"Exemple utilisation de blameable\" code={blameable} language=\"javascript\"/>  \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Stof;","import Container from '../../Container'\r\nimport { liipConfig, liipUse } from '../files/AllQuotes'\r\nimport Liens from '../../Liens'\r\n\r\nexport function Liip()\r\n{\r\n    return(\r\n        <>\r\n            <div className=\"DocuSection\">\r\n               <Liens url=\"https://github.com/liip/LiipImagineBundle\" nom=\"Documentation LiipImagine\"/>\r\n            </div>\r\n            \r\n            <div> • Installer LiipImagineBundle :\r\n            <div className=\"Quote\">composer require liip/imagine-bundle</div></div>\r\n\r\n            <div className=\"Exemple\">\r\n                <Container text=\"Exemple de configuration de Liip\" code={liipConfig} language=\"javascript\"/>  \r\n                <Container text=\"Exemple utilisation de Liip dans un template\" code={liipUse} language=\"javascript\"/>  \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Liip;\r\n","import Container from '../../Container'\r\nimport { rollerworks } from '../files/AllQuotes'\r\nimport Liens from '../../Liens'\r\n\r\nexport function Rollerworks()\r\n{\r\n    return(\r\n        <>\r\n            <div className=\"DocuSection\">\r\n               <Liens url=\"https://github.com/rollerworks/PasswordStrengthBundle\" nom=\"Documentation Rollerworks\"/>\r\n            </div>\r\n            \r\n            <div> • Installer Rollerworks :\r\n            <div className=\"Quote\">composer require rollerworks/password-strength-bundle</div></div>\r\n\r\n            <div className=\"Exemple\">\r\n                <Container text=\"Exemple de requirements validation dans un formulaire\" code={rollerworks} language=\"javascript\"/>  \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Rollerworks;\r\n","import Container from '../../Container'\r\nimport { gregwar } from '../files/AllQuotes'\r\nimport Liens from '../../Liens'\r\n\r\nexport function Gregwar()\r\n{\r\n    return(\r\n        <>\r\n            <div className=\"DocuSection\">\r\n                <Liens url=\"https://github.com/Gregwar/CaptchaBundle\" nom=\"Documentation Gregwar's Captcha\"/>\r\n            </div>\r\n\r\n            <div>• Installer Gregwar's Captcha :<div className=\"Quote\">  composer require gregwar/captcha-bundle </div></div>\r\n\r\n            <div className=\"Exemple\">\r\n                <Container text=\"Exemple d'utilisation du captcha\" code={ gregwar } language=\"javascript\"/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Gregwar;\r\n","import Container from '../../Container'\r\nimport { encore } from '../files/AllQuotes'\r\nimport Liens from '../../Liens'\r\n\r\nexport function Encore()\r\n{\r\n    return(\r\n        <>\r\n            <div className=\"DocuSection\">\r\n               <Liens url=\"https://symfony.com/doc/4.4/frontend/encore/installation.html\" nom=\"Documentation Webpack Encore\"/>\r\n            </div>\r\n            \r\n            <div> • Installer Encore :\r\n            <div className=\"Info\">Nécéssite de lancer <i>npm install</i> après l'installation</div>\r\n            <div className=\"Quote\">  composer require symfony/webpack-encore-bundle</div></div>\r\n            \r\n            <div className=\"Exemple\">\r\n            <Container text=\"Utilise Encore dans les templates\" code={encore} language=\"javascript\"/>  \r\n            </div>\r\n            </>\r\n    );\r\n}\r\n\r\nexport default Encore;","import Container from '../../Container'\r\nimport { mailHog, mailHogConfig , mailHogController} from '../files/AllQuotes'\r\nimport Liens from '../../Liens'\r\n\r\nexport function MailHog()\r\n{\r\n\r\n    return(\r\n    <>\r\n            <div className=\"DocuSection\">\r\n                <Liens url=\"https://github.com/mailhog/MailHog\" nom=\"Documentation MailHog\"/>\r\n            </div>\r\n\r\n            <div>• Installer MailHog :<div className=\"Quote\">sudo apt-get -y install golang-go<br/>\r\n            go get github.com/mailhog/MailHog</div></div>\r\n\r\n            <div>• Rendre MailHog executable (Linux) :<div className=\"Quote\">chmod a+x ./MailHog_linux_amd64_</div></div>\r\n            \r\n            <div>• Lancer MailHog (Linux) :<div className=\"Quote\">./MailHog_linux_amd64_</div></div>\r\n\r\n            <div className=\"Exemple\">\r\n                <Container text=\"Appeler Mailer dans le .env\" code={mailHog} language=\"javascript\"/>    \r\n                <Container text=\"Exemple de configuration de mailer\" code={mailHogConfig} language=\"javascript\"/>    \r\n                <Container text=\"Exemple d'utilisation du mailer dans un controller\" code={mailHogController} language=\"javascript\"/>    \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MailHog;","import useSectionBundle from \"../Hooks/useSectionBundle\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\nimport Easyadmin from \"./Bundles/Easyadmin\";\r\nimport Vich from \"./Bundles/Vich\";\r\nimport Factory from \"./Bundles/Factory\"\r\nimport Paginator from \"./Bundles/Paginator\";\r\nimport CSFixer from \"./Bundles/CSFixer\";\r\nimport Grum from \"./Bundles/Grum\";\r\nimport Stof from \"./Bundles/Stof\";\r\nimport Liip from \"./Bundles/Liip\";\r\nimport Rollerworks from \"./Bundles/Rollerworks\";\r\nimport Gregwar from \"./Bundles/Gregwar\";\r\nimport Encore from \"./Bundles/Encore\";\r\nimport MailHog from \"./Bundles/MailHog\";\r\n\r\nexport function BundleSymf()\r\n{\r\n    const { allBundleSection } = useSectionBundle();\r\n\r\n    return(\r\n        <Router>\r\n            <div className=\"Page\">\r\n                 <h1 className=\"TitlePage\">Bundles Symfony</h1>\r\n                  {allBundleSection[0]}\r\n             \r\n          <Switch>\r\n\r\n            <Route path=\"/doc/symfony/Bundle/Factory\">\r\n              <Factory/>\r\n            </Route>\r\n  \r\n            <Route path=\"/doc/symfony/Bundle/EasyAdmin\">\r\n              <Easyadmin/>\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Bundle/Vich\">\r\n              <Vich/>\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Bundle/CSFixer\">\r\n              <CSFixer/>\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Bundle/Grum\">\r\n              <Grum/>\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Bundle/Paginator\">\r\n              <Paginator/>\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Bundle/Stof\">\r\n              <Stof/>\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Bundle/Liip\">\r\n              <Liip/>\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Bundle/Rollerworks\">\r\n              <Rollerworks/>\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Bundle/Gregwar\">\r\n              <Gregwar/>\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Bundle/Encore\">\r\n              <Encore/>\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Bundle/MailHog\">\r\n              <MailHog/>\r\n            </Route>\r\n\r\n            </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\n\r\nexport default BundleSymf;","import Liens from '../../Liens'\r\n\r\nexport function FontAwesomeR()\r\n{\r\n\r\n    return(\r\n                <>\r\n                    <div className=\"DocuSection\">\r\n                          <Liens url=\"https://fontawesome.com/icons?d=gallery\" nom=\"FontAwesome Icônes\"/>\r\n                    </div>\r\n                    <div>• Installer les paquets pour icônes Font Awesome : <div className=\"Quote\"> npm install @fortawesome/fontawesome-svg-core \\\r\n                    <br/>\r\n                    @fortawesome/free-solid-svg-icons \\\r\n                    <br/>\r\n                    @fortawesome/react-fontawesome</div></div>\r\n                    <div>• Exemple d'import d'icônes : <div className=\"Quote\">import &#x7B; FontAwesomeIcon &#x7D; from '@fortawesome/react-\r\n                    fontawesome'<br/>import &#x7B; faTimes, faCircle &#x7D; from '@fortawesome/free-solid-svg-icons'</div></div>\r\n                    <div>• Mettre icons dans des constantes : <div className=\"Quote\">const icon1 = &lt;FontAwesomeIcon icon=&#x7B; faTimes &#x7D; /&gt;</div></div>\r\n                </>\r\n            );\r\n}\r\n\r\nexport default FontAwesomeR;","import Container from '../../Container'\r\nimport { exempleClassNames1, exempleClassNames2 } from '../files/AllQuotes'\r\nimport Liens from '../../Liens'\r\n\r\nexport function ClassNamesR()\r\n{\r\n\r\n    return(\r\n                <>\r\n                    <div className=\"DocuSection\">\r\n                         <Liens url=\"https://www.npmjs.com/package/classnames\" nom=\"Documentation ClassNames\"/>\r\n                    </div>\r\n\r\n                    <div>• Installer ClassNames : <div className=\"Quote\">npm install classnames</div></div>\r\n\r\n                    <div>• Importer ClassNames : <div className=\"Quote\">import classNames from 'classnames';</div></div>\r\n\r\n\r\n                    <div className=\"Exemple\">\r\n                        <Container text=\"Exemple utilisation ClassNames\" code={exempleClassNames1} language=\"html\"/>   \r\n                        <Container text=\"Exemple utilisation ClassNames bis\" code={exempleClassNames2} language=\"html\"/>   \r\n                    </div>\r\n                </>\r\n            );\r\n}\r\n\r\nexport default ClassNamesR;","import Container from '../../Container'\r\nimport { mardkDownItExemple } from '../files/AllQuotes'\r\nimport Liens from '../../Liens'\r\n\r\nexport function MD()\r\n{\r\n\r\n    return(\r\n                <>\r\n                    <div className=\"DocuSection\">\r\n                         <Liens url=\"https://github.com/markdown-it/markdown-it\" nom=\"Documentation MarkDown It\"/>\r\n                    </div>\r\n\r\n                    <div>• Installer Markdown It : <div className=\"Quote\">npm install markdown-it --save</div></div>\r\n\r\n                    <div className=\"Exemple\">\r\n                        <Container text=\"Exemple d’utilisation de Markdown-It\" code={mardkDownItExemple} language=\"javascript\"/>   \r\n                    </div>\r\n                </>\r\n            );\r\n}\r\n\r\nexport default MD;","import Liens from '../../Liens'\r\nimport Container from '../../Container'\r\nimport { axios1, axios2 } from '../files/AllQuotes'\r\n\r\nexport function Axios()\r\n{\r\n\r\n    return(\r\n                <>\r\n                    <div className=\"DocuSection\">\r\n                          <Liens url=\"https://www.npmjs.com/package/axios\" nom=\"Documentation Axios\"/>\r\n                    </div>\r\n                    <div>• Installer Axios : <div className=\"Quote\"> npm install axios </div></div>\r\n                    <div>• Importer Axios : <div className=\"Quote\"> const axios = require('axios'); </div></div>\r\n\r\n                    <div className=\"Exemple\">\r\n                        <Container text=\"Exemple utilisation méthode GET\" code={axios1} language=\"javascript\"/>   \r\n                        <Container text=\"Exemple utilisation méthode PUT\" code={axios2} language=\"javascript\"/>   \r\n                    </div>\r\n                </>\r\n            );\r\n}\r\n\r\nexport default Axios;","import useSectionBundle from \"../Hooks/useSectionBundle\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport FontAwesomeR from './Bundle/FontAwesomeR';\r\nimport ClassNames from './Bundle/ClassNamesR';\r\nimport MD from './Bundle/MD';\r\nimport Axios from './Bundle/Axios';\r\n\r\nexport function BundleReact() {\r\n  const { allBundleSection } = useSectionBundle();\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"Page\">\r\n        <h1 className=\"TitlePage\">Bundle React</h1>\r\n        {allBundleSection[1]}\r\n\r\n        <Switch>\r\n\r\n          <Route path=\"/doc/React/Bundle/FontAwesome\">\r\n            <FontAwesomeR />\r\n          </Route>\r\n\r\n          <Route path=\"/doc/React/Bundle/ClassNames\">\r\n            <ClassNames />\r\n          </Route>\r\n\r\n          <Route path=\"/doc/React/Bundle/MD\">\r\n            <MD />\r\n          </Route>\r\n\r\n          <Route path=\"/doc/React/Bundle/Axios\">\r\n            <Axios />\r\n          </Route>\r\n\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default BundleReact;","import Container from '../Container'\r\nimport { voter1 , voter2, voter3 }  from './files/AllQuotes'\r\nimport Liens from '../Liens'\r\n\r\nexport function Voters() {\r\n\r\n    return (\r\n        <div className=\"Page\">\r\n            <h1 className=\"TitlePage\"> Voters</h1>\r\n\r\n            <div className=\"DocuSection\">\r\n                 <Liens \r\n                    url=\"ttps://symfony.com/doc/current/security/voters.html\" \r\n                    nom=\"Documentation Voters\"/>\r\n                 <Liens \r\n                    url=\"https://symfony.com/doc/current/security.html#checking-to-see-if-a-user-is-logged-in-is-authenticated-fully\" \r\n                    nom=\"Documentation Access Control\"/>\r\n            </div>\r\n\r\n            <div>• Créer un voter :<div className=\"Quote\"> bin/console make:voter</div></div>\r\n\r\n            <div className=\"Exemple\">\r\n                <Container text=\"Exemple de voter\" code={voter1} language=\"javascript\"/> \r\n                <Container text=\"Exemple utlisation d'un voter dans controller\" code={voter2} language=\"javascript\"/> \r\n                <Container text=\"Exemple utlisation d'un voter dans un template\" code={voter3} language=\"javascript\"/>     \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Voters;\r\n\r\n\r\n","import Container from '../Container'\r\nimport { eventController, eventEvent, eventSubscriber } from './files/AllQuotes'\r\nimport Liens from '../Liens'\r\n\r\nexport function Event() {\r\n\r\n    return (\r\n        <div className=\"Page\">\r\n            <h1 className=\"TitlePage\"> Event</h1>\r\n\r\n            <div className=\"DocuSection\">\r\n                  <Liens url=\"https://symfony.com/doc/current/event_dispatcher.html\" nom=\"Documentation Event\"/>\r\n            </div>\r\n\r\n            <div className=\"Exemple\">\r\n            <Container text=\"Exemple d'appel d'un event dans un controller\" code={eventController} language=\"javascript\"/> \r\n            <Container text=\"Exemple d'event\" code={eventEvent} language=\"javascript\"/> \r\n            <Container text=\"Exemple de subscriber\" code={eventSubscriber} language=\"javascript\"/> \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Event;\r\n","import Container from '../Container'\r\nimport { command } from './files/AllQuotes'\r\nimport Liens from '../Liens'\r\n\r\nexport function Console()\r\n{\r\n    return(\r\n    <div className=\"Page\">\r\n            <h1 className=\"TitlePage\">Console</h1>\r\n\r\n            <div className=\"DocuSection\">\r\n                 <Liens url=\"https://symfony.com/doc/4.4/console.html\" nom=\"Documentation Console\"/>\r\n            </div>\r\n\r\n            <div>• Créer une commande \r\n            <div className=\"Quote\"> bin/console make:command </div></div>\r\n\r\n            <div>• Executer une commande \r\n            <div className=\"Quote\"> bin/console nomDeLaCommande</div></div>\r\n\r\n            <div className=\"Exemple\">\r\n                <Container text=\"Exemple de commande\" code={command} language=\"javascript\"/>    \r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Console;\r\n","export const cron1 = `\r\nrequire('./cronFile');\r\n`.trim()\r\n\r\nexport const cron2 = `\r\nconst sequelize = require('./src/db/sequelize');\r\nconst { QueryTypes } = require('sequelize');\r\nvar CronJob = require('cron').CronJob;\r\n\r\n// Cron executer tout les mois\r\nconst job = new CronJob('0 0 1 * *', async function () {\r\n\r\n    try {\r\n        ...\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    };\r\n\r\n});\r\n\r\njob.start();\r\n`.trim()\r\n\r\nexport const vanillaSQL = `\r\ntry {\r\n    // Ici supprime tout les enreigstrements d'une table\r\n    // qui ont plus de 10 ans\r\n    await sequelize.query(\"DELETE FROM table_name WHERE createdAt <=DATE_SUB(NOW(), INTERVAL 10 YEAR)\",\r\n        {\r\n            type: QueryTypes.DELETE\r\n        });\r\n} catch (error) {\r\n    console.log(error.message);\r\n};\r\n`.trim()\r\n\r\nexport const modele1 = `\r\nconst {models} = require(\"./index\");\r\nmodule.exports = (sequelize, DataTypes) => {\r\n    const User =  sequelize.define('User', {\r\n        user_id: {\r\n            type: DataTypes.INTEGER,\r\n            primaryKey: true,\r\n            autoIncrement: true\r\n        },\r\n        login: {\r\n            type: DataTypes.STRING,\r\n            allowNull:false,\r\n            validate : {\r\n                notEmpty:{msg: \\`User : Login cannot be empty !\\`},\r\n                notNull: {msg: \\`User : Login cannot be NULL!\\`}\r\n            },\r\n            unique: {\r\n                args : true,\r\n                msg: 'User : Login already exist!'\r\n            }\r\n        },\r\n        password: {\r\n            type: DataTypes.STRING,\r\n            allowNull:false,\r\n            validate : {\r\n                notEmpty:{msg: \\`User : Password cannot be empty !\\`},\r\n                notNull: {msg: \\`User : Password cannot be NULL!\\`}\r\n            }\r\n        },\r\n        country_id: {\r\n            type: DataTypes.INTEGER,\r\n            allowNull:true,\r\n            validate : {\r\n                notEmpty:{msg:\\`User : Country_id cannot be empty !\\`}\r\n            }\r\n        },\r\n        birthday: {\r\n            type: DataTypes.DATEONLY,\r\n            allowNull:false,\r\n            validate : {\r\n                notEmpty:{msg: \\`User : birthday cannot be empty !\\`},\r\n                notNull: {msg: \\`User : birthday cannot be NULL!\\`}\r\n            }\r\n        },\r\n        country_id: {\r\n            type: DataTypes.INTEGER,\r\n            allowNull:true,\r\n            validate : {\r\n                notEmpty:{msg:\\`User : Country_id cannot be empty !\\`}\r\n            }\r\n        }\r\n    }, \r\n    {\r\n        tableName: 'users',\r\n        timestamps: true,\r\n        hooks: {\r\n            afterCreate: (user) => {\r\n                delete user.dataValues.password;\r\n            },\r\n            afterUpdate: (user) => {\r\n                delete user.dataValues.password;\r\n            }\r\n        }\r\n\r\n    });\r\n    User.associate = models => {\r\n\r\n        User.belongsTo(models.Country,{\r\n            as: 'country',\r\n            foreignKey:'country_id',\r\n            sourceKey: 'country_id',\r\n            timestamps: false,\r\n            onDelete:'SET NULL'\r\n        });\r\n\r\n        User.hasMany(models.Task,{\r\n            foreignKey:'user_id', \r\n            sourceKey:'user_id'\r\n        });\r\n    }\r\n    return User;\r\n} \r\n`.trim()\r\n\r\nexport const route1 = `\r\nconst { ValidationError, UniqueConstraintError } = require('sequelize');\r\nconst { models } = require('../../models');\r\nmodule.exports = (app) => {\r\n\r\n    app.post('/api/users', async (req, res) => {\r\n\r\n        try {\r\n\r\n            const User = await models['User'].create(req.body);\r\n            const message = \\`User : \\${User.user_id} has been created.\\`;\r\n            res.json({ message, data: User })\r\n\r\n        } catch (error) {\r\n\r\n            if (error instanceof ValidationError) {\r\n                return res.status(400).json({ message: error.message, data: error })\r\n            }\r\n            if (error instanceof UniqueConstraintError) {\r\n                return res.status(400).json({ message: error.message, data: error })\r\n            }\r\n            const message = \\`Service not available. Please retry later.\\`;\r\n            res.status(500).json({ message, data: error });\r\n\r\n        }\r\n    });\r\n}\r\n`.trim()\r\n\r\nexport const route2 = `\r\nconst { models } = require('../../models');\r\nconst { Op } = require('sequelize');\r\nmodule.exports = (app) => {\r\n\r\n    app.get('/api/users', async (req, res) => {\r\n        \r\n        try {\r\n\r\n            const parameters = {};\r\n            parameters.where = {};\r\n\r\n            parameters.order = ['lastname'];\r\n            parameters.attributes = { exclude: ['password'] };\r\n            parameters.include = [\r\n            {\r\n                model: models['Country'],\r\n                as: 'country',\r\n                attributes: [\"label\"]\r\n            }];\r\n\r\n            // recherche par pays\r\n            if (req.query.country) {\r\n                const country = parseInt(req.query.country);\r\n                if (isNaN(country)) {\r\n                    const message = \\`Country parameter should be an integer.\\`;\r\n                    return res.status(400).json({ message })\r\n                }\r\n                parameters.where.country_id = country;\r\n            }\r\n\r\n            // Parameter : LIMIT\r\n            if (req.query.limit) {\r\n                const limit = parseInt(req.query.limit);\r\n                if (isNaN(limit)) {\r\n                    const message = \\`Limit parameter should be an integer.\\`;\r\n                    return res.status(400).json({ message })\r\n                }\r\n                parameters.limit = limit;\r\n            }\r\n\r\n            // Parameter : OFFSET\r\n            if (req.query.offset) {\r\n                const offset = parseInt(req.query.offset);\r\n                if (isNaN(offset)) {\r\n                    const message = \\`Offset parameter should be an integer.\\`;\r\n                    return res.status(400).json({ message })\r\n                }\r\n                parameters.offset = parseInt(req.query.offset);\r\n            }\r\n\r\n            const Users = await models['User'].findAndCountAll(parameters);\r\n            const message = \\`\\${Users.count} users found\\`;\r\n            res.json({ message, data: Users.rows });\r\n        }\r\n\r\n        catch (error) {\r\n\r\n            const message = \\`Service not available. Please retry later.\\`;\r\n            res.status(500).json({ message, data: error })\r\n        }\r\n    });\r\n}\r\n`.trim()\r\n\r\nexport const route3 = `\r\nconst { models } = require('../../models');\r\nmodule.exports = (app) => {\r\n\r\n    app.get('/api/users/:user_id', async (req, res) => {\r\n\r\n        try {\r\n\r\n            const parameters = {};\r\n            parameters.where = { \r\n                user_id: req.params.user_id\r\n            };\r\n            parameters.include = [\r\n                {\r\n                    model: models['Country'],\r\n                    as: 'country',\r\n                    attributes: [\"label\"]\r\n                }\r\n            ];\r\n\r\n            parameters.attributes = {exclude:['password']};\r\n\r\n            // On peut ajouter des informations supplémentaires\r\n            // à la réponse avec les req.query, ici par exemple\r\n            // avec la route /user/:user_id?tasks=true\r\n            if (req.query.tasks === \"true\") {\r\n                const addTasks = {\r\n                    model: models['Task'],\r\n                    where: { user_id: req.params.user_id }\r\n                };\r\n                parameters.include.push(addTasks);\r\n            }\r\n\r\n            const User = await models['User'].findOne(parameters);\r\n            if (User === null) {\r\n                const message = \\`User doesn't exist.Retry with an other user_id.\\`;\r\n                return res.status(404).json({ message });\r\n            }\r\n            const message = \\`Users found\\`;\r\n            res.json({ message, data: User });\r\n        }\r\n\r\n        catch (error) {\r\n\r\n            const message = \\`Service not available. Please retry later.\\`;\r\n            res.status(500).json({ message, data: error });\r\n\r\n        }\r\n    });\r\n}\r\n`.trim()\r\n\r\n\r\nexport const route4 = `\r\nconst { ValidationError, UniqueConstraintError } = require('sequelize');\r\nconst { models } = require('../../models');\r\n\r\nmodule.exports = (app) => {\r\n    app.post('/api/users/:user_id/tasks', async (req, res) => {\r\n\r\n        async function createUser() {\r\n            try {\r\n                const userCreated = await models['User'].create(req.body);\r\n                return userCreated;\r\n            } catch (error) {\r\n                if (error instanceof ValidationError) {\r\n                    return res.status(400).json({ message: error.message, data: error })\r\n                }\r\n                if (error instanceof UniqueConstraintError) {\r\n                    return res.status(400).json({ message: error.message, data: error })\r\n                }\r\n                const message = \\`An error has occured creating the User.\\`;\r\n                return res.status(500).json({ message, data: error.message })\r\n            }\r\n        }\r\n\r\n        async function createUserDefaultTask(user) {\r\n            try {\r\n                const defaultTask = {\r\n                    user_id: user.user_id,\r\n                    name: \"default\"\r\n                }\r\n                await models['Task'].create(defaultTask);\r\n            } catch (error) {\r\n                if (error instanceof ValidationError) {\r\n                    return res.status(400).json({ message: error.message, data: error })\r\n                }\r\n                if (error instanceof UniqueConstraintError) {\r\n                    return res.status(400).json({ message: error.message, data: error })\r\n                }\r\n                const message = \\`An error has occured creating the default task.\\`;\r\n                return res.status(500).json({ message, data: error.message })\r\n            }\r\n        }\r\n\r\n        try {\r\n            const createdUser = await createUser();\r\n            await createUserDefaultTask(createdUser);\r\n\r\n            const message = \\`User \\${createdUser.user_id} and its default task have been created successfuly\\`\r\n            res.json({ message, data: sessionUserCreated });\r\n\r\n        } catch (error) {\r\n\r\n            const message = \\`An error has occured.\\`;\r\n            return res.status(500).json({ message, data: error.message })\r\n        }\r\n    }\r\n    );\r\n}\r\n`.trim()\r\n\r\nexport const mocks1 = `\r\n\r\n`.trim()","import Liens from '../../Liens'\r\nimport Container from '../../Container'\r\nimport { cron1, cron2 } from '../files/AllQuotes'\r\n\r\nexport function Crons() {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"DocuSection\">\r\n                <Liens url=\"https://www.npmjs.com/package/cron\" nom=\"Documentation Node-Cron\" />\r\n            </div>\r\n            <div>• Installer Node-Cron : <div className=\"Quote\"> npm install cron </div></div>\r\n            <div>• Importer Node-Cron : <div className=\"Quote\"> var CronJob = require('cron').CronJob; </div></div>\r\n\r\n            <div className=\"Exemple\">\r\n                <Container text=\"Exemple d'import d'un cron (app.js)\" code={cron1} language=\"javascript\" />\r\n                <Container text=\"Exemple cron\" code={cron2} language=\"javascript\" />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Crons;","import useSectionBundle from \"../Hooks/useSectionBundle\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport Crons from './Bundle/Crons';\r\n\r\nexport function ExtensionSequelize() {\r\n  const { allBundleSection } = useSectionBundle();\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"Page\">\r\n        <h1 className=\"TitlePage\">Extension Sequelize</h1>\r\n        {allBundleSection[2]}\r\n\r\n        <Switch>\r\n\r\n          <Route path=\"/doc/Sequelize/Extensions/Crons\">\r\n            <Crons />\r\n          </Route>\r\n\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default ExtensionSequelize;","import Container from '../Container'\r\nimport { modele1 } from './files/AllQuotes'\r\nimport Liens from '../Liens'\r\n\r\nexport function Modeles() {\r\n\r\n    return (\r\n        <div className=\"Page\">\r\n            <h1 className=\"TitlePage\"> Modèles</h1>\r\n            <div className=\"DocuSection\">\r\n                <Liens url=\"https://sequelize.org/master/manual/model-basics.html\" nom=\"Documentation Modèles Sequelizer\" />\r\n            </div>\r\n\r\n            <div className=\"Exemple\">\r\n                <Container text=\"Exemple de modèle pour la BD (src\\models\\user.js)\" code={modele1} language=\"javascript\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modeles;","import Container from '../Container'\r\nimport { route1, route2, route3, route4 } from './files/AllQuotes'\r\nimport Liens from '../Liens'\r\n\r\nexport function Routes() {\r\n\r\n    return (\r\n        <div className=\"Page\">\r\n            <h1 className=\"TitlePage\"> Routes</h1>\r\n            <div className=\"DocuSection\">\r\n                <Liens url=\"https://sequelize.org/master/manual/model-querying-basics.html\" nom=\"Documentation Routes Sequelizer\" />\r\n            </div>\r\n\r\n            <div className=\"Exemple\">\r\n                <Container text=\"Exemple de route create (src\\routes\\createUser.js)\" code={route1} language=\"javascript\" />\r\n                <Container text=\"Exemple de route findAndCountAll (src\\routes\\getAllUsers.js)\" code={route2} language=\"javascript\" />\r\n                <Container text=\"Exemple de route findOne (src\\routes\\getUserByPk.js)\" code={route3} language=\"javascript\" />\r\n                <Container text=\"Exemple de route avec plusieurs actions\" code={route4} language=\"javascript\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import Container from '../Container'\r\nimport { modele1 } from './files/AllQuotes'\r\nimport Liens from '../Liens'\r\n\r\nexport function Mocks() {\r\n\r\n    return (\r\n        <div className=\"Page\">\r\n            <h1 className=\"TitlePage\"> Mocks</h1>\r\n            <div className=\"DocuSection\">\r\n                {/* <Liens url=\"https://sequelize.org/master/manual/model-basics.html\" nom=\"Documentation Modèles Sequelizer\" /> */}\r\n            </div>\r\n\r\n            <div>Work In Progress</div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Mocks;","import './prism.css';\r\nimport \"prismjs/themes/prism-twilight.css\";\r\nimport Menu from './components/Menu'\r\nimport React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport Installation from './components/Symfony/Installation';\r\nimport Controller from './components/Symfony/Controller';\r\nimport Doctrine from './components/Symfony/Doctrine';\r\nimport Welcome from './components/Welcome';\r\nimport Twig from './components/Symfony/Twig';\r\nimport User from './components/Symfony/User';\r\nimport Migration from './components/Symfony/Migration';\r\nimport Fixtures from './components/Symfony/Fixtures';\r\nimport Formulaire from './components/Symfony/Formulaire';\r\nimport Api from './components/Symfony/Api';\r\nimport Tests from './components/Symfony/Tests';\r\nimport Conseils from './components/Symfony/Conseils';\r\nimport InstallationR from './components/React/InstallationR.js';\r\nimport Props from './components/React/Props';\r\nimport Hooks from './components/React/Hooks';\r\nimport EffetBord from './components/React/EffetBord';\r\nimport RouterR from './components/React/RouterR';\r\nimport Fetch from './components/React/Fetch';\r\nimport ReduxR from './components/React/ReduxR';\r\nimport FuncJS from './components/Autres/FuncJS';\r\nimport FuncPHP from './components/Autres/FuncPHP';\r\nimport Divers from './components/React/Divers';\r\nimport Thunk from './components/React/Thunk';\r\nimport Bonus from './components/Autres/Bonus';\r\nimport BundleSymf from './components/Symfony/BundleSymf';\r\nimport BundleReact from './components/React/BundleReact';\r\nimport Voters from './components/Symfony/Voters';\r\nimport Event from './components/Symfony/Event';\r\nimport Console from './components/Symfony/Console';\r\nimport ExtensionSequelize from './components/Sequelize/ExtensionSequelize';\r\nimport Modeles from './components/Sequelize/Modeles';\r\nimport Routes from './components/Sequelize/Routes';\r\nimport Mocks from './components/Sequelize/Mocks';\r\nimport './DOC.css';\r\n\r\nfunction MainDoc() {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"doc\">\r\n        <Router>\r\n          <Menu />\r\n          <Switch>\r\n\r\n            <Route path=\"/doc/symfony/installation\">\r\n              <Installation />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Controller\">\r\n              <Controller />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Twig\">\r\n              <Twig />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Doctrine\">\r\n              <Doctrine />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/User\">\r\n              <User />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Migration\">\r\n              <Migration />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Fixtures\">\r\n              <Fixtures />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Formulaire\">\r\n              <Formulaire />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Api\">\r\n              <Api />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Tests\">\r\n              <Tests />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Voters\">\r\n              <Voters />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Event\">\r\n              <Event />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Console\">\r\n              <Console />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Conseils\">\r\n              <Conseils />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/symfony/Bundle\">\r\n              <BundleSymf />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/React/InstallationR\">\r\n              <InstallationR />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/React/Props\">\r\n              <Props />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/React/Hooks\">\r\n              <Hooks />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/React/EffetBord\">\r\n              <EffetBord />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/React/RouterR\">\r\n              <RouterR />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/React/Fetch\">\r\n              <Fetch />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/React/ReduxR\">\r\n              <ReduxR />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/React/Thunk\">\r\n              <Thunk />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/React/Divers\">\r\n              <Divers />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/React/Bundle\">\r\n              <BundleReact />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/Sequelize/Extensions\">\r\n              <ExtensionSequelize />\r\n            </Route>\r\n\r\n\r\n\r\n            <Route path=\"/doc/Sequelize/Routes\">\r\n              <Routes />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/Sequelize/Mocks\">\r\n              <Mocks />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/Sequelize/Modeles\">\r\n              <Modeles />\r\n            </Route>\r\n\r\n\r\n\r\n            <Route path=\"/doc/Autres/FuncJS\">\r\n              <FuncJS />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/Autres/FuncPHP\">\r\n              <FuncPHP />\r\n            </Route>\r\n\r\n            <Route path=\"/doc/Autres/Bonus\">\r\n              <Bonus />\r\n            </Route>\r\n\r\n            <Route path=\"/doc\">\r\n              <Welcome />\r\n            </Route>\r\n\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MainDoc;\r\n","function DarkGrotto() {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DarkGrotto;","// react & router\r\nimport '../gallery.css';\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n} from \"react-router-dom\";\r\n\r\n// components\r\nimport DarkGrotto from \"./DarkGrotto\"\r\n\r\nfunction Gallery() {\r\n\tconst history = useHistory();\r\n\tconst allItemLinks = [\r\n\t\t{\r\n\t\t\timage: \"RoyalFamilyBoat1.png\",\r\n\t\t\timageAlt: \"Royal Family Boat\",\r\n\t\t\troute: \"royal-family-boat\",\r\n\t\t\tcolor: \"#9ff0ca\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"KeetasEnd1.png\",\r\n\t\t\timageAlt: \"Keeta's End\",\r\n\t\t\troute: \"keeta-end\",\r\n\t\t\tcolor: \"#f0c39f\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"EclipseTemple1.png\",\r\n\t\t\timageAlt: \"Eclipse Temple\",\r\n\t\t\troute: \"eclipse-temple\",\r\n\t\t\tcolor: \"#9fd9f0\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"DarkIceCathedrale1.png\",\r\n\t\t\timageAlt: \"Dark Ice Cathedrale\",\r\n\t\t\troute: \"dark-ice-cathedrale\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"GoronSanctum1.png\",\r\n\t\t\timageAlt: \"Goron Sanctum\",\r\n\t\t\troute: \"goron-sanctum\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"JDR1.png\",\r\n\t\t\timageAlt: \"Meanwhile in Hyrule\",\r\n\t\t\troute: \"meanwhile-in-hyrule\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"TheUndergroundForest1.png\",\r\n\t\t\timageAlt: \"The Underground Forest\",\r\n\t\t\troute: \"the-underground-forest\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"FrozenShore1.png\",\r\n\t\t\timageAlt: \"The Frozen Shore\",\r\n\t\t\troute: \"the-frozen-shore\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"GreatDekuReef1.png\",\r\n\t\t\timageAlt: \"Great Deku Reef\",\r\n\t\t\troute: \"great-deku-reef\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"GoronCavern1.png\",\r\n\t\t\timageAlt: \"Goron Cavern\",\r\n\t\t\troute: \"goron-cavern\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"BlackSandCavern1.png\",\r\n\t\t\timageAlt: \"Black Sand Cavern\",\r\n\t\t\troute: \"black-sand-cavern\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"FungalBlight1.png\",\r\n\t\t\timageAlt: \"Fungal Blight\",\r\n\t\t\troute: \"fungal-blight\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"SacredTree1.png\",\r\n\t\t\timageAlt: \"Sacred Tree\",\r\n\t\t\troute: \"sacred-tree\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"Wetlands1.png\",\r\n\t\t\timageAlt: \"Wetlands\",\r\n\t\t\troute: \"wetlands\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"WetlandsHouse1.png\",\r\n\t\t\timageAlt: \"Wetlands House\",\r\n\t\t\troute: \"wetlands-house\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"GrottoWoods1.png\",\r\n\t\t\timageAlt: \"Grotto Woods\",\r\n\t\t\troute: \"grotto-woods\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"HotSpringHole1.png\",\r\n\t\t\timageAlt: \"Hot Spring Hole\",\r\n\t\t\troute: \"hot-spring-hole\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"HotSpringValley1.png\",\r\n\t\t\timageAlt: \"Hot Spring Valley\",\r\n\t\t\troute: \"hot-spring-valley\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"HotSpringTourizm1.png\",\r\n\t\t\timageAlt: \"Hot Spring Tourizm\",\r\n\t\t\troute: \"hot-spring-tourizm\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"HotSpringGrotto1.png\",\r\n\t\t\timageAlt: \"Hot Spring Grottos\",\r\n\t\t\troute: \"hot-spring-grotto\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"PurpleBog1.png\",\r\n\t\t\timageAlt: \"Purple Bog\",\r\n\t\t\troute: \"purple-bog\",\r\n\t\t\tcolor: \"#e0cea5\"\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"FungalBlightGrotto1.png\",\r\n\t\t\timageAlt: \"Fungal Blight Grottos\",\r\n\t\t\troute: \"fungal-blight-grottos\",\r\n\t\t\tcolor: \"#e0cea5\",\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"DarkGrotto1.png\",\r\n\t\t\timageAlt: \"Dark Grotto\",\r\n\t\t\troute: \"dark-grotto\",\r\n\t\t\tcolor: \"#e0cea5\",\r\n\t\t\tcomponent: <DarkGrotto />\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"TheBadMaw1.png\",\r\n\t\t\timageAlt: \"The Bad Maw\",\r\n\t\t\troute: \"the-as-maw\",\r\n\t\t\tcolor: \"#e0cea5\",\r\n\t\t},\r\n\t\t{\r\n\t\t\timage: \"CoastTown1.png\",\r\n\t\t\timageAlt: \"Coast Town\",\r\n\t\t\troute: \"coast-town\",\r\n\t\t\tcolor: \"#e0cea5\",\r\n\t\t}\r\n\t];\r\n\r\n\tconst allItems = allItemLinks.map((item) => (\r\n\t\t<div className=\"item-gallery-layer\" key={item.route} \r\n\t\t\tstyle={{ backgroundImage: `url(\"./imgFolio/${item.image}\")` }}>\r\n\t\t\t<article className=\"item-gallery-link\" \r\n\t\t\t\t// onClick={() => history.push(`${item.route}`)}\r\n\t\t\t\tstyle={{ '--hover-color': item.color }}>\r\n\t\t\t\t<h1 className=\"item-gallery-title\" style={{ '--title-color': item.color }}>{item.imageAlt}</h1>\r\n\t\t\t</article>\r\n\t\t</div>\r\n\t));\r\n\r\n\tconst allRoutes = allItemLinks.map((item) => (\r\n\t\t<Route path={item.route} key={item.route}>\r\n\t\t\t{item.component}\r\n\t\t</Route>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"gallery\">\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t{allRoutes}\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\t\t\t\t{allItems}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Gallery;","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport MainCV from '../../CV/components/MainCV';\r\nimport MainDoc from '../../DOC/MainDoc';\r\nimport Gallery from '../../FOLIO/components/Gallery';\r\n\r\nfunction MainHub() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n\r\n          <Route exact path=\"/\">\r\n            <MainCV />\r\n          </Route>\r\n\r\n          <Route path=\"/doc\">\r\n            <MainDoc />\r\n          </Route>\r\n\r\n          <Route path=\"/gallery\">\r\n            <Gallery />\r\n          </Route>\r\n\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MainHub;\r\n","import MainHub from './HUB/components/MainHub';\r\n\r\nfunction App() {\r\n  return (\r\n      <MainHub />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}