(this.webpackJsonpcv=this.webpackJsonpcv||[]).push([[0],{30:function(e,n,t){},31:function(e,n,t){},40:function(e,n,t){},41:function(e,n,t){},42:function(e,n,t){"use strict";t.r(n);var s=t(1),r=t.n(s),a=t(21),c=t.n(a),i=t(6),o=t(3),l=t(0);function d(){return Object(l.jsx)(l.Fragment,{children:Object(l.jsx)("footer",{children:Object(l.jsxs)("div",{children:["Site par Jules Debeaumont | OST ",(new Date).getFullYear()," \xa9 Tous droits r\xe9serv\xe9s"]})})})}function u(){return Object(l.jsx)(l.Fragment,{children:Object(l.jsxs)("section",{id:"contactSection",children:[Object(l.jsx)("div",{className:"titleSection",children:"Contact"}),Object(l.jsxs)("div",{className:"mainContact",children:[Object(l.jsxs)("div",{className:"startContact",children:[Object(l.jsx)("p",{children:"T\xe9l : 06.76.54.94.29"}),Object(l.jsxs)("p",{onClick:function(e){},children:["Email : ",Object(l.jsx)("span",{className:"regularFont",children:"deb.jules@outlook.fr"})]})]}),Object(l.jsxs)("div",{className:"moreContact",children:[Object(l.jsx)("div",{className:"caseContact",children:Object(l.jsx)("div",{className:"caseTitleContact",children:Object(l.jsx)("a",{href:"https://www.linkedin.com/in/jules-debeaumont-a30284220/",children:Object(l.jsx)("img",{src:"images/linkedin.png",alt:"LinkedIn ic\xf4ne",height:"100px",width:"100px"})})})}),Object(l.jsx)("div",{className:"caseContact",children:Object(l.jsx)("div",{className:"caseTitleContact",children:Object(l.jsx)("a",{href:"https://github.com/JulesDebeaumont",children:Object(l.jsx)("img",{src:"images/github.png",alt:"GitHub ic\xf4ne",height:"100px",width:"100px"})})})})]})]}),Object(l.jsx)("div",{className:"blankSpace"}),Object(l.jsx)(d,{})]})})}function m(){return Object(l.jsx)(l.Fragment,{children:Object(l.jsxs)("div",{className:"first",children:[Object(l.jsx)("div",{className:"links",children:Object(l.jsxs)("ul",{children:[Object(l.jsx)("li",{children:Object(l.jsx)("a",{href:"#quiSuisJe",children:"Qui suis-je ?"})}),Object(l.jsx)("li",{children:Object(l.jsx)("a",{href:"#competences",children:"Comp\xe9tences"})}),Object(l.jsx)("li",{children:Object(l.jsx)("a",{href:"#realisation",children:"R\xe9alisations"})}),Object(l.jsx)("li",{children:Object(l.jsx)("a",{href:"#contact",children:"Contact"})})]})}),Object(l.jsxs)("div",{className:"main-title",children:[Object(l.jsx)("h1",{children:"Jules Debeaumont"}),Object(l.jsx)("h2",{children:"D\xe9veloppeur Web"}),Object(l.jsx)("h3",{children:"Full-Stack"}),Object(l.jsx)("div",{className:"download",children:Object(l.jsx)("a",{onClick:function(){return window.open("./CVDebeaumontJules.pdf","_blank")},children:"T\xe9l\xe9charger le CV"})})]})]})})}var j=t(4),p=t.n(j);function b(e){e.setMenu,e.menu;return Object(l.jsx)(l.Fragment,{children:Object(l.jsx)("div",{className:"SeparatorCV"})})}function h(){return Object(l.jsx)(l.Fragment,{children:Object(l.jsxs)("section",{id:"quiSuisJeSection",children:[Object(l.jsx)("div",{className:"titleSection",children:"Qui suis-je ?"}),Object(l.jsxs)("div",{className:"noBg",children:[Object(l.jsx)("p",{className:"introFirst",children:"Bonjour !"}),Object(l.jsxs)("p",{children:["Je m'appelle Jules Debeaumont, j'ai 27 ans, je viens de Reims (51).",Object(l.jsx)("br",{}),"Je suis titulaire d'un DUT Informatique (BAC +2), sp\xe9cialis\xe9 dans le web.",Object(l.jsx)("br",{}),"Initialement issu du monde industriel, je suis aujourd'hui reconverti dans le d\xe9veloppement de site et d'application.",Object(l.jsx)("br",{}),"Passionn\xe9 par la mod\xe9lisation 3D, je cr\xe9e des environnements pour des illustrations et des jeux r\xe9tros sur mon temps libre."]}),Object(l.jsx)("p",{className:"question",children:"Qu'est ce que je recherche ?"}),Object(l.jsxs)("p",{children:["Je suis actuellement \xe0 la recherche d'un poste en tant que",Object(l.jsx)("strong",{className:"important",children:" D\xe9veloppeur Web Full-Stack"}),".",Object(l.jsx)("br",{}),"Cr\xe9er des interfaces int\xe9ractives et intuitives, mettre en place des APIs et des bases de donn\xe9es r\xe9fl\xe9chies sont mes principaux objectifs.",Object(l.jsx)("br",{}),"J'accorde \xe9galement beaucoup d'attention aux d\xe9tails.",Object(l.jsx)("br",{}),Object(l.jsx)("br",{}),Object(l.jsx)("br",{})]})]})]})})}function x(){return Object(l.jsx)(l.Fragment,{children:Object(l.jsxs)("section",{id:"competencesSection",children:[Object(l.jsx)("div",{className:"titleSection",children:"Comp\xe9tences"}),Object(l.jsxs)("span",{className:"allCases",children:[Object(l.jsxs)("div",{className:"row1",children:[Object(l.jsxs)("div",{className:"case",children:[Object(l.jsx)("div",{className:"caseTitle",children:Object(l.jsx)("div",{children:"Front-End"})}),Object(l.jsx)("div",{className:"content",children:Object(l.jsxs)("ul",{children:[Object(l.jsx)("li",{children:"React / React Native"}),Object(l.jsx)("li",{children:"Angular"}),Object(l.jsx)("li",{children:"Site responsives (Bootstrap / Flexbox)"}),Object(l.jsx)("li",{children:"Redux"}),Object(l.jsx)("li",{children:"Material-UI"})]})})]}),Object(l.jsxs)("div",{className:"case",children:[Object(l.jsx)("div",{className:"caseTitle",children:Object(l.jsx)("div",{children:"Back-End"})}),Object(l.jsx)("div",{className:"content",children:Object(l.jsxs)("ul",{children:[Object(l.jsx)("li",{children:"Symfony"}),Object(l.jsx)("li",{children:"PHP Unit"}),Object(l.jsx)("li",{children:"API Platform"}),Object(l.jsx)("li",{children:"NodeJs"}),Object(l.jsx)("li",{children:"Sequelize"})]})})]})]}),Object(l.jsxs)("div",{className:"row2",children:[Object(l.jsxs)("div",{className:"case2",children:[Object(l.jsx)("div",{className:"caseTitle",children:Object(l.jsx)("div",{children:"Languages & Codes"})}),Object(l.jsx)("div",{className:"content",children:Object(l.jsxs)("ul",{children:[Object(l.jsx)("li",{children:"JavaScript"}),Object(l.jsx)("li",{children:"PHP"}),Object(l.jsx)("li",{children:"SQL"}),Object(l.jsx)("li",{children:"HTML & CSS"})]})})]}),Object(l.jsxs)("div",{className:"case2",children:[Object(l.jsx)("div",{className:"caseTitle",children:Object(l.jsx)("div",{children:"Logiciels & Applications"})}),Object(l.jsx)("div",{className:"content",children:Object(l.jsxs)("ul",{children:[Object(l.jsx)("li",{children:"Git"}),Object(l.jsx)("li",{children:"WordPress"}),Object(l.jsx)("li",{children:"Figma"}),Object(l.jsx)("li",{children:"Access"})]})})]})]})]})]})})}var g=t(7);function O(){var e,n=Object(s.useState)(null),t=Object(g.a)(n,2),r=t[0],a=t[1],c=[{title:"GestTested",content:Object(l.jsxs)(l.Fragment,{children:[Object(l.jsxs)("div",{className:"realDescr",children:["Application d\xe9velopp\xe9e pour l'",Object(l.jsx)("a",{href:"http://af-laon.fr/site_new/tcf_info.php",target:"_blank",children:Object(l.jsx)("strong",{className:"important",children:"Alliance Fran\xe7aise de Laon"})}),".",Object(l.jsx)("br",{}),"Il s'agit d'un site de gestion d'inscription \xe0 des concours de langues."]}),Object(l.jsx)("div",{className:"separator"}),Object(l.jsxs)("div",{className:"row3",children:[Object(l.jsxs)("div",{className:"realTechno",children:[Object(l.jsx)("span",{children:"Outils utilis\xe9s :"}),Object(l.jsxs)("ul",{children:[Object(l.jsx)("li",{children:"React"}),Object(l.jsx)("li",{children:"Material-UI"}),Object(l.jsx)("li",{children:"Node.js"}),Object(l.jsx)("li",{children:"Sequelize"})]})]}),Object(l.jsx)("div",{className:"realLinks",children:Object(l.jsx)("span",{children:Object(l.jsx)("a",{children:"Site en construction"})})})]})]})},{title:"Ultimate PDF",content:Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"realDescr",children:"Documentation personnelle cr\xe9\xe9e durant ma reconversion professionnelle."}),Object(l.jsx)("div",{className:"separator"}),Object(l.jsxs)("div",{className:"row3",children:[Object(l.jsxs)("div",{className:"realTechno",children:[Object(l.jsx)("span",{children:"Outils utilis\xe9s :"}),Object(l.jsxs)("ul",{children:[Object(l.jsx)("li",{children:"React"}),Object(l.jsx)("li",{children:"Prism"})]})]}),Object(l.jsx)("div",{className:"realLinks",children:Object(l.jsx)("span",{children:Object(l.jsx)("a",{href:"/doc",children:"Acc\xe9der au site"})})})]})]})},{title:"Be Your Chef",content:Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"realDescr",children:"Application d\xe9velopp\xe9e avec React et Symfony dans le cadre du DUT."}),Object(l.jsx)("div",{className:"separator"}),Object(l.jsxs)("div",{className:"row3",children:[Object(l.jsxs)("div",{className:"realTechno",children:[Object(l.jsx)("span",{children:"Outils utilis\xe9s :"}),Object(l.jsxs)("ul",{children:[Object(l.jsx)("li",{children:"React"}),Object(l.jsx)("li",{children:"Symfony"}),Object(l.jsx)("li",{children:"Doctrine"}),Object(l.jsx)("li",{children:"API Platform"})]})]}),Object(l.jsxs)("div",{className:"realLinks",children:[Object(l.jsx)("span",{children:Object(l.jsx)("a",{href:"https://github.com/JulesDebeaumont/Be-Your-Chief-React#readme",children:"Acc\xe9der au GitHub Front"})}),Object(l.jsx)("span",{children:Object(l.jsx)("a",{href:"https://github.com/JulesDebeaumont/Be-Your-Chief-Symfony#readme",children:"Acc\xe9der au GitHub Back"})})]})]})]})}],i=c.map((function(e,n){return Object(l.jsx)("div",{className:p()({itemReal:!0},{realSelectedItem:r===n}),onClick:function(){return function(e){a(r===e?null:e)}(n)},children:e.title},e.title)})),o=Object(l.jsx)(l.Fragment,{children:Object(l.jsx)(l.Fragment,{children:Object(l.jsx)("div",{className:p()({realItemContent:!0}),children:(null===(e=c[r])||void 0===e?void 0:e.content)||Object(l.jsx)("div",{className:"blankSpace"})})})});return Object(l.jsx)(l.Fragment,{children:Object(l.jsxs)("section",{id:"realisationSection",children:[Object(l.jsx)("div",{className:"titleSection",children:"R\xe9alisations"}),Object(l.jsx)("div",{className:"blankSpace2"}),Object(l.jsx)("div",{className:"row1",children:i}),Object(l.jsx)("div",{className:"row1",children:o}),Object(l.jsx)("div",{className:p()({blankSpace:!0},{hidden:null===r})}),Object(l.jsx)("div",{className:"blankSpace"})]})})}function f(){var e=Object(s.useState)(!0),n=Object(g.a)(e,2),t=n[0],r=n[1],a=Object(s.useState)(!1),c=Object(g.a)(a,2),i=c[0],o=c[1];Object(s.useEffect)((function(){window.addEventListener("scroll",d)}));var d=function(){var e=window.pageYOffset;e>window.innerHeight&&r(!1),e<=window.innerHeight&&r(!0),e>=document.body.clientHeight-window.innerHeight-30&&o(!0),e<document.body.clientHeight-window.innerHeight-30&&o(!1)};return Object(l.jsx)("div",{className:p()({navbar:!0},{hidden:!0===t}),children:Object(l.jsxs)("div",{className:p()({linksNavbar:!1===i},{linksNavbar2:!0===i}),children:[Object(l.jsx)("div",{className:"titleNavbar",children:"Jules Debeaumont | OST"}),Object(l.jsxs)("ul",{children:[Object(l.jsx)("li",{children:Object(l.jsx)("a",{href:"#acceuil",children:"Accueil"})}),Object(l.jsx)("li",{children:Object(l.jsx)("a",{href:"#quiSuisJe",children:"Qui suis-je ?"})}),Object(l.jsx)("li",{children:Object(l.jsx)("a",{href:"#competences",children:"Comp\xe9tences"})}),Object(l.jsx)("li",{children:Object(l.jsx)("a",{href:"#realisation",children:"R\xe9alisations"})}),Object(l.jsx)("li",{children:Object(l.jsx)("a",{href:"#contact",children:"Contact"})})]})]})})}function v(){var e=Object(s.useState)(!1),n=Object(g.a)(e,2),t=n[0],r=n[1];var a=[{link:"#acceuil",label:"Accueil"},{link:"#quiSuisJe",label:"Qui suis-je ?"},{link:"#competences",label:"Comp\xe9tences"},{link:"#realisation",label:"R\xe9alisations"},{link:"#contact",label:"Contact"}].map((function(e){return Object(l.jsx)("li",{children:Object(l.jsx)("a",{href:e.link,children:e.label})},e.label)}));return Object(l.jsxs)("div",{className:p()({navbarPhone:!0},{navbarPhoneOpen:!0===t}),onClick:function(){r(!0!==t)},children:[Object(l.jsx)("img",{src:"images/menu.png",alt:"Menu ic\xf4ne",height:"40px",width:"40px"}),Object(l.jsx)("ul",{className:p()({listMenuPhone:!0},{listMenuPhoneBis:!0===t},{hidden:!1===t}),children:a})]})}t(30);var y=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)(f,{}),Object(l.jsx)(v,{}),Object(l.jsx)("div",{className:"first",id:"acceuil",children:Object(l.jsx)(m,{})}),Object(l.jsxs)("div",{className:"parts",children:[Object(l.jsxs)("div",{className:"firstFont",children:[Object(l.jsx)("div",{className:"SeparatorCV2"}),Object(l.jsx)("div",{id:"quiSuisJe",children:Object(l.jsx)(h,{})}),Object(l.jsx)("div",{className:"SeparatorCV2"}),Object(l.jsx)("div",{id:"competences",children:Object(l.jsx)(x,{})}),Object(l.jsx)("div",{className:"SeparatorCV2"}),Object(l.jsx)("div",{id:"realisation",children:Object(l.jsx)(O,{})})]}),Object(l.jsx)(b,{}),Object(l.jsx)("div",{id:"contact",children:Object(l.jsx)(u,{})})]})]})},N=(t(31),t(32),t(12)),C=t(13);var E=function(e){var n=e.name,t=e.toggle,s=e.menu,r=e.subMenus,a=Object(l.jsx)(N.a,{icon:C.a}),c=Object(l.jsx)(N.a,{icon:C.b});return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsxs)("div",{onClick:function(){return t()},className:p()({Section:!s},{selectedSection:s}),children:[Object(l.jsx)("span",{children:n}),!0===s?c:a]}),Object(l.jsx)("ul",{className:p()({AllSubMenus:s},{hidden:!s}),children:r})]})};var S=function(e){var n=e.name,t=e.route,s=e.onClick,r=e.activated,a=Object(o.f)();return Object(l.jsx)("li",{onClick:function(){s(),a.push("".concat(t))},className:p()({subMenu:!0},{liDoc:!0},{selectedSub:r}),children:n})};var $=function(){var e=Object(s.useState)([]),n=Object(g.a)(e,2),t=n[0],r=n[1],a=Object(s.useState)([]),c=Object(g.a)(a,2),i=c[0],o=c[1];function d(){r([]),o([])}var u=[{name:"Symfony",subMenus:[{name:"Installation",route:"/doc/symfony/installation"},{name:"Controller",route:"/doc/symfony/Controller"},{name:"Twig",route:"/doc/symfony/Twig"},{name:"Doctrine",route:"/doc/symfony/Doctrine"},{name:"User",route:"/doc/symfony/User"},{name:"Migration",route:"/doc/symfony/Migration"},{name:"Fixtures",route:"/doc/symfony/Fixtures"},{name:"Formulaire",route:"/doc/symfony/Formulaire"},{name:"API",route:"/doc/symfony/Api"},{name:"PHP Unit",route:"/doc/symfony/Tests"},{name:"Voters",route:"/doc/symfony/Voters"},{name:"Event",route:"/doc/symfony/Event"},{name:"Console",route:"/doc/symfony/Console"},{name:"Conseils",route:"/doc/symfony/Conseils"},{name:"Bundles",route:"/doc/symfony/Bundle"}]},{name:"React",subMenus:[{name:"Installation",route:"/doc/React/InstallationR"},{name:"Props",route:"/doc/React/Props"},{name:"Hooks",route:"/doc/React/Hooks"},{name:"Effet de bord",route:"/doc/React/EffetBord"},{name:"Router",route:"/doc/React/RouterR"},{name:"Fetch",route:"/doc/React/Fetch"},{name:"Redux",route:"/doc/React/ReduxR"},{name:"Thunk",route:"/doc/React/Thunk"},{name:"Divers",route:"/doc/React/Divers"},{name:"Bundle",route:"/doc/React/Bundle"}]},{name:"Sequelize",subMenus:[{name:"Mod\xe8le BD",route:"/doc/Sequelize/Modeles"},{name:"Routes",route:"/doc/Sequelize/Routes"},{name:"Mocks",route:"/doc/Sequelize/Mocks"},{name:"Extensions Node.js",route:"/doc/Sequelize/Extensions"}]},{name:"Autres",subMenus:[{name:"Fonctions JavaScript",route:"/doc/Autres/FuncJS"},{name:"Fonctions PHP",route:"/doc/Autres/FuncPHP"},{name:"Bonus",route:"/doc/Autres/Bonus"}]}].map((function(e,n){return Object(l.jsx)("li",{className:"liDoc",children:Object(l.jsx)(E,{name:e.name,toggle:function(){return function(e){if(t[e])d();else{var n=t.map((function(e){return!1}));n[e]=!0,o([]),r(n)}}(n)},menu:t[n],subMenus:e.subMenus.map((function(e,n){return Object(l.jsx)(S,{name:e.name,route:e.route,onClick:function(){return function(e){var n=i.map((function(e){return!1}));n[e]=!0,o(n)}(n)},activated:i[n]},e.name)}))})},n)}));return{menu:t,cancelAllMenus:d,allSection:u}};var k=function(){var e=$(),n=e.menu,t=e.cancelAllMenus,s=e.allSection,r=Object(o.f)();return Object(l.jsx)("div",{className:"Menu",children:Object(l.jsxs)("div",{className:"scroll hide-scrollbar",children:[Object(l.jsx)("div",{className:p()({TitleMenu:!0},{selectedSection:0===n.length}),children:Object(l.jsx)("span",{className:"TitreMenu",onClick:function(){t(),r.push("/doc")},children:"Ultimate PDF"})}),Object(l.jsx)("ul",{children:s})]})})};var D=function(e){var n=e.url,t=e.nom;return Object(l.jsx)("a",{className:"Docu",href:n,target:"_blank",rel:"noreferrer",children:t})};var w=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Installation Symfony"}),Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://symfony.com/doc/current/setup.html",nom:"Documentation Installation"})}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er projet symfony : ",Object(l.jsx)("div",{className:"Quote",children:" composer create-project symfony/skeleton leNom "})]}),Object(l.jsxs)("div",{children:["\u2022 Installer composer pour le projet symfony : ",Object(l.jsx)("div",{className:"Quote",children:"composer install"})]}),Object(l.jsxs)("div",{children:["\u2022 Mettre \xe0 jour composer : ",Object(l.jsx)("div",{className:"Quote",children:"composer update"})]}),Object(l.jsxs)("div",{children:["\u2022 Lancer serveur symfony :  ",Object(l.jsx)("div",{className:"Quote",children:"symfony serve"})]}),Object(l.jsxs)("div",{children:["\u2022 Lancer serveur symfony BIS : ",Object(l.jsx)("div",{className:"Quote",children:"php -S 127.0.0.1:8000 -t public"})," "]})]})},T=t(23),R=t.n(T);function A(e){var n=e.code,t=e.language;return Object(s.useEffect)((function(){R.a.highlightAll()}),[]),Object(l.jsx)("div",{className:"Code",children:Object(l.jsx)("pre",{children:Object(l.jsx)("code",{className:"language-".concat(t),children:n})})})}var I=t(24),P=t.n(I);var F=function(e){var n=Object(l.jsx)(N.a,{icon:C.a}),t=Object(l.jsx)(N.a,{icon:C.b}),r=e.text,a=e.code,c=e.language,i=Object(s.useState)(!0),o=Object(g.a)(i,2),d=o[0],u=o[1];function m(){u(!0!==d)}var j=P()(r);return Object(l.jsx)("div",{id:j,className:"container",children:!0===d?Object(l.jsxs)("div",{onClick:function(){m(),window.location="#".concat(j)},children:["\u2022 ",r," :",Object(l.jsx)("span",{className:"arrow",children:n})]}):Object(l.jsxs)(l.Fragment,{children:[Object(l.jsxs)("div",{onClick:function(){return m()},children:["\u2022 ",r,Object(l.jsx)("span",{className:"arrow",children:t})]}),Object(l.jsx)(A,{code:a,language:c})]})})},q='\n{%  extends "base.html.twig" %}\n{% block body %}\n\n<h1>Liste des citations\n    <span> ({{ pagination.getTotalItemCount }})</span>\n</h1>\n\n<ul>\n\n{% for quote in pagination.items %}\n<li>\n    <span class="content">{{ quote.content }}</span>\n\n    <span class="meta">\n        --{{ quote.meta }}\n\n        {% if is_granted(\'IS_AUTHENTICATED_FULLY\') %}\n        <a href="{{ path(\'quote_modifier\', {\'id\' : quote.id}) }}">Modifier</a>\n        |\n        <a href="{{ path(\'quote_supprimer\', {\'id\' : quote.id}) }}">Supprimer</a>\n\n        {% endif %}\n        |\n        <a class="badge badge-primary" \n        href="{{ path(\'category_show\', {\'id\' : quote.category.id}) }}">\n        {{quote.category.name}}</a>\n\n    </span>\n\n</li>\n{%  endfor  %}\n\n</ul>\n\n<div class="navigation">\n    {{ knp_pagination_render(pagination) }}\n</div>\n\n\n{% endblock %}\n\n\n'.trim(),_="\n/**\n * @Route(\"/quotes\", name=\"quote_index\")\n */\npublic function index(PaginatorInterface $paginator, Request $request): Response\n{\n    // getRepository ici sert \xe0 acc\xe9der \xe0 l'ensemble des instances\n    // de la classe qu'elle re\xe7oit en param\xe8tre.\n    $repositoryQuote = $this->getDoctrine()->getRepository(Quote::class);\n\n    // Ici on stock la requ\xeate d'un utilisateur sur ce controller\n    // s'il en existe une avec le param\xe8tre Request $request.\n    $research = $request->query->get('research');\n    $research = \"%{$research}%\";\n\n    // Les queryBuilders permettent directement d'int\xe9rroger une BD\n    // sans passer par un language sp\xe9cifique (SQL / Oracle ...).\n    $query = $repositoryQuote->createQueryBuilder('q')\n          ->where('q.content LIKE :research')\n          ->setParameter('research', $research)\n          ->orderBy('q.meta', 'ASC')\n          ->getQuery();\n\n    // On utilise getResult pour stocker les r\xe9sultats de la requ\xeate\n    // dans une variable.\n    $quotes = $query->getResult();\n    \n    // On donnera la variable $quotes \xe0 la vue indiquer\n    // que l'on pourra appeler quotes dans le template twig.\n    return $this->render('quote/index.html.twig', ['quotes' => $quotes]);\n}\n\n\n".trim(),M="\n/**\n * @Route(\"/quotes/{id}/modifier\", name=\"quote_modifier\")\n */\npublic function modifier(Quote $quote, Request $request) : Response\n{\n    // Action autoris\xe9 seulement si l'utilisateur est connecter.\n    $this->denyAccessUnlessGranted('IS_AUTHENTICATED_FULLY'); \n\n    // La m\xeame chose peut-\xeatre utiliser pour les admins\n    // $this->denyAccessUnlessGranted('ROLE_ADMIN');\n\n    // Le getManager permet d'interagir avec les entit\xe9es\n    // Ici on veut modifier une Quote de la BD.\n    $quoteManager = $this->getDoctrine()->getManager();\n    $form = $this->createForm(QuoteModifyFormType::class, $quote);\n\n    $form->handleRequest($request);\n\n    if ($form->isSubmitted() && $form->isValid()) {\n        $quote = $form->getData();\n        $quoteManager->flush();\n\n        // Redirection vers la route quote_index, avec r\xe9ponse 301\n        return $this->redirectToRoute('quote_index', [], 301);\n    }\n\n    return $this->render('quote/modifier.html.twig', ['quote' => $quote, 'form' => $form->createView()]);\n}\n\n".trim(),U="\nclass QuoteFixtures extends Fixture\n{\n    public function load(ObjectManager $manager)\n    {\n        QuoteFactory::createMany(20);\n    }\n}\n".trim(),B=('\nfinal class UserFactory extends ModelFactory\n{\n    protected function getDefaults(): array\n    {\n        return [\n            "name" => self::faker()->name,\n            "password" => self::faker()->password,\n            "email" => self::faker()->email,\n            "roles" => ["ROLE_USER"], //par d\xe9fault ??\n        ];\n    }\n}\n\n'.trim(),"\nclass IngredientFixtures extends Fixture\n{\n    public function load(ObjectManager $manager)\n    {\n\n        $ingredients = json_decode(file_get_contents(implode(\n            DIRECTORY_SEPARATOR,\n            [__DIR__, \n            'data', \n            'Ingredient.json'])), true);\n\n        foreach ($ingredients as $ingredient)\n        {\n            $ingredient['allergens'] = AllergenFactory::randomRange(1,3);\n            $ingredient['sort'] = IngredientSortFactory::random();\n            IngredientFactory::new()->create($ingredient);\n        }\n    }\n".trim()),Q="\nuse DoctrineCommonDataFixturesDependentFixtureInterface;\n\nclass IngredientFixtures extends Fixture implements DependentFixtureInterface\n{\n    public function getDependencies(): array\n    {\n        return[\n            IngredientSortFixtures::class,\n        ];\n    }\n}\n\n".trim(),L='\nuse SymfonyComponentSecurityCoreEncoderUserPasswordEncoderInterface;\n\nfinal class UserFactory extends ModelFactory\n{\n    private $passwordEncoder;\n\n    public function __construct(UserPasswordEncoderInterface $passwordEncoder)\n    {\n        parent::__construct();\n        $this->passwordEncoder = $passwordEncoder;\n    }\n\n    protected function getDefaults(): array\n    {\n        return [\n            "name" => self::faker()->name,\n            "password" => self::faker()->password,\n            "email" => self::faker()->email,\n            "roles" => ["ROLE_USER"], //par d\xe9fault ??\n        ];\n    }\n\n    protected function initialize(): self\n    {\n        // see https://github.com/zenstruck/foundry#initialization\n        return $this->afterInstantiate(function (User $user) {\n            $user->setPassword($this->passwordEncoder->encodePassword($user, $user->getPassword()));\n        });\n    }\n\n    protected static function getClass(): string\n    {\n        return User::class;\n    }\n}\n\n'.trim(),z="\nprotected function getDefaults(): array\n{\n    return\n        [\n            'content' => self::faker()->text(100),\n            'meta' => self::faker()->name(),\n            'category' => CategoryFactory::random(),\n        ];\n}\n".trim(),H="\nuse SymfonyComponentSecurityCoreEncoderUserPasswordEncoderInterface;\n\nclass UserFixtures extends Fixture\n{\n    private $encoder;\n\n    public function __construct(UserPasswordEncoderInterface $encoder)\n    {\n        $this->encoder = $encoder;\n    }\n\n    public function load(ObjectManager $manager)\n    {\n        $user1= new User();\n        $password1 = $this->encoder->encodePassword($user1, 'iutinfo');\n        $user1->setPassword($password1);\n        $user1->setName('Jules');\n        $user1->setEmail('admin@outlook.fr');\n        $user1->setRoles(['ROLE_ADMIN', 'ROLE_USER']);\n\n        $manager->persist($user1);\n        $manager->flush();\n\n        UserFactory::createMany(4); //pour random values\n    }\n}\n\n".trim(),V="\n\nuse SymfonyComponentHttpFoundationFileUploadedFile;\n\nclass RecipeFixtures extends Fixture \n{\n\n    public function load(ObjectManager $manager)\n    {\n        $recipies = json_decode(file_get_contents(\n            __DIR__ .\n            DIRECTORY_SEPARATOR .\n            'data' .\n            DIRECTORY_SEPARATOR . \n            'Recipe.json'\n            ), true);\n\n        foreach ($recipies as $recipe) {\n\n            $recipe['steps'] = StepFactory::randomRange(1,14);\n            $recipe['account'] = PersonFactory::random();\n            $recipe['accountsFavorite'] = PersonFactory::randomRange(0,2);\n            $recipe['type'] = RecipeTypeFactory::random();\n            $recipe['regimen'] = RecipeRegimenFactory::random();\n            $recipe['origin'] = RecipeOriginFactory::random();\n            $recipe['menuType'] = MenuTypeFactory::randomRange(0,2);\n\n            $recipeEntity =  RecipeFactory::new()->create($recipe);\n\n            if (isset($recipe['imageName']))\n                 $this->setImage(\n                     $recipeEntity->object(),\n                     (\n                         __DIR__ .\n                        DIRECTORY_SEPARATOR . \n                        'data' .\n                        DIRECTORY_SEPARATOR .\n                        'img' .\n                        DIRECTORY_SEPARATOR . \n                        $recipe['imageName']\n                     ),\n                     $recipe['imageName']);\n        }\n    }\n\n    public function setImage(Recipe $recipe, string $path, string $filename)\n    {\n        $tmpPath = tempnam(sys_get_temp_dir(), 'recipe_image');\n        copy($path, $tmpPath);\n\n        $recipe->setImageFile(new UploadedFile(\n            $tmpPath,\n            $filename,\n            'image/jpeg',\n            null,\n            true\n        ));\n    }\n}\n\n".trim(),G="\npublic function buildForm(FormBuilderInterface $builder, array $options)\n{\n    $builder\n        ->add('content', TextType::class, [\n            'label' => 'La quote :',\n            ])\n\n        ->add('meta', TextType::class, [\n            'label' => 'La source :',\n            ])\n\n        ->add('category', EntityType::class, [\n            'label' => 'La cat\xe9gorie :',\n            'class' => Category::class,\n            'choice_label' => 'name',\n        ])\n\n        ->add('save', SubmitType::class, [\n            'label' => 'Enregistrer !'\n        ]);\n}\n".trim(),J='\nuse SymfonyComponentSerializerAnnotationGroups;\nuse ApiPlatformCoreAnnotationApiResource;\n\n/**\n * @ApiFilter(SearchFilter::class, properties=\n *     {\n *     "name" : "partial"\n *     })\n * @ApiResource(\n *     attributes={"order"={"name": "ASC"}},\n *     collectionOperations={\n *          "get"={\n *              "normalization_context"={"groups"={"recipe:list"}}\n *          },\n *          "post"={\n *              "normalization_context"={"groups"={"recipe:create"}},\n *              "denormalization_context"={"groups"={"recipe:create"}},\n *              "security"="is_granted(\'ROLE_USER\') and object == user"\n *          }\n *     },\n *     itemOperations={\n *          "get"={\n *              "normalization_context"={"groups"={"recipe:read"}}\n *          },\n *          "patch"={\n *              "normalization_context"={"groups"={"recipe:edit"}},\n *              "denormalization_context"={"groups"={"recipe:edit"}},\n *              "security"="is_granted(\'ROLE_USER\') and object == user"\n *          },\n *          "delete"={\n *              "normalization_context"={"groups"={"recipe:delete"}},\n *              "denormalization_context"={"groups"={"recipe:delete"}},\n *              "security"="is_granted(\'ROLE_USER\') and object == user"\n *          },\n *     }\n * )\n */\nclass Recipe\n{\n    ...\n\n    /**\n     * @ORMColumn(type="string", length=50)\n     * @Groups({"recipe:list", "recipe:read", "recipe:create", "recipe:edit", "recipe:delete"})\n     *\n     */\n    private $name;\n\n    ...\n}\n'.trim(),W="\n    /**\n     * @dataProvider additionProvider\n     */\n    public function testFunctionAdd(float $expected, float $firstOperand, float $secondOperand): void\n    {\n        $this->assertSame($expected, FloatCalculator::add($firstOperand, $secondOperand));\n    }\n\n    public function additionProvider(): array\n    {\n        return\n        [\n            [0., 0., 0.],\n            [-5., -5., 0.],\n            [-15., -8., -7.],\n            [16., 16., 0.],\n            [0.1, -0.7, 0.8],\n        ];\n    }\n".trim(),Y="\n    public function testPlayOneMove(): void\n    {\n        $mockHuman = $this->createPartialMock(Human::class, ['getInput']);\n        $mockHuman->method('getInput')->willReturn('B');\n\n        $mockIRules = $this->createMock(IRules::class);\n        $mockIRules->method('getGestures')->willReturn(\n            [\n                'C',\n                'B',\n                'A',\n        ]);\n\n        $this->expectOutputString(\"Choose a move :C, B, A\");\n\n        $mockHuman->playOneMove($mockIRules);\n    }\n".trim(),K="\nclass DashboardController extends AbstractDashboardController\n{\n    /**\n     * @Route(\"/admin\", name=\"admin\")\n     */\n    public function index(): Response\n    {\n        return $this->render('admin/fields/dashboard.html.twig');\n    }\n\n    public function configureDashboard(): Dashboard\n    {\n        return Dashboard::new()\n            ->setTitle('Be Your Chief');\n    }\n\n    public function configureMenuItems(): iterable\n    {\n        //yield MenuItem::section ici permet de cr\xe9er une nouvelle section dans le dashboard\n        //yield MenuItem::linkToCrud permet de cr\xe9er un lien vers un crud controller d'une entit\xe9\n        //EasyAdmin 3 utilise ici les ic\xf4nes de FontAwesome pour customizer les liens\n\n        yield MenuItem::section('Les recettes');\n        yield MenuItem::linkToCrud('Recettes', 'fas fa-cookie', Recipe::class);\n        yield MenuItem::linkToCrud('Type de recette', 'fas fa-blender', RecipeType::class);\n}\n\n".trim(),Z="\nclass IngredientCrudController extends AbstractCrudController\n{\n    public static function getEntityFqcn(): string\n    {\n        return Ingredient::class;\n    }\n\n    public function configureFields(string $pageName): iterable\n    {\n        return [\n            TextField::new('name'),\n\n// On peut cacher les champs lors de l'\xe9dition avec ->hideOnForm()\n            IntegerField::new('nbKal')->hideOnForm();\n\n// Attention, vous aurez peut-\xeatre besoin de d\xe9clarer la m\xe9thode magique __toString \n// dans les entit\xe9s qui ont besoin d\u2019\xeatre affich\xe9s dans les formulaires (ici Sort).\n            AssociationField::new('sort')\n                ->formatValue(function ($value, $entity)\n                {\n                    return $entity->getSort();\n                }),\n\n// La diff\xe9rence avec le Field pr\xe9c\xe9dent est que celui-ci \n// affiche directement un template twig.   \n            AssociationField::new('allergens')\n                ->setTemplatePath('admin/fields/allergen.html.twig'),\n        ];\n    }\n}\n".trim(),X="\nvich_uploader:\n    db_driver: orm\n\n    mappings:\n        recipes_images:\n             uri_prefix: /images/recipes\n             upload_destination: '%kernel.project_dir%/public/images/recipes'\n             namer: VichUploaderBundleNamingSmartUniqueNamer\n\n// Les images uploader iront donc dans le dossier public/images/recipes ici.\n".trim(),ee='\nuse VichUploaderBundleMappingAnnotation as Vich;\n\n/**\n * @VichUploadable()\n */\nclass Category\n{\n    /**\n     * @ORMColumn(type="string", nullable=true)\n     */\n    private $imageName;\n\n    /**\n     * @VichUploadableField(mapping="recipes_images", fileNameProperty="imageName")\n     */\n    private $imageFile;\n\n    /**\n     * @ORMColumn(type="datetime", nullable=true)\n     */\n    private $updatedAt;\n\n    ...\n}\n\n'.trim(),ne="\npublic function getImageName(): ?string\n    {\n        return $this->imageName;\n    }\n\n    public function setImageName(?string $imageName): self\n    {\n        $this->imageName = $imageName;\n\n        return $this;\n    }\n\n    public function setImageFile(?File $imageFile = null): self\n    {\n        $this->imageFile = $imageFile;\n\n        if (null !== $imageFile) {\n            // It is required that at least one field changes if you are using doctrine\n            // otherwise the event listeners won't be called and the file is lost\n            $this->updatedAt = new DateTime();\n        }\n\n        return $this;\n    }\n\n    public function getImageFile(): ?File\n    {\n        return $this->imageFile;\n    }\n\n    public function getUpdatedAt(): ?DateTimeInterface\n    {\n        return $this->updatedAt;\n    }\n\n    public function setUpdatedAt(DateTimeInterface $updatedAt): self\n    {\n        $this->updatedAt = $updatedAt;\n\n        return $this;\n    }\n".trim(),te="\nuse VichUploaderBundleFormTypeVichImageType;\n\nclass RecipeCrudController extends AbstractCrudController\n{\n    public static function getEntityFqcn(): string\n    {\n        return Recipe::class;\n    }\n\n    public function configureFields(string $pageName): iterable\n    {\n        return [\n\n            ImageField::new('imageName', 'Image')\n                ->setBasePath('/images/recipes')\n                ->setUploadDir('public/images/recipes')\n                ->hideOnForm(),\n\n            Field::new('imageFile')\n                ->setFormType(VichImageType::class)\n                ->setTranslationParameters(['form.label.delete'=>'Supprimer'])\n                ->onlyOnForms(),\n\n            ...\n\n        ];\n    }\n}\n".trim(),se="\n\nnamespace AppSerializationDenormalizer;\n\nuse AppEntityUser;\nuse SymfonyComponentSecurityCoreEncoderUserPasswordEncoderInterface;\nuse SymfonyComponentSecurityCoreSecurity;\nuse SymfonyComponentSerializerNormalizerContextAwareDenormalizerInterface;\nuse SymfonyComponentSerializerNormalizerDenormalizerAwareInterface;\nuse SymfonyComponentSerializerNormalizerDenormalizerAwareTrait;\n\nclass UserDenormalizer implements ContextAwareDenormalizerInterface, DenormalizerAwareInterface\n{\n    use DenormalizerAwareTrait;\n\n    private const ALREADY_CALLED = 'USER_DENORMALIZER_ALREADY_CALLED';\n    private $passwordEncoder;\n    private $security;\n\n    public function __construct(Security $security, UserPasswordEncoderInterface $passwordEncoder)\n    {\n        $this->passwordEncoder = $passwordEncoder;\n        $this->security = $security;\n    }\n\n    public function supportsDenormalization($data, $type, $format = null, array $context = []): bool\n    {\n        if (isset($context[self::ALREADY_CALLED])) {\n            return false;\n        }\n\n        return $type === User::class;\n    }\n\n    public function denormalize($data, $type, $format = null, array $context = [])\n    {\n        $context[self::ALREADY_CALLED] = true;\n\n        if (isset($data['password'])) {\n            $user = $this->security->getUser();\n            $data['password'] = $this->passwordEncoder->encodePassword($user, $data['password']);\n        }\n\n        return $this->denormalizer->denormalize($data, $type, $format, $context);\n    }\n}\n\n".trim(),re="\n\npublic function getRepository(): CategoryRepository\n{\n    return self::$container->get('doctrine')->getRepository(maClasse::class);\n}\n\npublic function getCategory(string $name): Category\n{\n    return $this->getRepository()->findOneBy(['name' => $name]);\n}\n\npublic function getManager(): EntityManagerInterface\n{\n    return self::$container->get('doctrine')->getManagerForClass(maClasse::class);\n}\n\n...\n\npublic function testCategoryCreate()\n{\n    $client = static::createClient([], [\n        'PHP_AUTH_USER' => 'admin@outlook.fr',\n        'PHP_AUTH_PW' => '******',\n    ]);\n\n    $client->request('GET', '/category/new');\n\n    $client->submitForm('Enregistrer', [\n        'category[name]' => 'Comics',\n    ]);\n    $client->followRedirect();\n\n    $comics = $this->getCategory('Comics');\n    $this->assertSame('Comics', $comics->getName());\n\n    $this->assertSelectorTextContains('.content', 'Comics');\n}\n".trim(),ae="\npublic function makeComicsCategory()\n{\n    $manager = self::$container->get('doctrine')->getManagerForClass(Category::class);\n\n    $category = new Category();\n    $category->setName('Comics');\n\n    $manager->persist($category);\n    $manager->flush();\n}\n\n...\n\npublic function testCategoryModify()\n{\n    $client = static::createClient([], [\n        'PHP_AUTH_USER' => 'admin@outlook.fr',\n        'PHP_AUTH_PW' => '******',\n    ]);\n\n    $this->makeComicsCategory();\n\n    $client->request('GET', '/category/');\n    $client->clickLink('Modifier');\n\n    $comics = $this->getCategory('Comics');\n    $idComics = $comics->getId();\n\n    $client->submitForm('Enregistrer', [\n        'category[name]' => 'Rick & Morty',\n    ]);\n    $client->followRedirect();\n\n    $rick = $this->getRepository()->findOneBy(['id' => $idComics]);\n    $this->assertSame('Rick & Morty', $rick->getName());\n\n    $client->request('GET', '/category/');\n    $this->assertSelectorTextContains('.content', 'Rick & Morty');\n}\n".trim(),ce="\n\n// Permet d'afficher le contenu de la page actuelle du $client\necho $client->getResponse()->getContent();\n\n// Permet d'\xe9crire un fichier my_response.html avec le contenu \n// de la page actuelle du $client \xe0 la racine du projet\nfile_put_contents('my_responde.html', $client->getResponse()->getContent());\n\n".trim(),ie='\n// Supprime la BD s\'il en \xe9xiste une, en cr\xe9er une nouvelles avec Doctrine,\n// applique les migrations et charge toutes les fixtures.\n\n"reset" : [\n    // Delete les images dupliqu\xe9es par Vich si besoin\n    // Ne fonctionne pas sur Windows (?)\n    // "php -r "foreach(glob(\'public/images/*/*\') as \\$file) unlink(\\$file);"",\n\n    "php bin/console doctrine:database:drop --force --if-exists",\n    "php bin/console doctrine:database:create",\n    "php bin/console doctrine:migration:migrate --no-interaction",\n    "php bin/console doctrine:fixtures:load --no-interaction"\n]\n'.trim(),oe='\n// Script d\xe9stiner aux tests\n// Supprime la BD, en cr\xe9er une nouvelles avec Doctrine,\n// applique les migrations et charge toutes les fixtures.\n// Toute les commandes sont executer en environnement de test\n\n"test" : [\n    "php bin/console doctrine:database:drop --force --if-exssts --env=test",\n    "php bin/console doctrine:schema:create --env=test",\n    "php bin/console doctrine:fixtures:load --no-interaction --group=UserFixtures --env=test",\n    "php bin/phpunit tests"\n]\n'.trim(),le='\n// Lance cs-fixer dans tout le projet\n\n"cs-fixer" : [\n    "vendor/bin/php-cs-fixer fix"\n]\n'.trim(),de="\n// Cette solution n'utilise pas Foundry\n\nclass CategoryFixtures extends Fixture\n{\n    public const FRUIT = 'category-fruit';\n\n    public function load(ObjectManager $manager)\n    {\n        $fruit = new Category();\n        $fruit->setName('fruit');\n        $manager->persist($fruit);\n\n        //On ajoute la category en tant que r\xe9f\xe9rence\n        $this->addReference(self::FRUIT, $fruit);\n\n        $manager->flush();\n    }\n}\n\n...\n\nclass AlimentFixtures extends Fixture implements DependentFixtureInterface\n{\n    public function load(ObjectManager $manager)\n    {\n        $banane = new Quote();\n        $banane->setName('banane');\n\n        // On utilise la r\xe9f\xe9rence pour affecter une cat\xe9gorie \xe0 l'aliment\n        $banane->setCategory($this->getReference(CategoryFixtures::FRUIT));\n        $manager->persist($banane);\n\n        $manager->flush();\n    }\n\n    // Ne pas oublier d'impl\xe9menter l'interface DependentFixtureInterface !\n    public function getDependencies(): array\n    {\n        return [\n            CategoryFixtures::class,\n        ];\n    }\n}\n".trim(),ue='\n// Le fichier de config doit \xeatre\n// \xe0 la racine de votre projet !\n\ngrumphp:\n  tasks:\n    composer:\n      no_check_all: true\n      no_check_publish: true\n    git_blacklist:\n      keywords:\n        - "die("\n        - "var_dump("\n        - "exit;"\n        - "dump("\n      whitelist_patterns: [ ]\n      triggered_by: [ \'php\' ]\n      regexp_type: G\n      match_word: false\n    phpcsfixer:\n      allow_risky: ~\n      cache_file: ~\n      config: .php_cs.dist\n      rules: [ ]\n      using_cache: ~\n      config_contains_finder: true\n      verbose: true\n      diff: false\n      triggered_by: [ \'php\' ]\n    phpunit: ~\n\n  testsuites: []\n  extensions: []\n'.trim(),me="\n// Inclus bootstrap\n\nknp_paginator:\n  template:\n    pagination: '@KnpPaginator/Pagination/twitter_bootstrap_v4_pagination.html.twig'\n".trim(),je="\nuse KnpComponentPagerPaginatorInterface;\n\n...\n\npublic function index(PaginatorInterface $paginator, Request $request): Response\n    {\n        $repositoryQuote = $this->getDoctrine()->getRepository(Quote::class);\n\n        $research = $request->query->get('research');\n        $research = \"%{$research}%\";\n\n        $query = $repositoryQuote->createQueryBuilder('q')\n              ->where('q.content LIKE :research')\n              ->setParameter('research', $research)\n              ->orderBy('q.meta', 'ASC')\n              ->getQuery();\n\n// On met la r\xe9ponse du QueryBuilder dans le pagintor\n        $pagination = $paginator->paginate(\n            $query,\n            $request->query->getInt('page', 1),\n            5\n        );\n\n// On transmettra donc uniquement le paginator \xe0 la vue twig\n        return $this->render('quote/index.html.twig', ['pagination' => $pagination]);\n    }\n".trim(),pe="\n<span> ({{ pagination.getTotalItemCount }})</span>\n\n    {% for quote in pagination.items %}   \n    ...\n    {%  endfor  %}\n".trim(),be="\n// config/packages/stof_doctrine/extensions.yaml\n// enable le bundle sluggable et blameable\n\nstof_doctrine_extensions:\n    default_locale: en_US\n    orm:\n        default:\n            /\n            sluggable: true\n            blameable: true\n".trim(),he='\n// Dans l\'entity\n\nuse GedmoMappingAnnotation as Gedmo;\n\nclass Category\n{\n    ...\n\n    /**\n     * @GedmoSlug(fields={"name"})\n     * @ORMColumn(length=128, unique=true)\n     */\n    private $slug;\n\n    ...\n\n    public function getSlug()\n    {\n        return $this->slug;\n    }\n}\n\n\n// Dans un controller avec le param converter\n\n    /**\n     * @Route("/{slug}/edit", name="category_edit", methods={"GET","POST"})\n     */\n    public function edit(Request $request, Category $category): Response\n    {\n        ...\n    }\n\n'.trim(),xe='\n\nuse GedmoMappingAnnotation as Gedmo;\n\nclass Quote\n{\n   ...\n\n    /**\n     * @ORMManyToOne(targetEntity=User::class, inversedBy="quotes")\n     * @GedmoBlameable(on="create")\n     * @ORMJoinColumn(nullable=false)\n     */\n    private $author;\n\n    ...\n\n}\n'.trim(),ge='\n// config/packages/liip_imagine.yaml\n\nliip_imagine:\n    driver: "gd"\n    filter_sets :\n        cache : ~\n\n        # the name of the "filter set"\n        medium :\n            quality : 75\n            filters :\n                thumbnail  : { size : [350, 350], mode : outbound }\n\n        small:\n            quality: 100\n            filters:\n                thumbnail: { size: [ 64, 64 ], mode: outbound }\n'.trim(),Oe='\n// Appel le filtre "small" dans le template lors de l\'affichage de l\'image\n\n<img src="{{ vich_uploader_asset(category.category, "imageFile") | imagine_filter(\'small\')}}" alt="{{ category.category.name }}"/>\n'.trim(),fe="\nuse RollerworksComponentPasswordStrengthValidatorConstraints as RollerworksPassword;\n\nclass RegistrationFormType extends AbstractType\n{\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n            ->add('email')\n            ->add('plainPassword', PasswordType::class, [\n                'mapped' => false,\n                'constraints' => [\n                    new NotBlank([\n                        'message' => 'Please enter a password',\n                    ]),\n                    new RollerworksPasswordPasswordRequirements([\n                        'requireNumbers' => true,\n                        'requireCaseDiff' => true,\n                    ]),\n                ],\n            ]);\n    }\n}\n".trim(),ve="\n// Dans le formulaire\n\nuse GregwarCaptchaBundleTypeCaptchaType;\n\nclass RegistrationFormType extends AbstractType\n{\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n            ->add('email')\n            ->add('captcha', CaptchaType::class);\n    }\n}\n\n// Dans le template\n\n    <h1>S'enregistrer</h1>\n\n    {{ form_start(registrationForm) }}\n        {{ form_row(registrationForm.email) }}\n        {{ form_row(registrationForm.captcha) }}\n\n        <button type=\"submit\">S'enregistrer</button>\n        \n    {{ form_end(registrationForm) }}\n".trim(),ye="\nnamespace AppSecurityVoter;\n\nuse AppEntityQuote;\nuse AppEntityUser;\nuse SymfonyComponentSecurityCoreAuthenticationTokenTokenInterface;\nuse SymfonyComponentSecurityCoreAuthorizationVoterVoter;\nuse SymfonyComponentSecurityCoreSecurity;\nuse SymfonyComponentSecurityCoreUserUserInterface;\n\nclass QuoteVoter extends Voter\n{\n    // Cr\xe9ation d'une constante\n    public const EDIT = 'QUOTE_EDIT';\n\n    private $security;\n\n    public function __construct(Security $security)\n    {\n        $this->security = $security;\n    }\n\n    protected function supports($attribute, $subject)\n    {\n        // Retourne false si l'attribut n'est pas trouver dans le tableau\n        // et si l'objet n'est pas une Quote\n        return in_array($attribute, [self::EDIT])\n            && $subject instanceof AppEntityQuote;\n    }\n\n    protected function voteOnAttribute($attribute, $subject, TokenInterface $token)\n    {\n        $user = $token->getUser();\n\n        // Si l'utilisateur n'est pas connect\xe9, refus\xe9 l'acc\xe8s\n        if (!$user instanceof UserInterface) {\n            return false;\n        }\n\n        // Ici $this->canEdit fais r\xe9f\xe9rence \xe0 la m\xe9thode canEdit\n        switch ($attribute) {\n            case self::EDIT:\n                return $this->canEdit($subject, $user);\n        }\n\n        return false;\n    }\n\n    private function canEdit(Quote $quote, User $user)\n    {\n        // L'utilisateur peut \xe9diter la Quote s'il en est l'auteur\n        // ou si l'utilisateur poss\xe8de le role admin.\n        // N\xe9c\xe9ssite donc la m\xe9thode getAuthor et la relation avec Doctrine\n        return $user === $quote->getAuthor()\n            || $this->security->isGranted('ROLE_ADMIN');\n    }\n}\n".trim(),Ne='\nclass QuoteController extends AbstractController\n{\n    /**\n     * @IsGranted("QUOTE_EDIT", subject="quote")\n     * @Route("/quotes/{id}/edit", name="quotes_edit")\n     */\n    public function edit(Quote $quote)\n    {\n        // \xe9quivalent sans annotation :\n        // $this->denyAccessUnlessGranted(\'QUOTE_EDIT\', $quote);\n    }\n}\n'.trim(),Ce="\n{% if is_granted('QUOTE_EDIT', quote) %}\n    <a href=\"{{ path('quotes_edit', {id: quote.id}) }}\">Modifier</a>\n{% endif %}\n".trim(),Ee='\n/**\n * @Route("/quotes/ajouter", name="quote_ajouter")\n */\npublic function ajouter(Request $request, EventDispatcherInterface $eventDispatcher): Response\n{\n    ...\n\n    // Ici on est dans un controller qui permet d\'ajouter\n    // une Quote avec un formulaire \n\n    if ($form->isSubmitted() && $form->isValid()) {\n        $quote = $form->getData();\n\n        $quoteManager->persist($quote);\n        $quoteManager->flush();\n\n        // On trigger l\'event QuoteCreatedEvent\n        // au submit du formaire s\'il est valide\n        $event = new QuoteCreatedEvent($quote);\n        $eventDispatcher->dispatch($event);\n\n        ...\n    }\n    ...\n}\n'.trim(),Se="\nnamespace AppEvent;\n\nuse AppEntityQuote;\nuse SymfonyContractsEventDispatcherEvent;\n\nclass QuoteCreatedEvent extends Event\n{\n    protected $quote;\n\n    public function __construct(Quote $quote)\n    {\n        $this->quote = $quote;\n    }\n\n    public function getQuote()\n    {\n        return $this->quote;\n    }\n}\n".trim(),$e="\nnamespace AppSubscriber;\n\nuse AppEventQuoteCreatedEvent;\nuse DoctrineORMEntityManagerInterface;\nuse SymfonyComponentEventDispatcherEventSubscriberInterface;\n\nclass QuoteSubscriber implements EventSubscriberInterface\n{\n    // Ici on utlise le manager pour utiliser des services\n    private $manager;\n\n    public function __construct(EntityManagerInterface $manager)\n    {\n        $this->manager = $manager;\n    }\n\n    // S'abonne \xe0 un tableau d'\xe9v\xe9nement\n    // Ici la cl\xe9 du tableau correspond \xe0 l'event,\n    // la valeur correspond \xe0 la m\xe9thode du subscriber\n    public static function getSubscribedEvents(): array\n    {\n        return [\n            QuoteCreatedEvent::class => 'onQuoteCreate',\n        ];\n    }\n\n    // La m\xe9thode onQuoteCreate s'effectuera lorsque \n    // l'event QuoteCreatedEvent sera appel\xe9.\n    public function onQuoteCreate(QuoteCreatedEvent $event): void\n    {\n        // On ajoute par exemple des points \xe0 l'utilisateur\n        $userPoint = $event->getQuote()->getAuthor()->getPoint();\n        $event->getQuote()->getAuthor()->setPoint($userPoint + 100);\n    }\n}\n".trim(),ke="\n{% block stylesheets %}\n    {{ encore_entry_link_tags('app') }}\n{% endblock %}\n\n{% block javascripts %}\n    {{ encore_entry_script_tags('app') }}\n{%  endblock %}\n".trim(),De="\nnamespace AppCommand;\n\nuse SymfonyComponentConsoleCommandCommand;\nuse SymfonyComponentConsoleInputInputInterface;\nuse SymfonyComponentConsoleInputInputOption;\nuse SymfonyComponentConsoleOutputOutputInterface;\nuse SymfonyComponentConsoleStyleSymfonyStyle;\nuse SymfonyComponentDependencyInjectionContainerInterface;\n\nclass RandomQuoteCommand extends Command\n{\n    // Le nom de la commande ici\n    protected static $defaultName = 'app:random-quote';\n\n    // La description de la commande\n    protected static $defaultDescription = 'Pick a random quote from the database.';\n\n    // On utilise le container pour acc\xe9der aux services ici\n    private $container;\n\n    public function __construct(ContainerInterface $container)\n    {\n        parent::__construct();\n        $this->container = $container;\n    }\n\n    protected function configure()\n    {\n        $this\n            ->setDescription(self::$defaultDescription)\n\n            // On ajoute un argument (obligatoire) category \xe0 la commande\n            ->addArgument(\n                'category', \n                InputArgument::REQUIRED, \n                'The category of the quote.')\n\n            // On ajoute une option avec valeur obligatoire\n            // On pourra l'appeler comme ceci: --iterations ou -i\n            ->addOption(\n                'iterations',\n                'i',\n                InputOption::VALUE_REQUIRED,\n                'How many times should the message be printed?',\n                1\n            )\n\n            // Texte \xe0 afficher lors du --help\n            ->setHelp(\n                'This command allows you to pick a random quote from the database!\n                \n--category to look for a specific category'\n            )\n        ;\n    }\n\n    protected function execute(InputInterface $input, OutputInterface $output): int\n    {\n        // SymfonyStyle permet d'ajouter du style\n        // lors de l'output de la commande\n        $io = new SymfonyStyle($input, $output);\n        $io->title('Citation al\xe9atoire !');\n\n        $inputCategory = $input->getArgument('category');\n        $inputIteration = $input->getOption('iterations');\n\n        if (...)\n        {\n            // L'output de la commande\n            $output->writeln([\n                    ...\n                ]);\n        }\n        \n        else {\n            // Message d'avertissement si besoin\n            $io->warning(...);\n\n            // Message d'erreur si besoin\n            $io->error(...);\n        }\n\n        // Return 0 est n\xe9c\xe9ssaire au fonctionnement \n        // de la commande \n        return 0;\n    }\n}\n".trim(),we='\n// Ici l\'attribut category correspond \xe0 une association ManyToOne.\n// Si la cat\xe9gorie vient \xe0 \xeatre supprimer on peut utiliser \n// onDelete dans les annotations\n\n// Ici SET NULL n\xe9c\xe9ssitera que la Quote n\'ai pas d\'obligation d\'avoir\n// une category\n\n// On peut \xe9galement utiliser CASCADE pour supprimer toute les quotes li\xe9es\n// \xe0 la cat\xe9gorie\n\nclass Quote\n{\n    ...\n\n    /**\n     * @ORMManyToOne(targetEntity=Category::class, inversedBy="quotes")\n     * @ORMJoinColumn(name="category_id", referencedColumnName="id", onDelete="SET NULL")\n     */\n    private $category;\n\n    ...\n}\n'.trim(),Te="\n// Dans le .env\n\nMAILER_DSN=smtp://localhost:1025\n".trim(),Re="\nframework:\n    mailer:\n        dsn: '%env(MAILER_DSN)%'\n        envelope:\n            sender: 'noreply@example.org'\n            recipients: [ 'foo@example.com', 'bar@example.com' ]\n".trim(),Ae="\n\nnamespace AppController;\n\nuse SymfonyComponentMimeEmail;\nuse SymfonyComponentMailerMailerInterface;\n\nclass RegistrationController extends AbstractController\n{\n    /**\n     * @Route(\"/register\", name=\"app_register\")\n     */\n    public function register( ... ,  MailerInterface $mailer): Response\n    {\n        ...\n\n        if ($form->isSubmitted() && $form->isValid()) {\n\n            ...\n\n            // Envoi d'un mail lors de l'inscription (au submit si valide)\n            $email = (new Email())\n                ->from('noreply@example.org')\n                ->to($user->getEmail())\n                ->subject('Quote Machine Inscription')\n                ->text(\"Bienvenue {$user->getName()} !\n                Merci d'avoir rejoint la quote machine. \xc0 bient\xf4t.\");\n\n            $mailer->send($email);\n\n           ...\n        }\n        ...\n    }\n}\n".trim();var Ie=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:"Controller (MVC)"}),Object(l.jsxs)("div",{className:"DocuSection",children:[Object(l.jsx)(D,{url:"https://symfony.com/doc/current/the-fast-track/en/6-controller.html#being-lazy-with-the-maker-bundle",nom:"Documentation Controller"}),Object(l.jsx)(D,{url:"https://symfony.com/doc/current/doctrine.html#persisting-objects-to-the-database",nom:"Documentation Objet Controller"})]}),Object(l.jsxs)("div",{children:["\u2022 Installer Maker Bundle : ",Object(l.jsx)("div",{className:"Quote",children:"symfony composer req maker --dev"})]}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er un controller : ",Object(l.jsx)("div",{className:"Quote",children:"bin/console make:controller"})]}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er un CRUD controller : ",Object(l.jsx)("div",{className:"Quote",children:"bin/console make:crud"})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple d'action d'un controler (index avec research)",code:_,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple d'action d'un controler (modify)",code:M,language:"javascript"})]})]})};var Pe=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Doctrine "}),Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://symfony.com/doc/current/doctrine.html",nom:"Documentation Doctrine"})}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er une entit\xe9 :",Object(l.jsx)("div",{className:"Info",children:"Cette m\xeame commande est utiliser pour modifier une entit\xe9 d\xe9j\xe0 existante ! Si vous souhaiter supprimer une entit\xe9, supprimer simplement le fichier (entit\xe9 + repository) mais faites attention aux messages d'alerte !"}),Object(l.jsx)("div",{className:"Quote",children:" bin/console make:entity "})]}),Object(l.jsxs)("div",{children:["\u2022 R\xe9g\xe9n\xe9rer des accesseurs pour les entit\xe9s :",Object(l.jsx)("div",{className:"Info",children:"Commande utile si vous avez supprimer/modifier manuellement des attributs."}),Object(l.jsx)("div",{className:"Quote",children:" bin/console make:entity --regenerate App "})]}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er une BD",Object(l.jsx)("div",{className:"Info",children:"Attention, cr\xe9er un utilisateur sur phpMyAdmin cr\xe9er \xe9galement une BD dum\xeame nom. Commande peu utilis\xe9e pour les TPs donc."}),Object(l.jsx)("div",{className:"Quote",children:"  bin/console doctrine:database:create "})]}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er tables BD \xe0 partir des entit\xe9s : ",Object(l.jsx)("div",{className:"Quote",children:"  bin/console doctrine:schema:create"})]}),Object(l.jsxs)("div",{children:["\u2022 Supprimer les tables BD :",Object(l.jsx)("div",{className:"Info",children:"Attention, le contenu des tables sera \xe9galement supprimer !"}),Object(l.jsx)("div",{className:"Quote",children:" bin/console doctrine:schema:drop --force"})]}),Object(l.jsxs)("div",{children:["\u2022 Mise \xe0 jour de la BD :",Object(l.jsx)("div",{className:"Quote",children:" bin/console doctrine:schema:update --force "})]}),Object(l.jsx)("div",{className:"Exemple",children:Object(l.jsx)(F,{text:"Exemple de onDelete sur attributs de classe",code:we,language:"javascript"})})]})};var Fe=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:"Bienvenue dans l'Ultimate PDF !"}),Object(l.jsxs)("i",{children:[Object(l.jsx)("div",{children:"Je ne me porte pas garant des \xe9ventuelles b\xeatises \xe9crites dans cette documentation."}),Object(l.jsx)("div",{children:"R\xe9f\xe9rez-vous en priorit\xe9 \xe0 la documentation officielle pour ne pas bousiller vos projets !"})]})]})};var qe=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Twig (MVC)"}),Object(l.jsxs)("div",{className:"DocuSection",children:[Object(l.jsx)(D,{url:"https://symfony.com/doc/current/templates.html#twig-templating-language",nom:"Documentation Twig"}),Object(l.jsx)(D,{url:"https://symfony.com/doc/current/templates.html#creating-templates",nom:"Documentation Template"})]}),Object(l.jsxs)("div",{children:["\u2022 Boucle :",Object(l.jsxs)("div",{className:"Quote",children:["{% for ... in ... %}",Object(l.jsx)("br",{})," {% endfor %}"]})]}),Object(l.jsxs)("div",{children:["\u2022 Condition : ",Object(l.jsxs)("div",{className:"Quote",children:["{% if ... %}",Object(l.jsx)("br",{})," {% endif %}"]})]}),Object(l.jsxs)("div",{children:["\u2022 D\xe9clarer variable :  ",Object(l.jsx)("div",{className:"Quote",children:"{% set ... %}"})]}),Object(l.jsxs)("div",{children:["\u2022 Check authentifier :  ",Object(l.jsxs)("div",{className:"Quote",children:["{% if is_granted('IS_AUTHENTICATED_FULLY') %}",Object(l.jsx)("br",{})," {% endif %}"]})]}),Object(l.jsxs)("div",{children:["\u2022 Check r\xf4le :  ",Object(l.jsxs)("div",{className:"Quote",children:["{% if is_granted('ROLE_ADMIN') %}",Object(l.jsx)("br",{})," {% endif %}"]})]}),Object(l.jsxs)("div",{children:["\u2022 Commentaire :  ",Object(l.jsx)("div",{className:"Quote",children:"{# commentaire... #}"})]}),Object(l.jsxs)("div",{children:["\u2022 Dump : ",Object(l.jsx)("div",{className:"Quote",children:"{{ dump(var) }}"})]}),Object(l.jsx)("div",{className:"Exemple",children:Object(l.jsx)(F,{text:"Exemple de template",code:q,language:"html"})})]})};var _e=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" User"}),Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://symfony.com/doc/current/security.html",nom:"Documentation Security"})}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er un utilisateur :",Object(l.jsx)("div",{className:"Info",children:"Vous ne pouvez pas faire une de vos entit\xe9 un utilisateur ! Vous devez cr\xe9er un utilisateur dans un premier temps et ensuite lui ajouter des attributs avec bin/console make:entity"}),Object(l.jsx)("div",{className:"Quote",children:"bin/console make:user  "})]}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er un authentificateur (formulaire de connexion) :",Object(l.jsx)("div",{className:"Quote",children:" bin/console make:auth  "})]}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er un formulaire d'inscription :",Object(l.jsx)("div",{className:"Quote",children:" bin/console make:registration-form  "})]})]})};var Me=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Migration"}),Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://symfony.com/doc/current/doctrine.html#migrations-creating-the-database-tables-schema",nom:"Documentation Migration"})}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er une migration : ",Object(l.jsx)("div",{className:"Quote",children:" bin/console make:migration "})]}),Object(l.jsxs)("div",{children:["\u2022 Transfert migration vers la BD :",Object(l.jsx)("div",{className:"Quote",children:" bin/console doctrine:migrations:migrate"})]})]})};var Ue=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Fixtures"}),Object(l.jsxs)("div",{className:"DocuSection",children:[Object(l.jsx)(D,{url:"https://symfony.com/doc/current/bundles/DoctrineFixturesBundle/index.html",nom:"Documentation Fixtures"}),Object(l.jsx)(D,{url:"https://symfony.com/doc/current/bundles/DoctrineFixturesBundle/index.html#accessing-services-from-the-fixtures",nom:"Documentation encodage password pour Fixtures"})]}),Object(l.jsxs)("div",{children:["\u2022 Installer d\xe9pendance pour fixtures : ",Object(l.jsx)("div",{className:"Quote",children:"  composer require --dev orm-fixtures "})]}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er une fixtures :",Object(l.jsx)("div",{className:"Quote",children:" bin/console make:fixtures"})]}),Object(l.jsxs)("div",{children:["\u2022 Charger les fixtures dans la BD :",Object(l.jsx)("div",{className:"Info",children:"Attention, charger les fixtures de cette mani\xe8re l\xe0, c'est \xe0 dire toute en m\xeame temps, risque de causer des probl\xe8mes au niveau de l'IR (int\xe9grit\xe9 r\xe9f\xe9rentielle) de la BD si vous avez cr\xe9er des fixtures d\xe9pendante les unes des autres. Ajouter --no-interaction pour ignorer les associations."}),Object(l.jsx)("div",{className:"Quote",children:"   bin/console doctrine:fixtures:load "})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple fixtures avec fichiers .json",code:B,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple charger fixtures avec d\xe9pendances",code:Q,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple d'encodage de password dans les fixtures",code:H,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple d\xe9pendances fixtures (getReference)",code:de,language:"javascript"})]})]})};var Be=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Formulaire"}),Object(l.jsxs)("div",{className:"DocuSection",children:[Object(l.jsx)(D,{url:"https://symfony.com/doc/current/components/form.html",nom:"Documentation Formulaire"}),Object(l.jsx)(D,{url:"https://symfony.com/doc/4.4/form/bootstrap4.html",nom:"Documentation Bootstrap pour Formulaire"}),Object(l.jsx)(D,{url:"https://symfony.com/doc/current/reference/forms/types/entity.html",nom:"Documentation Entity Type Field"})]}),Object(l.jsxs)("div",{children:["\u2022 Installer d\xe9pendance pour formulaire :",Object(l.jsx)("div",{className:"Quote",children:" composer require symfony/form "})]}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er nouveau formulaire : ",Object(l.jsx)("div",{className:"Quote",children:" bin/console make:form"})]}),Object(l.jsx)("div",{className:"Exemple",children:Object(l.jsx)(F,{text:"Exemple de buildForm",code:G,language:"javascript"})})]})};var Qe=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" API"}),Object(l.jsxs)("div",{className:"DocuSection",children:[Object(l.jsx)(D,{url:"https://api-platform.com/docs/v2.5/core/getting-started/",nom:"Documentation Api"}),Object(l.jsx)(D,{url:"https://api-platform.com/docs/v2.5/core/operations/#enabling-and-disabling-operations",nom:"Documentation Groups Api"}),Object(l.jsx)(D,{url:"https://api-platform.com/docs/v2.5/core/security/#security",nom:"Documentation Security Api"}),Object(l.jsx)(D,{url:"https://api-platform.com/docs/v2.5/core/serialization/#changing-the-serialization-context-on-a-per-item-basis",nom:"Documentation Denormalizer"})]}),Object(l.jsxs)("div",{children:["\u2022 Installer d\xe9pendance pour API : ",Object(l.jsx)("div",{className:"Quote",children:" composer require api "})]}),Object(l.jsxs)("div",{children:[" \u2022 Annotation n\xe9cessaire pour entit\xe9 ",Object(l.jsx)("div",{className:"Quote",children:"@ApiResource "})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple d'annotation",code:J,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple denormalizer pour encodage password",code:se,language:"javascript"})]})]})};var Le=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Tests avec PHP Unit"}),Object(l.jsxs)("div",{className:"DocuSection",children:[Object(l.jsx)(D,{url:"https://phpunit.readthedocs.io/en/9.3/assertions.html#assertsame",nom:"Documentation assertSame()"}),Object(l.jsx)(D,{url:"https://phpunit.readthedocs.io/en/9.3/writing-tests-for-phpunit.html#data-providers",nom:"Documentation Data Providers"}),Object(l.jsx)(D,{url:"https://phpunit.readthedocs.io/en/9.3/test-doubles.html#stubs",nom:"Documentation Stubs"}),Object(l.jsx)(D,{url:"https://phpunit.readthedocs.io/en/9.3/test-doubles.html#mock-objects",nom:"Documentation Mocks"}),Object(l.jsx)(D,{url:"https://github.com/zenstruck/foundry#using-in-your-tests",nom:"Documentation Tests Foundry"})]}),Object(l.jsxs)("div",{children:["\u2022 Lancer tout les tests :",Object(l.jsx)("div",{className:"Quote",children:" vendor/bin/phpunit  "})]}),Object(l.jsxs)("div",{children:["\u2022 Mettre \xe0 jour l'auto-chargement de Composer :",Object(l.jsx)("div",{className:"Quote",children:" composer dump-autoload"})]}),Object(l.jsxs)("div",{children:["\u2022 Couverture de code (rapport fichier html) dans dossier test:",Object(l.jsx)("div",{className:"Quote",children:" vendor/bin/phpunit --coverage-html=coverage --whitelist=src tests"})]}),Object(l.jsxs)("div",{children:["\u2022 Annotation pour skip la couverture de code (\xe0 mettre sur les m\xe9thodes d'une classe)",Object(l.jsx)("div",{className:"Quote",children:" @codeCoverageIgnore"})]}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er un test fonctionnel ( /tests/)",Object(l.jsx)("div",{className:"Quote",children:" php bin/console make:functional-test"})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple d'utilisation d'assertSame avec Data Provider",code:W,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple d'utilisation d'un mock",code:Y,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple de test fonctionnel",code:re,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple de test fonctionnel avec container:",code:ae,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple de debug pour test fonctionnel",code:ce,language:"javascript"})]})]})};var ze=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Conseils"}),Object(l.jsxs)("div",{className:"conseils",children:[Object(l.jsxs)("div",{children:[" \u2022 O\xf9 sont mes fichiers ?",Object(l.jsx)("br",{})," "]}),Object(l.jsxs)("span",{children:[Object(l.jsx)("br",{}),"Controller front\xe2le \u2192 public/index.php"]}),Object(l.jsx)("span",{children:"Controller \u2192 src/Controller/"}),Object(l.jsx)("span",{children:"Fixtures \u2192 src/DataFixtures/"}),Object(l.jsx)("span",{children:"Factory \u2192 src/Factory/"}),Object(l.jsx)("span",{children:"Formulaire \u2192 src/Form/"}),Object(l.jsx)("span",{children:"Vue Twig \u2192 templates/"}),Object(l.jsx)("span",{children:"Migrations \u2192 migrations/"}),Object(l.jsx)("span",{children:"Services \u2192 src/services"}),Object(l.jsx)("span",{children:"Fixtures (json) \u2192 src/DataFixtures/data/"})]}),Object(l.jsxs)("div",{className:"conseils",children:[Object(l.jsx)("div",{children:"\u2022 Quelles sont les routes mises en place ?"}),Object(l.jsx)("div",{className:"QuoteConseil",children:"bin/console debug:router "})]}),Object(l.jsxs)("div",{className:"conseils",children:[Object(l.jsx)("div",{children:"\u2022 Quelles sont les services disponibles ?"}),Object(l.jsx)("div",{className:"QuoteConseil",children:"bin/console debug:container"})]}),Object(l.jsxs)("div",{className:"conseils",children:[Object(l.jsx)("div",{children:"\u2022 Les plugins recommander :"}),Object(l.jsxs)("span",{children:[" ",Object(l.jsx)("br",{}),"-PHP Annotations"]}),Object(l.jsx)("span",{children:" -Symfony Support"}),Object(l.jsx)("span",{children:" -PHP CS Fixer"}),Object(l.jsx)("span",{children:" -.env files support"})]}),Object(l.jsx)("div",{className:"conseils",children:"\u2022 N'utiliser jamais de simple quote pour les param\xe8tres de vos annotations."}),Object(l.jsx)("br",{}),Object(l.jsx)("div",{className:"conseils",children:"\u2022 N'h\xe9siter pas \xe0 utiliser dump($var) dans vos controllers (appara\xeetra dans la Symfony toolbar en bas de votre rendu, petit ic\xf4ne en forme de viseur !) , et aussi {{ dump(var) }} dans vos vues."}),Object(l.jsx)("br",{}),Object(l.jsx)("div",{className:"conseils",children:"\u2022 Un petit coup de bin/console cache:clear de temps en temps, on ne sais jamais.."}),Object(l.jsx)("br",{}),Object(l.jsx)("div",{className:"conseils",children:"\u2022 Vider \xe9galement le cache de votre navigateur si des interf\xe9rences entre deux projets Symfony ce produit."}),Object(l.jsx)("br",{}),Object(l.jsx)("div",{className:"conseils",children:"\u2022 Vous pouvez utiliser l'op\xe9rateur binaire | pour combiner des param\xe8tres d'une fonction lorsque cela est possible."}),Object(l.jsx)("br",{}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Script Composer reset",code:ie,language:"javascript"}),Object(l.jsx)(F,{text:"Script Composer test",code:oe,language:"javascript"})]})]})};var He=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Installation React"}),Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://reactjs.org/docs/create-a-new-react-app.html",nom:"Documentation React"})}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er un projet REACT : ",Object(l.jsx)("div",{className:"Quote",children:" npx create-react-app leNom"})]}),Object(l.jsxs)("div",{children:["\u2022 Lancer le serveur de d\xe9veloppement : ",Object(l.jsx)("div",{className:"Quote",children:"npm run start"})]}),Object(l.jsxs)("div",{children:["\u2022 Mettre \xe0 jour projet REACT  : ",Object(l.jsx)("div",{className:"Quote",children:"npm install"})]}),Object(l.jsxs)("div",{children:["\u2022 D\xe9ploiement projet en production  : ",Object(l.jsx)("div",{className:"Quote",children:"npm run build"})]})]})},Ve='\n<form className="form" onSubmit={(event)} => {event.preventDefault();}/>\n'.trim(),Ge="\nconst url=\"http://google.fr\"\n\nexport function getAlbums(page, signal, nameFilter, albumsParPage)\n    {\n         return fetch(\n             url\n             +'/albums?page='\n             + page+ '&nom='\n             + nameFilter \n             + '&albumsParPage=' \n             + albumsParPage, \n             {signal : signal} )\n\n                .then(function(response)\n                {\n                    if (response.ok)\n                        return response.json();\n                    else \n                        throw Error (\n                            'Erreur au niveau de getAlbums ' \n                            + response.status\n                            )\n                })\n                \n                .catch(function(error)\n                {\n                    console.log(\n                        'Il y a eu un probl\xe8me avec l'op\xe9ration fetch: '+ error.message);\n                })\n    }\n".trim(),Je="\nuseEffect(() => {\n\n    setAlbums(null);\n\n    let controller = new AbortController();\n\n    getAlbums(page, controller.signal, nameFilter, albumsParPage)\n        .then(json => {\n            setPagination(json.pagination);\n            setAlbums(json.albums);\n        })\n\n    // Le return d'un useEffect permet de d\xe9truire\n    // le composant quand il n'est plus dans le DOM\n    // Un useEffect retournera toujours un callback    \n    return () => {controller.abort();}\n\n}, [page, nameFilter, albumsParPage]);\n\n".trim(),We='\nreturn (\n    <>\n      <Router>\n        <Switch>\n\n          //:id correspond \xe0 un param\xe8tre d\'url\n          <Route path="/tasks/:id">\n            <Detail />\n          </Route>\n\n          <Route path="/create">\n            <Create />\n          </Route>\n\n          <Route path="/">\n            <Home />\n          </Route>\n\n        </Switch>\n      </Router>\n\n      <Footer/>\n    </>\n  );\n}\n'.trim(),Ye='\nimport { useParams } from "react-router-dom";\n\nexport function Detail()\n{\n        let { id } = useParams();\n\n        return (\n            <h1>Vous avez cliqu\xe9 sur l\'id {id} !</h1>\n        );\n}\n'.trim(),Ke='\n<div>\n    <Link to ={"/tasks/" + task.id}>\n        {task.title}\n    </Link>\n</div\n'.trim(),Ze="\nimport { useHistory } from \"react-router-dom\";\n\nexport function Exemple()\n{\n    const history = useHistory();\n\n    return (\n        <div onClick={() => history.push('/')}>Exemple</div>\n    )\n}\n".trim(),Xe="\nimport { configureStore } from '@reduxjs/toolkit'\nimport filters from './filters'\nimport tasks from './tasks'\n\n\nconst store = configureStore({\n  reducer : {\n    tasks : tasks,\n    filters: filters\n  }\n})\n\nexport default store\n\n".trim(),en="\nimport { createSlice } from '@reduxjs/toolkit'\n\nconst tasksSlice = createSlice(\n    {\n        name: 'tasks',\n\n        // Les initialStates sont g\xe9n\xe9ralement des objets vides ou des variables \xe0 NULL\n        initialState: {\n            tasks: {\n                1:\n                {\n                    id: 1,\n                    title: \"Task 1\",\n                    description: \"# The description of the task number 1 The main content\",\n                    done: false,\n                }\n            },\n        },\n\n        reducers:\n        {\n            setTasks: (state, action) => {\n                const newTasks = action.payload;\n                newTasks.forEach((task) => {\n                    state.tasks[task.id] = task;\n                });\n            }\n        }\n    }\n)\n\nexport const { setTasks } = tasksSlice.actions;\nexport default tasksSlice.reducer;\n".trim(),nn="\n\n        reducers:\n        {\n            toggleTask: (state, action) => {\n\n                // action.payload = ce que l'on donne \xe0 la fonction, ici une task\n                const toggledTask = action.payload;    \n\n                // state.tasks = chercher dans les tasks du store\n                const originalTask = state.tasks[toggledTask.id];    \n\n                // Toggle le done de la task du store (qui \xe0 \xe9tait trouver grace \xe0 l'id du action.payload)\n                originalTask.done = !originalTask.done;              \n            },\n\n            deleteTask: (state, action) => {\n                const deletedTask = action.payload;          \n                \n                delete state.tasks[deletedTask.id];\n            }\n        }\n\n".trim(),tn='\nlet allTasks = Object.values(tasks)\n.filter((task, i) => (filters.showDone && task.done)||(filters.showTodo && !task.done))\n.map((task) => <TaskItem key={task.id} task={task}></TaskItem>);\n\nreturn (\n    <div className="taskList">\n    {allTasks}\n    </div>\n);\n\n'.trim(),sn="\n<div className = { classNames({'maClasseCSS': maCondition })}>\n".trim(),rn='\n<div className = { classNames({ maClasse1: true }, { "maClasse2" : maCondition })}>\n'.trim(),an="\nimport MarkdownIt from 'markdown-it'\n\nexport function Exemple()\n{\n    const md = new MarkdownIt();\n    const html = md.render(leText);\n\n    function createMarkup()\n    {\n        return {__html : html };\n    }\n\n    return (\n        <div dangerouslySetInnerHTML={createMarkup()}/>\n    )\n}\n".trim(),cn="\n\n- projet-react.\n    - public.\n    - src.\n        - components.        vos composents\n        - screens.           vos \xe9crans accessible avec le routeur\n        - store.             vos slices et le store\n        - hooks.             vos hooks personnalis\xe9s\n        - services.          vos fetchs et autres actions li\xe9es \xe0 une API\n        - App.js           \n        - index.js \n    - README.md              le markdown \xe0 d\xe9tailler\n\n".trim(),on="\n// Il sera n\xe9c\xe9ssaire d'utiliser le credentials pour toutes les m\xe9thodes\n// qui ont besoin d'authentifier un utilisateur par exemple.\n\nreturn fetch(url, {\n    credentials: \"include\"\n})\n\n.then...\n".trim(),ln="\nconst [subMenu, setSubMenu] = useState(Array(10).fill(false));\n".trim(),dn='\n\nreturn (\n    <form className="form" onSubmit={(event) => {event.preventDefault(); onSubmit(copyTask)}}>\n        <label>Titre: </label>\n        <input \n        type="text" \n        value={copyTask.title} \n        required \n        placeholder="Le titre" \n        onChange={(event) => {\n            const title={...copyTask};\n            title.title = event.target.value;\n            setCopyTask(title);\n             }}/>\n\n        <label>Description: </label>\n        <input \n        type="text" \n        value={copyTask.description} \n        placeholder="La description" \n        onChange={(event) => {\n            const description={...copyTask};\n            description.description = event.target.value;\n            setCopyTask(description);\n             }}/>\n\n        <button \n        type="button" \n        onClick={() => {\n            const done = {...copyTask};\n            done.done === false? done.done = true : done.done = false;\n            setCopyTask(done);\n            }}> {copyTask.done ? "Done!": "To Do"}</button>\n\n        <div className="buttonsEnd">\n            <button type="submit" >{submitLabel}</button>\n            <button type="button" onClick={onCancel}>{cancelLabel}</button>\n            <button \n            type="button" \n            onClick={() => onDelete(copyTask)} \n            hidden={task.id ? "" : "hidden"}>{deleteLabel}</button>\n        </div>\n    </form>\n);\n\n'.trim(),un="\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from \"./store\";\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n\n".trim(),mn="\n// Les thunks sont situ\xe9s dans la slice, mais ne font\n// pas partie des actions !\nconst fetchTaskById = (id) => async (dispatch) => {\n    //Action d'une slice du store qui va activer un overlay\n    dispatch(setIsBusy());                   \n    \n    //Met la r\xe9ponse d'une fonction fetch dans une constante \n    const fetchedTask = await getTodoById(id);     \n    \n    //Action de la slice actuelle pour mettre \xe0 jour le store\n    dispatch(setTask(fetchedTask));      \n    \n    //D\xe9sactive l'overlay\n    dispatch(unsetIsBusy());                             \n}\n\nexport { fetchTaskById };\n".trim(),jn="\n// Les fetchs en DELETE ne donne g\xe9n\xe9ralement aucune r\xe9ponse\n// Il n'est donc pas n\xe9c\xe9ssaire la stocker dans une variable/constante\n\nconst deleteTaskThunk = (task) => async (dispatch) => {\n    dispatch(setIsBusy());\n    await deleteTodo(task);\n    dispatch(deleteTask(task));\n    dispatch(unsetIsBusy());\n}\n\nexport { deleteTaskThunk };\n".trim(),pn="\nexport function patchTodo(task)\n{\n    // Cr\xe9er une instance de Header est n\xe9c\xe9ssaire pour le param\xe8tre du fetch\n    // Le content type diff\xe8re selon les urls et les m\xe9thodes\n    // Celui-ci est trouver dans la documentation de votre API\n\n    const header = new Headers({\n        \"Content-Type\" : \"application/merge-patch+json\"\n    })\n\n    // La m\xe9thode correspond \xe0 l'action de l'api\n    // Il est parfois n\xe9c\xe9ssaire de transformer le body avant de le transferer \xe0 l'API\n    return fetch(url+'/todos/' + task.id ,\n    {\n        credentials: \"include\",\n        method : \"PATCH\", \n        body : JSON.stringify(task),\n        headers: header\n     })\n\n            .then(function(response)\n            {\n                if (response.ok)\n                    return response.json();\n                else \n                    throw Error ('Erreur au niveau de patchTodos ' + response.status)\n            })\n            \n            .catch(function(error)\n            {\n                console.log('Il y a eu un probl\xe8me avec l'op\xe9ration fetch: ' + error.message);\n            })\n}\n".trim(),bn="\nnomDuComposant.propTypes =\n{\n    nomProps: PropTypes.string,\n    nomProps2: PropTypes.func,\n    nomProps3: PropTypes.object\n}\n".trim(),hn='\nreturn(\n    <TaskForm\n    task={unObjectTask}\n    submitLabel="Enregistrer"\n    deleteLabel="Supprimer"\n    cancelLabel="Annuler"\n    onSubmit={() => console.log("Je submit !")}\n    onCancel={() => console.log("Cancel !")}/>\n    )\n    \n'.trim(),xn="\nexport function TaskForm(props)\n{\n    const {task, submitLabel, deleteLabel, cancelLabel, onSubmit, onCancel} = props;\n\n    return (\n        ...\n    )\n}\n\n".trim(),gn="\n// setMenu sera utilis\xe9 pour mettre \xe0 jour la variable menu\n// Le param\xe8tre du useState d\xe9fini la valeur par d\xe9fault de la variable\n\n// Attention pour les objets et les tableaux!\n// Il sera n\xe9c\xe9ssaire de faire une copy de la variable pour que cela fonctionne !\n// Voir exemple suivant..\n\nconst [menu, setMenu] = useState(false);\n\nreturn(\n    <UnComposant onClick={() => setMenu(true)}/>\n)\n".trim(),On="\n\nconst [menu, setMenu] = useState([false, false, false]);\n\nfunction changeMenu(index)\n{\n    let copyMenu = [...menu];\n    copyMenu[index] = true;\n\n    setMenu(copyMenu);\n}\n\nreturn(\n    <UnComposant onClick={() => changeMenu(0)}/>\n)\n\n".trim(),fn='\n// L\'effet de bord ici affichera un message dans la console lors du rendu du composant.\n// Il affichera de nouveau un message lorsque uneVariable sera modifi\xe9.\n\nuseEffect(() => {    \n\n    console.log("Je fais une action !");\n    \n}, [uneVariable]);\n\n'.trim(),vn='\n// Redirigera vers la page actuelle\n\nexport function loginURL()\n    {\n         return "https://monSite/login?redirect" + encodeURIComponent(window.location.href)\n    }\n\n'.trim(),yn="\n// Si maVariable est true, alors Composant 2 sera rendu\n// On aura donc Composant 1, 2 et 3.\n\nreturn (\n    <Composant 1>\n        {maVariable && \n            <Composant 2/>\n        }\n    <Composant 3>\n);\n\n// Si maVariable est true, alors Composant 2 sera rendu\n// On aura donc Composant 1 et 2.\n\n// Sinon, Composant 3 sera rendu\n// On aura donc Composant 1 et 3.\n\nreturn (\n    <Composant 1>\n\n        {maVariable ?\n        <Composant 2>\n        :\n        <Composant 3>\n        }\n);\n".trim(),Nn="\n// Axios ici est utilis\xe9 dans un thunk\n\nexport function getObject(idObject) {\n    return async (dispatch) => {\n      try {\n        const response = await axios.get(`/objects/${idObject}`);\n\n        // On imagine ici une action de la slice pour stocker la r\xe9ponse\n        dispatch(slice.actions.getObjectSuccess(response.data));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n".trim(),Cn="\n// Axios ici est utilis\xe9 dans un thunk\n// Les m\xe9thodes PUT, PATCH et POST n\xe9c\xe9ssite un second param\xe8tre\n// contentant les valeurs \xe0 cr\xe9er/mettre \xe0 jour\n\nexport function putObject(idObject, object) {\n    return async (dispatch) => {\n      await axios.put(`/objects/${idObject}`, object);\n\n      // On imagine ici une action de la slice pour stocker la r\xe9ponse\n      dispatch(slice.actions.updateObjectSuccess(response.data))\n    };\n  }\n".trim();var En=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Props"}),Object(l.jsxs)("div",{className:"DocuSection",children:[Object(l.jsx)(D,{url:"https://fr.reactjs.org/docs/components-and-props.html",nom:"Documentation Props"}),Object(l.jsx)(D,{url:"https://fr.reactjs.org/docs/typechecking-with-proptypes.html",nom:"Documentation PropTypes"})]}),Object(l.jsxs)("div",{children:["\u2022 Importer les PropTypes :",Object(l.jsx)("div",{className:"Quote",children:"import PropTypes from 'prop-types';"})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple de Props donner \xe0 un composant",code:hn,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple de Props re\xe7u d'un composant",code:xn,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple de PropTypes",code:bn,language:"javascript"})]})]})};var Sn=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Hooks"}),Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://fr.reactjs.org/docs/hooks-state.html",nom:"Documentation useState"})}),Object(l.jsxs)("div",{children:["\u2022 Importer les hooks : ",Object(l.jsx)("div",{className:"Quote",children:" import React, { useState } from 'react';"})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple d'utilisation d'un hook",code:gn,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple d'utilisation d'un hook (tableaux et objets)",code:On,language:"javascript"})]})]})};var $n=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Effet de bord"}),Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://fr.reactjs.org/docs/hooks-effect.html",nom:"Documentation useEffect"})}),Object(l.jsxs)("div",{children:["\u2022 Importer le hook : ",Object(l.jsx)("div",{className:"Quote",children:" import React, { useEffect } from 'react';"})]}),Object(l.jsx)("div",{className:"Exemple",children:Object(l.jsx)(F,{text:"Exemple d'utilisation d'un effet de bord",code:fn,language:"javascript"})})]})};var kn=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Router"}),Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://reactrouter.com/web/guides/quick-start",nom:"Documentation Router"})}),Object(l.jsxs)("div",{children:["\u2022 Installer les composants Router :",Object(l.jsx)("div",{className:"Quote",children:"npm install react-router-dom"})]}),Object(l.jsxs)("div",{children:["\u2022 Importer des composants et hooks pour Routing :",Object(l.jsxs)("div",{className:"Quote",children:["import {",Object(l.jsx)("br",{}),"BrowserRouter as Router,",Object(l.jsx)("br",{}),"Switch,",Object(l.jsx)("br",{}),"Route,",Object(l.jsx)("br",{}),"Link,",Object(l.jsx)("br",{}),"useRouteMatch,",Object(l.jsx)("br",{}),"useParams,",Object(l.jsx)("br",{}),"useHistory",Object(l.jsx)("br",{}),'} from "react-router-dom";']})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple utilisation d'un Router",code:We,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple utilisation param\xe8tre d'url",code:Ye,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple utilisation d'un Link",code:Ke,language:"javascript"}),Object(l.jsx)(F,{text:"Redirection en JavaScript avec history.push()",code:Ze,language:"javascript"})]})]})};var Dn=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Fetch"}),Object(l.jsxs)("div",{className:"DocuSection",children:[Object(l.jsx)(D,{url:"https://developer.mozilla.org/fr/docs/Web/API/Fetch_API/Using_Fetch",nom:"Documentation Fetch"}),Object(l.jsx)(D,{url:"https://developer.mozilla.org/en-US/docs/Web/API/Response",nom:"Documentation Response"}),Object(l.jsx)(D,{url:"https://developer.mozilla.org/fr/docs/Web/API/WindowOrWorkerGlobalScope/fetch",nom:"Documentation fetch()"})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple de fetch",code:Ge,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple d'appel d'un fetch dans un UseEffect",code:Je,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple de cookies de session",code:on,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple de m\xe9thode PATCH",code:pn,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple de redirection dans URL",code:vn,language:"javascript"})]})]})};var wn=function(){return Object(l.jsx)("div",{className:"Separator"})};var Tn=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Redux "}),Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://redux-toolkit.js.org/usage/usage-guide#creating-slices-of-state",nom:"Documentation Redux"})}),Object(l.jsxs)("div",{children:["\u2022 Installer React-Redux : ",Object(l.jsx)("div",{className:"Quote",children:" npm install @reduxjs/toolkit react-redux"})]}),Object(l.jsx)(wn,{}),Object(l.jsxs)("div",{children:["\u2022 Import d\u2019une action d\u2019une slice du store : ",Object(l.jsxs)("div",{className:"Quote",children:["import { useDispatch } from \u2018react-redux\u2019",Object(l.jsx)("br",{}),"import { monAction } from \u2018./store/maSlice'"]})]}),Object(l.jsxs)("div",{children:["\u2022 Appeler une action importer d'une slice : ",Object(l.jsxs)("div",{className:"Quote",children:[" const dispatch = useDispatch();",Object(l.jsx)("br",{}),"dispatch(monAction());"]})]}),Object(l.jsx)(wn,{}),Object(l.jsxs)("div",{children:["\u2022 Import de useSelector ",Object(l.jsx)("div",{className:"Quote",children:"import { useSelector } from \u2018react-redux\u2019"})]}),Object(l.jsxs)("div",{children:["\u2022 Appeler donn\xe9es importer du store : ",Object(l.jsx)("div",{className:"Quote",children:"const donnee = useSelector((state) => state.donne);"})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple de store (store/index.js)",code:Xe,language:"javascript"}),Object(l.jsx)(F,{text:"Appeler le store (/index.js)",code:un,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple de slice",code:en,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple d'actions d'une slice",code:nn,language:"javascript"})]})]})};var Rn=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Fonction utiles JavaScript"}),Object(l.jsxs)("div",{className:"DocuSection",children:[Object(l.jsx)(D,{url:"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/Array/map",nom:".map() : Transforme le contenu d'un tableau"}),Object(l.jsx)(D,{url:"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/Array/filter",nom:".filter() : Filtre le contenu d'un tableau"}),Object(l.jsx)(D,{url:"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/values",nom:"Object.values() : Conversion object to array"}),Object(l.jsx)(D,{url:"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/Array/fill",nom:".fil() : Remplit un tableau d'une valeur"}),Object(l.jsx)(D,{url:"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/then",nom:".then() : Encha\xeenement de promesse"}),Object(l.jsx)(D,{url:"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Operators/await",nom:"await : Attendre la r\xe9solution d'une promesse"}),Object(l.jsx)(D,{url:"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify",nom:"JSON.stringify() : Convertit une valeur JavaScript en une cha\xeene JSON"})]})]})};var An=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Fonction utiles PHP"}),Object(l.jsxs)("div",{className:"DocuSection",children:[Object(l.jsx)(D,{url:"https://www.php.net/manual/fr/function.array-push.php",nom:"array_push() : Ins\xe9rer dans un tableau"}),Object(l.jsx)(D,{url:"https://www.php.net/manual/en/function.mb-stripos.php",nom:"mb_stripos() : Cherche l\u2019occurrence d'un string dans un string"}),Object(l.jsx)(D,{url:"https://www.php.net/manual/fr/function.array-rand.php",nom:"array_rand() : S\xe9lectionne une cl\xe9 au hasard dans un tableau"}),Object(l.jsx)(D,{url:"https://www.php.net/manual/fr/function.implode.php",nom:"implode() : Transforme un tableau en string"}),Object(l.jsx)(D,{url:"https://www.php.net/manual/fr/function.readline.php",nom:"readline() : Lit une ligne entrer par un utilisateur"}),Object(l.jsx)(D,{url:"https://www.php.net/manual/fr/function.in-array.php",nom:"in_array() : Indique si une valeur est dans un tableau"}),Object(l.jsx)(D,{url:"https://www.php.net/manual/fr/function.array-search.php",nom:"array_search() : Cherche valeur dans un tableau (return la cl\xe9)"}),Object(l.jsx)(D,{url:"https://www.php.net/manual/fr/function.strtotime.php",nom:"strtotime() : Transforme une date en int"}),Object(l.jsx)(D,{url:"https://www.php.net/manual/fr/function.json-decode.php",nom:"json_decode() : Converti un cha\xeene .json"}),Object(l.jsx)(D,{url:"https://www.php.net/manual/fr/function.file-get-contents.php",nom:"file_get_contents() : Lit le contenu d'un fichier sous forme de string"}),Object(l.jsx)(D,{url:"https://www.php.net/manual/fr/language.constants.magic.php",nom:"__DIR__ : Dossier actuel"}),Object(l.jsx)(D,{url:"https://www.php.net/manual/fr/dir.constants.php",nom:"DIRECTORY_SEPARATOR : / pour Windows, \\ pour Linux"})]})]})};var In=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Divers"}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Annuler le rechargement de la page apr\xe8s envoi d\u2019un formulaire",code:Ve,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple formulaire avec event",code:dn,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple conversion objet vers tableau",code:tn,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple arborescence projet React",code:cn,language:"html"}),Object(l.jsx)(F,{text:"Alternative d\xe9claration array",code:ln,language:"javascript"}),Object(l.jsx)(F,{text:"Op\xe9rateur ternaire",code:yn,language:"javascript"})]})]})};var Pn=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Thunk "}),Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://redux-toolkit.js.org/usage/usage-guide#defining-async-logic-in-slices",nom:"Documentation Thunk"})}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple de Thunk dans une slice",code:mn,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple de Thunk avec fetch (DELETE)",code:jn,language:"javascript"})]})]})};var Fn=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Bonus"}),Object(l.jsxs)("div",{className:"DocuSection",children:[Object(l.jsx)(D,{url:"https://css-tricks.com/snippets/css/a-guide-to-flexbox/#background",nom:"Documentation Flexbox"}),Object(l.jsx)(D,{url:"https://www.markdownguide.org/basic-syntax/",nom:"Documentation MarkDown"}),Object(l.jsx)(D,{url:"https://sass-lang.com/documentation",nom:"Documentation Sass"}),Object(l.jsx)(D,{url:"https://git-scm.com/docs",nom:"Documentation Git"})]})]})};var qn=function(e){var n=e.name,t=e.route,s=e.onClick,r=e.activated,a=Object(o.f)();return Object(l.jsx)("div",{onClick:function(){s(),a.push("".concat(t))},className:p()({SubMenuBundle:!0},{liDoc:!0},{selectedBundleSection:r}),children:n})};var _n=function(e){var n=e.subMenuBundle;return Object(l.jsx)("span",{className:"SectionBundle",children:n})};var Mn=function(){var e=Object(s.useState)([]),n=Object(g.a)(e,2),t=n[0],r=n[1];return{allBundleSection:[{subMenuBundle:[{name:"Foundry",route:"/doc/symfony/Bundle/Factory"},{name:"EasyAdmin",route:"/doc/symfony/Bundle/EasyAdmin"},{name:"Vich Uploader",route:"/doc/symfony/Bundle/Vich"},{name:"CS-Fixer",route:"/doc/symfony/Bundle/CSFixer"},{name:"GrumPHP",route:"/doc/symfony/Bundle/Grum"},{name:"Paginator",route:"/doc/symfony/Bundle/Paginator"},{name:"Stof Doctrine",route:"/doc/symfony/Bundle/Stof"},{name:"LiipImagine",route:"/doc/symfony/Bundle/Liip"},{name:"Rollerworks",route:"/doc/symfony/Bundle/Rollerworks"},{name:"Gregwar's Captcha",route:"/doc/symfony/Bundle/Gregwar"},{name:"Webpack Encore",route:"/doc/symfony/Bundle/Encore"},{name:"Mailer",route:"/doc/symfony/Bundle/MailHog"}]},{subMenuBundle:[{name:"Font Awesome",route:"/doc/React/Bundle/FontAwesome"},{name:"ClassNames",route:"/doc/React/Bundle/ClassNames"},{name:"Markdown It",route:"/doc/React/Bundle/MD"},{name:"Axios",route:"/doc/React/Bundle/Axios"}]},{subMenuBundle:[{name:"Crons",route:"/doc/Sequelize/Extensions/Crons"}]}].map((function(e){return Object(l.jsx)(_n,{subMenuBundle:e.subMenuBundle.map((function(e,n){return Object(l.jsx)(qn,{name:e.name,route:e.route,onClick:function(){return function(e){if(t[e])r([]);else{var n=t.map((function(e){return!1}));n[e]=!0,r(n)}}(n)},activated:t[n]},e.name)}))})}))}};var Un=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsxs)("div",{className:"DocuSection",children:[Object(l.jsx)(D,{url:"https://symfony.com/doc/current/bundles/EasyAdminBundle/index.html",nom:"Documentation EasyAdmin 3"}),Object(l.jsx)(D,{url:"https://symfony.com/doc/current/bundles/EasyAdminBundle/crud.html",nom:"Documentation Admin CRUD Controller"})]}),Object(l.jsxs)("div",{children:[" \u2022 Installer EasyAdmin :",Object(l.jsx)("div",{className:"Quote",children:"  composer require easycorp/easyadmin-bundle"})]}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er CRUD Controller d\u2019une entit\xe9 :",Object(l.jsx)("div",{className:"Quote",children:"  php bin/console make:admin:crud"})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple de Dashboard",code:K,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple de CRUD",code:Z,language:"javascript"})]})]})};var Bn=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsxs)("div",{className:"DocuSection",children:[Object(l.jsx)(D,{url:"https://github.com/dustin10/VichUploaderBundle",nom:"Documentation VichUploader"}),Object(l.jsx)(D,{url:"https://symfony.com/doc/current/bundles/EasyAdminBundle/crud.html",nom:"Documentation Admin CRUD Controller"})]}),Object(l.jsxs)("div",{children:[" \u2022 Installer VichUploader :",Object(l.jsx)("div",{className:"Quote",children:" composer require vich/uploader-bundle"})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple de config de Vich (config/packages/vich_uploader.yaml)",code:X,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple d'attributs de classe pour Vich",code:ee,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple de m\xe9thodes de classe pour Vich",code:ne,language:"javascript"}),Object(l.jsx)(F,{text:"Utiliser Vich dans un CRUD Controller (Admin)",code:te,language:"javascript"}),Object(l.jsx)(F,{text:"Charger images dans fixtures avec Vich",code:V,language:"javascript"})]})]})};var Qn=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsxs)("div",{className:"DocuSection",children:[Object(l.jsx)(D,{url:"https://github.com/zenstruck/foundry/blob/master/README.md#Documentation",nom:"Documentation Foundry"}),Object(l.jsx)(D,{url:"https://github.com/fzaninotto/Faker",nom:"Documentation Faker"}),Object(l.jsx)(D,{url:"https://github.com/zenstruck/foundry#factories-as-services",nom:"Documentation encodage password pour Factory"})]}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er une forge :",Object(l.jsx)("div",{className:"Quote",children:" bin/console make:factory  "})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple de forge",code:z,language:"javascript"}),Object(l.jsx)(F,{text:"Appeler une forge dans les fixtures",code:U,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple encodage de mot de passe dans la forge",code:L,language:"javascript"})]})]})};var Ln=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://github.com/KnpLabs/KnpPaginatorBundle",nom:"Documentation Paginator"})}),Object(l.jsxs)("div",{children:["\u2022 Installer Paginator :",Object(l.jsx)("div",{className:"Quote",children:" composer require knplabs/knp-paginator-bundle "})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple de fichier de configuration Paginator",code:me,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple d'utilisation de Paginator dans un controller",code:je,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple d'utilisation de Paginator dans un template",code:pe,language:"javascript"})]})]})};var zn=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://packagist.org/packages/friendsofphp/php-cs-fixer",nom:"Documentation CS-Fixer"})}),Object(l.jsxs)("div",{children:[" \u2022 Installer CS-Fixer :",Object(l.jsx)("div",{className:"Quote",children:"composer require friendsofphp/php-cs-fixer"})]}),Object(l.jsxs)("div",{children:[" Controler le code avec CS-fixer :",Object(l.jsx)("div",{className:"Quote",children:"vendor/bin/php-cs-fixer fix --dry-run"})]}),Object(l.jsxs)("div",{children:[" Valider le code avec CS-Fixer :",Object(l.jsx)("div",{className:"Quote",children:"vendor/bin/php-cs-fixer fix "})]}),Object(l.jsx)("div",{className:"Exemple",children:Object(l.jsx)(F,{text:"CS-Fixer script",code:le,language:"javascript"})})]})};var Hn=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://github.com/phpro/grumphp#installation",nom:"Documentation GrumPHP"})}),Object(l.jsxs)("div",{children:["\u2022 Installer GrumPHP :",Object(l.jsx)("div",{className:"Quote",children:" composer require --dev phpro/grumphp "})]}),Object(l.jsxs)("div",{children:["\u2022 G\xe9n\xe9rer le fichier de configuration :",Object(l.jsx)("div",{className:"Quote",children:" vendor/bin/grumphp configure "})]}),Object(l.jsx)("div",{className:"Exemple",children:Object(l.jsx)(F,{text:"Exemple de fichier de configuration GrumPHP",code:ue,language:"javascript"})})]})};var Vn=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://symfony.com/doc/current/bundles/StofDoctrineExtensionsBundle/index.html",nom:"Documentation Stof"})}),Object(l.jsxs)("div",{children:[" \u2022 Installer Stof :",Object(l.jsx)("div",{className:"Quote",children:"composer require stof/doctrine-extensions-bundle"})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple de configuration de Stof",code:be,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple utilisation de sluggable",code:he,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple utilisation de blameable",code:xe,language:"javascript"})]})]})};var Gn=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://github.com/liip/LiipImagineBundle",nom:"Documentation LiipImagine"})}),Object(l.jsxs)("div",{children:[" \u2022 Installer LiipImagineBundle :",Object(l.jsx)("div",{className:"Quote",children:"composer require liip/imagine-bundle"})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple de configuration de Liip",code:ge,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple utilisation de Liip dans un template",code:Oe,language:"javascript"})]})]})};var Jn=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://github.com/rollerworks/PasswordStrengthBundle",nom:"Documentation Rollerworks"})}),Object(l.jsxs)("div",{children:[" \u2022 Installer Rollerworks :",Object(l.jsx)("div",{className:"Quote",children:"composer require rollerworks/password-strength-bundle"})]}),Object(l.jsx)("div",{className:"Exemple",children:Object(l.jsx)(F,{text:"Exemple de requirements validation dans un formulaire",code:fe,language:"javascript"})})]})};var Wn=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://github.com/Gregwar/CaptchaBundle",nom:"Documentation Gregwar's Captcha"})}),Object(l.jsxs)("div",{children:["\u2022 Installer Gregwar's Captcha :",Object(l.jsx)("div",{className:"Quote",children:"  composer require gregwar/captcha-bundle "})]}),Object(l.jsx)("div",{className:"Exemple",children:Object(l.jsx)(F,{text:"Exemple d'utilisation du captcha",code:ve,language:"javascript"})})]})};var Yn=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://symfony.com/doc/4.4/frontend/encore/installation.html",nom:"Documentation Webpack Encore"})}),Object(l.jsxs)("div",{children:[" \u2022 Installer Encore :",Object(l.jsxs)("div",{className:"Info",children:["N\xe9c\xe9ssite de lancer ",Object(l.jsx)("i",{children:"npm install"})," apr\xe8s l'installation"]}),Object(l.jsx)("div",{className:"Quote",children:"  composer require symfony/webpack-encore-bundle"})]}),Object(l.jsx)("div",{className:"Exemple",children:Object(l.jsx)(F,{text:"Utilise Encore dans les templates",code:ke,language:"javascript"})})]})};var Kn=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://github.com/mailhog/MailHog",nom:"Documentation MailHog"})}),Object(l.jsxs)("div",{children:["\u2022 Installer MailHog :",Object(l.jsxs)("div",{className:"Quote",children:["sudo apt-get -y install golang-go",Object(l.jsx)("br",{}),"go get github.com/mailhog/MailHog"]})]}),Object(l.jsxs)("div",{children:["\u2022 Rendre MailHog executable (Linux) :",Object(l.jsx)("div",{className:"Quote",children:"chmod a+x ./MailHog_linux_amd64_"})]}),Object(l.jsxs)("div",{children:["\u2022 Lancer MailHog (Linux) :",Object(l.jsx)("div",{className:"Quote",children:"./MailHog_linux_amd64_"})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Appeler Mailer dans le .env",code:Te,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple de configuration de mailer",code:Re,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple d'utilisation du mailer dans un controller",code:Ae,language:"javascript"})]})]})};var Zn=function(){var e=Mn().allBundleSection;return Object(l.jsx)(i.a,{children:Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:"Bundles Symfony"}),e[0],Object(l.jsxs)(o.c,{children:[Object(l.jsx)(o.a,{path:"/doc/symfony/Bundle/Factory",children:Object(l.jsx)(Qn,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Bundle/EasyAdmin",children:Object(l.jsx)(Un,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Bundle/Vich",children:Object(l.jsx)(Bn,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Bundle/CSFixer",children:Object(l.jsx)(zn,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Bundle/Grum",children:Object(l.jsx)(Hn,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Bundle/Paginator",children:Object(l.jsx)(Ln,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Bundle/Stof",children:Object(l.jsx)(Vn,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Bundle/Liip",children:Object(l.jsx)(Gn,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Bundle/Rollerworks",children:Object(l.jsx)(Jn,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Bundle/Gregwar",children:Object(l.jsx)(Wn,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Bundle/Encore",children:Object(l.jsx)(Yn,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Bundle/MailHog",children:Object(l.jsx)(Kn,{})})]})]})})};var Xn=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://fontawesome.com/icons?d=gallery",nom:"FontAwesome Ic\xf4nes"})}),Object(l.jsxs)("div",{children:["\u2022 Installer les paquets pour ic\xf4nes Font Awesome : ",Object(l.jsxs)("div",{className:"Quote",children:[" npm install @fortawesome/fontawesome-svg-core \\",Object(l.jsx)("br",{}),"@fortawesome/free-solid-svg-icons \\",Object(l.jsx)("br",{}),"@fortawesome/react-fontawesome"]})]}),Object(l.jsxs)("div",{children:["\u2022 Exemple d'import d'ic\xf4nes : ",Object(l.jsxs)("div",{className:"Quote",children:["import { FontAwesomeIcon } from '@fortawesome/react- fontawesome'",Object(l.jsx)("br",{}),"import { faTimes, faCircle } from '@fortawesome/free-solid-svg-icons'"]})]}),Object(l.jsxs)("div",{children:["\u2022 Mettre icons dans des constantes : ",Object(l.jsx)("div",{className:"Quote",children:"const icon1 = <FontAwesomeIcon icon={ faTimes } />"})]})]})};var et=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://www.npmjs.com/package/classnames",nom:"Documentation ClassNames"})}),Object(l.jsxs)("div",{children:["\u2022 Installer ClassNames : ",Object(l.jsx)("div",{className:"Quote",children:"npm install classnames"})]}),Object(l.jsxs)("div",{children:["\u2022 Importer ClassNames : ",Object(l.jsx)("div",{className:"Quote",children:"import classNames from 'classnames';"})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple utilisation ClassNames",code:sn,language:"html"}),Object(l.jsx)(F,{text:"Exemple utilisation ClassNames bis",code:rn,language:"html"})]})]})};var nt=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://github.com/markdown-it/markdown-it",nom:"Documentation MarkDown It"})}),Object(l.jsxs)("div",{children:["\u2022 Installer Markdown It : ",Object(l.jsx)("div",{className:"Quote",children:"npm install markdown-it --save"})]}),Object(l.jsx)("div",{className:"Exemple",children:Object(l.jsx)(F,{text:"Exemple d\u2019utilisation de Markdown-It",code:an,language:"javascript"})})]})};var tt=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://www.npmjs.com/package/axios",nom:"Documentation Axios"})}),Object(l.jsxs)("div",{children:["\u2022 Installer Axios : ",Object(l.jsx)("div",{className:"Quote",children:" npm install axios "})]}),Object(l.jsxs)("div",{children:["\u2022 Importer Axios : ",Object(l.jsx)("div",{className:"Quote",children:" const axios = require('axios'); "})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple utilisation m\xe9thode GET",code:Nn,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple utilisation m\xe9thode PUT",code:Cn,language:"javascript"})]})]})};var st=function(){var e=Mn().allBundleSection;return Object(l.jsx)(i.a,{children:Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:"Bundle React"}),e[1],Object(l.jsxs)(o.c,{children:[Object(l.jsx)(o.a,{path:"/doc/React/Bundle/FontAwesome",children:Object(l.jsx)(Xn,{})}),Object(l.jsx)(o.a,{path:"/doc/React/Bundle/ClassNames",children:Object(l.jsx)(et,{})}),Object(l.jsx)(o.a,{path:"/doc/React/Bundle/MD",children:Object(l.jsx)(nt,{})}),Object(l.jsx)(o.a,{path:"/doc/React/Bundle/Axios",children:Object(l.jsx)(tt,{})})]})]})})};var rt=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Voters"}),Object(l.jsxs)("div",{className:"DocuSection",children:[Object(l.jsx)(D,{url:"ttps://symfony.com/doc/current/security/voters.html",nom:"Documentation Voters"}),Object(l.jsx)(D,{url:"https://symfony.com/doc/current/security.html#checking-to-see-if-a-user-is-logged-in-is-authenticated-fully",nom:"Documentation Access Control"})]}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er un voter :",Object(l.jsx)("div",{className:"Quote",children:" bin/console make:voter"})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple de voter",code:ye,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple utlisation d'un voter dans controller",code:Ne,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple utlisation d'un voter dans un template",code:Ce,language:"javascript"})]})]})};var at=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Event"}),Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://symfony.com/doc/current/event_dispatcher.html",nom:"Documentation Event"})}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple d'appel d'un event dans un controller",code:Ee,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple d'event",code:Se,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple de subscriber",code:$e,language:"javascript"})]})]})};var ct=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:"Console"}),Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://symfony.com/doc/4.4/console.html",nom:"Documentation Console"})}),Object(l.jsxs)("div",{children:["\u2022 Cr\xe9er une commande",Object(l.jsx)("div",{className:"Quote",children:" bin/console make:command "})]}),Object(l.jsxs)("div",{children:["\u2022 Executer une commande",Object(l.jsx)("div",{className:"Quote",children:" bin/console nomDeLaCommande"})]}),Object(l.jsx)("div",{className:"Exemple",children:Object(l.jsx)(F,{text:"Exemple de commande",code:De,language:"javascript"})})]})},it="\nrequire('./cronFile');\n".trim(),ot="\nconst sequelize = require('./src/db/sequelize');\nconst { QueryTypes } = require('sequelize');\nvar CronJob = require('cron').CronJob;\n\n// Cron executer tout les mois\nconst job = new CronJob('0 0 1 * *', async function () {\n\n    try {\n        ...\n    } catch (error) {\n        console.log(error.message);\n    };\n\n});\n\njob.start();\n".trim(),lt=('\ntry {\n    // Ici supprime tout les enreigstrements d\'une table\n    // qui ont plus de 10 ans\n    await sequelize.query("DELETE FROM table_name WHERE createdAt <=DATE_SUB(NOW(), INTERVAL 10 YEAR)",\n        {\n            type: QueryTypes.DELETE\n        });\n} catch (error) {\n    console.log(error.message);\n};\n'.trim(),"\nconst {models} = require(\"./index\");\nmodule.exports = (sequelize, DataTypes) => {\n    const User =  sequelize.define('User', {\n        user_id: {\n            type: DataTypes.INTEGER,\n            primaryKey: true,\n            autoIncrement: true\n        },\n        login: {\n            type: DataTypes.STRING,\n            allowNull:false,\n            validate : {\n                notEmpty:{msg: `User : Login cannot be empty !`},\n                notNull: {msg: `User : Login cannot be NULL!`}\n            },\n            unique: {\n                args : true,\n                msg: 'User : Login already exist!'\n            }\n        },\n        password: {\n            type: DataTypes.STRING,\n            allowNull:false,\n            validate : {\n                notEmpty:{msg: `User : Password cannot be empty !`},\n                notNull: {msg: `User : Password cannot be NULL!`}\n            }\n        },\n        country_id: {\n            type: DataTypes.INTEGER,\n            allowNull:true,\n            validate : {\n                notEmpty:{msg:`User : Country_id cannot be empty !`}\n            }\n        },\n        birthday: {\n            type: DataTypes.DATEONLY,\n            allowNull:false,\n            validate : {\n                notEmpty:{msg: `User : birthday cannot be empty !`},\n                notNull: {msg: `User : birthday cannot be NULL!`}\n            }\n        },\n        country_id: {\n            type: DataTypes.INTEGER,\n            allowNull:true,\n            validate : {\n                notEmpty:{msg:`User : Country_id cannot be empty !`}\n            }\n        }\n    }, \n    {\n        tableName: 'users',\n        timestamps: true,\n        hooks: {\n            afterCreate: (user) => {\n                delete user.dataValues.password;\n            },\n            afterUpdate: (user) => {\n                delete user.dataValues.password;\n            }\n        }\n\n    });\n    User.associate = models => {\n\n        User.belongsTo(models.Country,{\n            as: 'country',\n            foreignKey:'country_id',\n            sourceKey: 'country_id',\n            timestamps: false,\n            onDelete:'SET NULL'\n        });\n\n        User.hasMany(models.Task,{\n            foreignKey:'user_id', \n            sourceKey:'user_id'\n        });\n    }\n    return User;\n} \n".trim()),dt="\nconst { ValidationError, UniqueConstraintError } = require('sequelize');\nconst { models } = require('../../models');\nmodule.exports = (app) => {\n\n    app.post('/api/users', async (req, res) => {\n\n        try {\n\n            const User = await models['User'].create(req.body);\n            const message = `User : ${User.user_id} has been created.`;\n            res.json({ message, data: User })\n\n        } catch (error) {\n\n            if (error instanceof ValidationError) {\n                return res.status(400).json({ message: error.message, data: error })\n            }\n            if (error instanceof UniqueConstraintError) {\n                return res.status(400).json({ message: error.message, data: error })\n            }\n            const message = `Service not available. Please retry later.`;\n            res.status(500).json({ message, data: error });\n\n        }\n    });\n}\n".trim(),ut="\nconst { models } = require('../../models');\nconst { Op } = require('sequelize');\nmodule.exports = (app) => {\n\n    app.get('/api/users', async (req, res) => {\n        \n        try {\n\n            const parameters = {};\n            parameters.where = {};\n\n            parameters.order = ['lastname'];\n            parameters.attributes = { exclude: ['password'] };\n            parameters.include = [\n            {\n                model: models['Country'],\n                as: 'country',\n                attributes: [\"label\"]\n            }];\n\n            // recherche par pays\n            if (req.query.country) {\n                const country = parseInt(req.query.country);\n                if (isNaN(country)) {\n                    const message = `Country parameter should be an integer.`;\n                    return res.status(400).json({ message })\n                }\n                parameters.where.country_id = country;\n            }\n\n            // Parameter : LIMIT\n            if (req.query.limit) {\n                const limit = parseInt(req.query.limit);\n                if (isNaN(limit)) {\n                    const message = `Limit parameter should be an integer.`;\n                    return res.status(400).json({ message })\n                }\n                parameters.limit = limit;\n            }\n\n            // Parameter : OFFSET\n            if (req.query.offset) {\n                const offset = parseInt(req.query.offset);\n                if (isNaN(offset)) {\n                    const message = `Offset parameter should be an integer.`;\n                    return res.status(400).json({ message })\n                }\n                parameters.offset = parseInt(req.query.offset);\n            }\n\n            const Users = await models['User'].findAndCountAll(parameters);\n            const message = `${Users.count} users found`;\n            res.json({ message, data: Users.rows });\n        }\n\n        catch (error) {\n\n            const message = `Service not available. Please retry later.`;\n            res.status(500).json({ message, data: error })\n        }\n    });\n}\n".trim(),mt="\nconst { models } = require('../../models');\nmodule.exports = (app) => {\n\n    app.get('/api/users/:user_id', async (req, res) => {\n\n        try {\n\n            const parameters = {};\n            parameters.where = { \n                user_id: req.params.user_id\n            };\n            parameters.include = [\n                {\n                    model: models['Country'],\n                    as: 'country',\n                    attributes: [\"label\"]\n                }\n            ];\n\n            parameters.attributes = {exclude:['password']};\n\n            // On peut ajouter des informations suppl\xe9mentaires\n            // \xe0 la r\xe9ponse avec les req.query, ici par exemple\n            // avec la route /user/:user_id?tasks=true\n            if (req.query.tasks === \"true\") {\n                const addTasks = {\n                    model: models['Task'],\n                    where: { user_id: req.params.user_id }\n                };\n                parameters.include.push(addTasks);\n            }\n\n            const User = await models['User'].findOne(parameters);\n            if (User === null) {\n                const message = `User doesn't exist.Retry with an other user_id.`;\n                return res.status(404).json({ message });\n            }\n            const message = `Users found`;\n            res.json({ message, data: User });\n        }\n\n        catch (error) {\n\n            const message = `Service not available. Please retry later.`;\n            res.status(500).json({ message, data: error });\n\n        }\n    });\n}\n".trim(),jt="\nconst { ValidationError, UniqueConstraintError } = require('sequelize');\nconst { models } = require('../../models');\n\nmodule.exports = (app) => {\n    app.post('/api/users/:user_id/tasks', async (req, res) => {\n\n        async function createUser() {\n            try {\n                const userCreated = await models['User'].create(req.body);\n                return userCreated;\n            } catch (error) {\n                if (error instanceof ValidationError) {\n                    return res.status(400).json({ message: error.message, data: error })\n                }\n                if (error instanceof UniqueConstraintError) {\n                    return res.status(400).json({ message: error.message, data: error })\n                }\n                const message = `An error has occured creating the User.`;\n                return res.status(500).json({ message, data: error.message })\n            }\n        }\n\n        async function createUserDefaultTask(user) {\n            try {\n                const defaultTask = {\n                    user_id: user.user_id,\n                    name: \"default\"\n                }\n                await models['Task'].create(defaultTask);\n            } catch (error) {\n                if (error instanceof ValidationError) {\n                    return res.status(400).json({ message: error.message, data: error })\n                }\n                if (error instanceof UniqueConstraintError) {\n                    return res.status(400).json({ message: error.message, data: error })\n                }\n                const message = `An error has occured creating the default task.`;\n                return res.status(500).json({ message, data: error.message })\n            }\n        }\n\n        try {\n            const createdUser = await createUser();\n            await createUserDefaultTask(createdUser);\n\n            const message = `User ${createdUser.user_id} and its default task have been created successfuly`\n            res.json({ message, data: sessionUserCreated });\n\n        } catch (error) {\n\n            const message = `An error has occured.`;\n            return res.status(500).json({ message, data: error.message })\n        }\n    }\n    );\n}\n".trim();"\n\n".trim();var pt=function(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://www.npmjs.com/package/cron",nom:"Documentation Node-Cron"})}),Object(l.jsxs)("div",{children:["\u2022 Installer Node-Cron : ",Object(l.jsx)("div",{className:"Quote",children:" npm install cron "})]}),Object(l.jsxs)("div",{children:["\u2022 Importer Node-Cron : ",Object(l.jsx)("div",{className:"Quote",children:" var CronJob = require('cron').CronJob; "})]}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple d'import d'un cron (app.js)",code:it,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple cron",code:ot,language:"javascript"})]})]})};var bt=function(){var e=Mn().allBundleSection;return Object(l.jsx)(i.a,{children:Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:"Extension Sequelize"}),e[2],Object(l.jsx)(o.c,{children:Object(l.jsx)(o.a,{path:"/doc/Sequelize/Extensions/Crons",children:Object(l.jsx)(pt,{})})})]})})};var ht=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Mod\xe8les"}),Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://sequelize.org/master/manual/model-basics.html",nom:"Documentation Mod\xe8les Sequelizer"})}),Object(l.jsx)("div",{className:"Exemple",children:Object(l.jsx)(F,{text:"Exemple de mod\xe8le pour la BD (src\\models\\user.js)",code:lt,language:"javascript"})})]})};var xt=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Routes"}),Object(l.jsx)("div",{className:"DocuSection",children:Object(l.jsx)(D,{url:"https://sequelize.org/master/manual/model-querying-basics.html",nom:"Documentation Routes Sequelizer"})}),Object(l.jsxs)("div",{className:"Exemple",children:[Object(l.jsx)(F,{text:"Exemple de route create (src\\routes\\createUser.js)",code:dt,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple de route findAndCountAll (src\\routes\\getAllUsers.js)",code:ut,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple de route findOne (src\\routes\\getUserByPk.js)",code:mt,language:"javascript"}),Object(l.jsx)(F,{text:"Exemple de route avec plusieurs actions",code:jt,language:"javascript"})]})]})};var gt=function(){return Object(l.jsxs)("div",{className:"Page",children:[Object(l.jsx)("h1",{className:"TitlePage",children:" Mocks"}),Object(l.jsx)("div",{className:"DocuSection"}),Object(l.jsx)("div",{children:"Work In Progress"})]})};t(40);var Ot=function(){return Object(l.jsx)(l.Fragment,{children:Object(l.jsx)("div",{className:"doc",children:Object(l.jsxs)(i.a,{children:[Object(l.jsx)(k,{}),Object(l.jsxs)(o.c,{children:[Object(l.jsx)(o.a,{path:"/doc/symfony/installation",children:Object(l.jsx)(w,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Controller",children:Object(l.jsx)(Ie,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Twig",children:Object(l.jsx)(qe,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Doctrine",children:Object(l.jsx)(Pe,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/User",children:Object(l.jsx)(_e,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Migration",children:Object(l.jsx)(Me,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Fixtures",children:Object(l.jsx)(Ue,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Formulaire",children:Object(l.jsx)(Be,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Api",children:Object(l.jsx)(Qe,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Tests",children:Object(l.jsx)(Le,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Voters",children:Object(l.jsx)(rt,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Event",children:Object(l.jsx)(at,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Console",children:Object(l.jsx)(ct,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Conseils",children:Object(l.jsx)(ze,{})}),Object(l.jsx)(o.a,{path:"/doc/symfony/Bundle",children:Object(l.jsx)(Zn,{})}),Object(l.jsx)(o.a,{path:"/doc/React/InstallationR",children:Object(l.jsx)(He,{})}),Object(l.jsx)(o.a,{path:"/doc/React/Props",children:Object(l.jsx)(En,{})}),Object(l.jsx)(o.a,{path:"/doc/React/Hooks",children:Object(l.jsx)(Sn,{})}),Object(l.jsx)(o.a,{path:"/doc/React/EffetBord",children:Object(l.jsx)($n,{})}),Object(l.jsx)(o.a,{path:"/doc/React/RouterR",children:Object(l.jsx)(kn,{})}),Object(l.jsx)(o.a,{path:"/doc/React/Fetch",children:Object(l.jsx)(Dn,{})}),Object(l.jsx)(o.a,{path:"/doc/React/ReduxR",children:Object(l.jsx)(Tn,{})}),Object(l.jsx)(o.a,{path:"/doc/React/Thunk",children:Object(l.jsx)(Pn,{})}),Object(l.jsx)(o.a,{path:"/doc/React/Divers",children:Object(l.jsx)(In,{})}),Object(l.jsx)(o.a,{path:"/doc/React/Bundle",children:Object(l.jsx)(st,{})}),Object(l.jsx)(o.a,{path:"/doc/Sequelize/Extensions",children:Object(l.jsx)(bt,{})}),Object(l.jsx)(o.a,{path:"/doc/Sequelize/Routes",children:Object(l.jsx)(xt,{})}),Object(l.jsx)(o.a,{path:"/doc/Sequelize/Mocks",children:Object(l.jsx)(gt,{})}),Object(l.jsx)(o.a,{path:"/doc/Sequelize/Modeles",children:Object(l.jsx)(ht,{})}),Object(l.jsx)(o.a,{path:"/doc/Autres/FuncJS",children:Object(l.jsx)(Rn,{})}),Object(l.jsx)(o.a,{path:"/doc/Autres/FuncPHP",children:Object(l.jsx)(An,{})}),Object(l.jsx)(o.a,{path:"/doc/Autres/Bonus",children:Object(l.jsx)(Fn,{})}),Object(l.jsx)(o.a,{path:"/doc",children:Object(l.jsx)(Fe,{})})]})]})})})};t(41);var ft=function(){return Object(l.jsx)(l.Fragment,{})};var vt=function(){Object(o.f)();var e=[{image:"RoyalFamilyBoat1.png",imageAlt:"Royal Family Boat",route:"royal-family-boat",color:"#9ff0ca"},{image:"KeetasEnd1.png",imageAlt:"Keeta's End",route:"keeta-end",color:"#f0c39f"},{image:"EclipseTemple1.png",imageAlt:"Eclipse Temple",route:"eclipse-temple",color:"#9fd9f0"},{image:"DarkIceCathedrale1.png",imageAlt:"Dark Ice Cathedrale",route:"dark-ice-cathedrale",color:"#e0cea5"},{image:"GoronSanctum1.png",imageAlt:"Goron Sanctum",route:"goron-sanctum",color:"#e0cea5"},{image:"JDR1.png",imageAlt:"Meanwhile in Hyrule",route:"meanwhile-in-hyrule",color:"#e0cea5"},{image:"TheUndergroundForest1.png",imageAlt:"The Underground Forest",route:"the-underground-forest",color:"#e0cea5"},{image:"FrozenShore1.png",imageAlt:"The Frozen Shore",route:"the-frozen-shore",color:"#e0cea5"},{image:"GreatDekuReef1.png",imageAlt:"Great Deku Reef",route:"great-deku-reef",color:"#e0cea5"},{image:"GoronCavern1.png",imageAlt:"Goron Cavern",route:"goron-cavern",color:"#e0cea5"},{image:"BlackSandCavern1.png",imageAlt:"Black Sand Cavern",route:"black-sand-cavern",color:"#e0cea5"},{image:"FungalBlight1.png",imageAlt:"Fungal Blight",route:"fungal-blight",color:"#e0cea5"},{image:"SacredTree1.png",imageAlt:"Sacred Tree",route:"sacred-tree",color:"#e0cea5"},{image:"Wetlands1.png",imageAlt:"Wetlands",route:"wetlands",color:"#e0cea5"},{image:"WetlandsHouse1.png",imageAlt:"Wetlands House",route:"wetlands-house",color:"#e0cea5"},{image:"GrottoWoods1.png",imageAlt:"Grotto Woods",route:"grotto-woods",color:"#e0cea5"},{image:"HotSpringHole1.png",imageAlt:"Hot Spring Hole",route:"hot-spring-hole",color:"#e0cea5"},{image:"HotSpringValley1.png",imageAlt:"Hot Spring Valley",route:"hot-spring-valley",color:"#e0cea5"},{image:"HotSpringTourizm1.png",imageAlt:"Hot Spring Tourizm",route:"hot-spring-tourizm",color:"#e0cea5"},{image:"HotSpringGrotto1.png",imageAlt:"Hot Spring Grottos",route:"hot-spring-grotto",color:"#e0cea5"},{image:"PurpleBog1.png",imageAlt:"Purple Bog",route:"purple-bog",color:"#e0cea5"},{image:"FungalBlightGrotto1.png",imageAlt:"Fungal Blight Grottos",route:"fungal-blight-grottos",color:"#e0cea5"},{image:"DarkGrotto1.png",imageAlt:"Dark Grotto",route:"dark-grotto",color:"#e0cea5",component:Object(l.jsx)(ft,{})},{image:"TheBadMaw1.png",imageAlt:"The Bad Maw",route:"the-as-maw",color:"#e0cea5"},{image:"CoastTown1.png",imageAlt:"Coast Town",route:"coast-town",color:"#e0cea5"}],n=e.map((function(e){return Object(l.jsx)("div",{className:"item-gallery-layer",style:{backgroundImage:'url("./imgFolio/'.concat(e.image,'")')},children:Object(l.jsx)("article",{className:"item-gallery-link",style:{"--hover-color":e.color},children:Object(l.jsx)("h1",{className:"item-gallery-title",style:{"--title-color":e.color},children:e.imageAlt})})},e.route)})),t=e.map((function(e){return Object(l.jsx)(o.a,{path:e.route,children:e.component},e.route)}));return Object(l.jsx)(l.Fragment,{children:Object(l.jsxs)("div",{className:"gallery",children:[Object(l.jsx)(i.a,{children:Object(l.jsx)(o.c,{children:t})}),n]})})};var yt=function(){return Object(l.jsx)(l.Fragment,{children:Object(l.jsx)(i.a,{children:Object(l.jsxs)(o.c,{children:[Object(l.jsx)(o.a,{exact:!0,path:"/",children:Object(l.jsx)(y,{})}),Object(l.jsx)(o.a,{path:"/doc",children:Object(l.jsx)(Ot,{})}),Object(l.jsx)(o.a,{path:"/gallery",children:Object(l.jsx)(vt,{})})]})})})};var Nt=function(){return Object(l.jsx)(yt,{})};c.a.render(Object(l.jsx)(r.a.StrictMode,{children:Object(l.jsx)(Nt,{})}),document.getElementById("root"))}},[[42,1,2]]]);
//# sourceMappingURL=main.1218ad85.chunk.js.map